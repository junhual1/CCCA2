{"ast":null,"code":"import _regeneratorRuntime from \"/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport axios from 'axios';\nimport Chart from '../components/Chart.vue';\nexport default {\n  name: 'Result',\n  components: {\n    Chart: Chart\n  },\n  data: function data() {\n    return {\n      zoom_size: null,\n      twi_scenario: null,\n      sudo_scenario: null,\n      scenario: null,\n      location: null,\n      isDropdownOpen1: false,\n      isDropdownOpen2: false,\n      isDropdownOpen3: false,\n      map1: null,\n      map2: null,\n      circles1: [],\n      circles2: [],\n      //   keyword: null,\n      keywordTweets: null,\n      keywordSudo: null,\n      center: null,\n      twi_data: null,\n      sudo_data: null,\n      twi_percentage: [],\n      twi_max: null,\n      twi_min: null,\n      sudo_max: null,\n      sudo_min: null,\n      twi_color: null\n    };\n  },\n  created: function created() {\n    this.scenario = this.$route.params.scenario;\n    this.twi_scenario = this.scenario.split('-')[0];\n    this.sudo_scenario = this.scenario.split('-')[1];\n    this.location = this.$route.params.state;\n  },\n  watch: {\n    \"$route.params.state\": function $routeParamsState(newValue) {\n      this.location = newValue;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var twiResponse, sudoResponse;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"http://127.0.0.1:5000/api_twi_state_city/\".concat(_this.twi_scenario, \"/\").concat(_this.location));\n          case 3:\n            twiResponse = _context.sent;\n            _this.center = twiResponse.data.state;\n            _this.twi_data = twiResponse.data.results;\n            _this.twi_data.forEach(function (twi) {\n              _this.twi_percentage.push(twi.percentage);\n            });\n            _this.twi_max = Math.max.apply(Math, _toConsumableArray(_this.twi_percentage));\n            _this.twi_min = Math.min.apply(Math, _toConsumableArray(_this.twi_percentage));\n            _context.next = 14;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Failed to fetch Twitter data:', _context.t0);\n          case 14:\n            _context.prev = 14;\n            _context.next = 17;\n            return axios.get(\"http://127.0.0.1:5000/api_sudo_state_city/\".concat(_this.sudo_scenario, \"/\").concat(_this.location));\n          case 17:\n            sudoResponse = _context.sent;\n            _this.sudo_data = sudoResponse.data.results;\n            _this.sudo_max = _this.sudo_data[0].percentage;\n            _this.sudo_min = _this.sudo_data[_this.sudo_data.length - 1].percentage;\n            _context.next = 26;\n            break;\n          case 23:\n            _context.prev = 23;\n            _context.t1 = _context[\"catch\"](14);\n            console.error('Failed to fetch Sudo data:', _context.t1);\n          case 26:\n            _this.initMap();\n            _this.createCircles();\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 11], [14, 23]]);\n    }))();\n  },\n  methods: {\n    // toggleDropdown1() {\n    //   this.twi_scenario = \"unemployment\"\n    //   this.isDropdownOpen1 = !this.isDropdownOpen1;\n    // },\n    // toggleDropdown2() {\n    //   this.twi_scenario = \"agism\"\n    //   this.isDropdownOpen2 = !this.isDropdownOpen2;\n    // },\n    // toggleDropdown3() {\n    //   this.twi_scenario = \"sexism\"\n    //   this.isDropdownOpen3 = !this.isDropdownOpen3;\n    // },\n    initMap: function initMap() {\n      // const state = this.$route.params.state\n      // if (this.location === 'victoria') {\n\n      // }\n      this.map1 = new google.maps.Map(document.getElementById('map1'), {\n        // center: { lat: -25.2744, lng: 133.7751 },\n        center: this.center,\n        zoom: 7,\n        gestureHandling: \"none\",\n        disableDefaultUI: true\n      });\n      this.map2 = new google.maps.Map(document.getElementById('map2'), {\n        // center: { lat: -25.2744, lng: 133.7751 },\n        center: this.center,\n        zoom: 7,\n        gestureHandling: \"none\",\n        disableDefaultUI: true\n      });\n      // }\n    },\n    createCircles: function createCircles() {\n      var _this2 = this;\n      this.twi_data.forEach(function (tweet) {\n        if (_this2.location !== 'australiancapitalterritory' && _this2.location !== 'northernterritory' && _this2.location !== 'offshoreterritories') {\n          if (tweet.rank === 1) {\n            _this2.twi_color = '#ff6347';\n          } else if (tweet.rank === -1) {\n            _this2.twi_color = '#1e90ff';\n          } else {\n            _this2.twi_color = '#696969';\n          }\n        } else {\n          _this2.twi_color = '#696969';\n        }\n        var circleOptions = {\n          strokeColor: _this2.twi_color,\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: _this2.twi_color,\n          fillOpacity: 0.35,\n          map: _this2.map1,\n          center: new google.maps.LatLng(tweet.lat, tweet.lng),\n          radius: 9 * (tweet.percentage - _this2.twi_min) / (_this2.twi_max - _this2.twi_min) * 25000 / Math.pow(7, 1 / 2)\n        };\n        var circle1 = new google.maps.Circle(circleOptions);\n        circle1.addListener('mouseover', function () {\n          _this2.showInfoWindow1(circle1, tweet.city, tweet.count, tweet.total, tweet.percentage);\n        });\n        circle1.addListener('mouseout', function () {\n          _this2.hideInfoWindow();\n        });\n        _this2.circles1.push(circle1);\n      });\n      this.sudo_data.forEach(function (sudo) {\n        var circleOptions = {\n          strokeColor: '#404040',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#808080',\n          fillOpacity: 0.35,\n          map: _this2.map2,\n          center: new google.maps.LatLng(sudo.lat, sudo.lng),\n          // radius: (sudo.percentage - this.sudo_min * 0.9) ** 2 * 50 \n          radius: 9 * (sudo.percentage - _this2.sudo_min) / (_this2.sudo_max - _this2.sudo_min) * 25000 / Math.pow(7, 1 / 2)\n        };\n        var circle2 = new google.maps.Circle(circleOptions);\n        circle2.addListener('mouseover', function () {\n          _this2.showInfoWindow2(circle2, sudo.city, sudo.count, sudo.total, sudo.percentage);\n        });\n        circle2.addListener('mouseout', function () {\n          _this2.hideInfoWindow();\n        });\n        _this2.circles2.push(circle2);\n      });\n    },\n    showInfoWindow1: function showInfoWindow1(circle, name, count, total, percentage) {\n      var infoWindow1 = new google.maps.InfoWindow({\n        content: \"Name: \".concat(name, \"<br>Count: \").concat(count, \"<br>Total: \").concat(total, \"<br>Percentage: \").concat(percentage.toFixed(3), \"%\")\n        // disableAutoPan: true\n      });\n\n      infoWindow1.setPosition(circle.getCenter());\n      infoWindow1.open(this.map1);\n      this.infoWindow = infoWindow1;\n    },\n    showInfoWindow2: function showInfoWindow2(circle, name, count, total, percentage) {\n      var infoWindow2 = new google.maps.InfoWindow({\n        content: \"Name: \".concat(name, \"<br>Count: \").concat(count, \"<br>Ageing population: \").concat(total, \"<br>Ageing population percentage: \").concat(percentage.toFixed(3), \"%\")\n        // disableAutoPan: true\n      });\n\n      infoWindow2.setPosition(circle.getCenter());\n      infoWindow2.open(this.map2);\n      this.infoWindow = infoWindow2;\n    },\n    hideInfoWindow: function hideInfoWindow() {\n      if (this.infoWindow) {\n        this.infoWindow.close();\n      }\n    },\n    confirm: function confirm() {\n      var new_twi_scenario = this.twi_scenario;\n      var new_sudo_scenario = this.sudo_scenario;\n      var new_state = this.location;\n      try {\n        var new_twiResponse = axios.get(\"http://127.0.0.1:5000/api_twi_state_city/\".concat(new_twi_scenario, \"/\").concat(new_state));\n        this.center = new_twiResponse.data.state;\n        this.twi_data = new_twiResponse.data.results;\n      } catch (error) {\n        console.error('Failed to fetch Twitter data:', error);\n      }\n      try {\n        var new_sudoResponse = axios.get(\"http://127.0.0.1:5000/api_sudo_state_city/\".concat(new_sudo_scenario, \"/\").concat(new_state));\n        this.sudo_data = new_sudoResponse.data.results;\n      } catch (error) {\n        console.error('Failed to fetch Sudo data:', error);\n      }\n      this.initMap();\n      this.createCircles();\n      var scenario = this.twi_scenario + '-' + this.sudo_scenario;\n      // const new_state = this.location\n      // this.$router.push({ name: 'results', params: { scenario: scenario, state: new_state } })\n      this.$router.push({\n        path: \"/\".concat(scenario, \"/\").concat(new_state),\n        query: {\n          scenario: scenario,\n          new_state: new_state\n        }\n      });\n\n      // this.$router.push({ path: `/${scenario}/${new_state}` });\n      // window.location.reload();\n    }\n  }\n};","map":{"version":3,"names":["axios","Chart","name","components","data","zoom_size","twi_scenario","sudo_scenario","scenario","location","isDropdownOpen1","isDropdownOpen2","isDropdownOpen3","map1","map2","circles1","circles2","keywordTweets","keywordSudo","center","twi_data","sudo_data","twi_percentage","twi_max","twi_min","sudo_max","sudo_min","twi_color","created","$route","params","split","state","watch","$routeParamsState","newValue","mounted","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","twiResponse","sudoResponse","wrap","_callee$","_context","prev","next","get","concat","sent","results","forEach","twi","push","percentage","Math","max","apply","_toConsumableArray","min","t0","console","error","length","t1","initMap","createCircles","stop","methods","google","maps","Map","document","getElementById","zoom","gestureHandling","disableDefaultUI","_this2","tweet","rank","circleOptions","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","map","LatLng","lat","lng","radius","pow","circle1","Circle","addListener","showInfoWindow1","city","count","total","hideInfoWindow","sudo","circle2","showInfoWindow2","circle","infoWindow1","InfoWindow","content","toFixed","setPosition","getCenter","open","infoWindow","infoWindow2","close","confirm","new_twi_scenario","new_sudo_scenario","new_state","new_twiResponse","new_sudoResponse","$router","path","query"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/views/Results.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"menu\">\n      <div class=\"current\">      \n        <span>Current Scenario: {{ $route.params.scenario }}</span>\n        <!-- <span>Current Sudo Scenario: {{ $route.params.sudo_scenario }}</span> -->\n        <!-- <span v-else>Current Scenario: {{ scenario }}</span> -->\n        <span>Current Location: {{ $route.params.state }}</span>\n        <!-- <span v-else>Current Location: {{ location }}</span> -->\n      </div>\n      <!-- <div class=\"choose\">\n        <span class=\"title\">Change Main Topics</span>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown1\">\n            1. Employment discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen1 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'unemployment'\">vs offical employment rate</button>\n            </li>\n            <li>\n              <button @click=\"this.sudo_scenario = 'agism'\">vs offical aging percentage</button>\n            </li>\n            <li>\n              <button @click=\"this.sudo_scenario = 'sexism'\">vs offical gender ratio</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown2\">\n            2. Agism discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen2 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'agism'\">vs offical aging percentage</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown3\">\n            3. Sexism discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen3 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'sexism'\">vs offical gender ratio</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"location\">\n          <span>Change the location: </span>\n          <select v-model=\"location\">\n            <option value=\"newsouthwales\">NSW</option>\n            <option value=\"victoria\">VIC</option>\n            <option value=\"queensland\">QLD</option>\n            <option value=\"southaustralia\">SA</option>\n            <option value=\"westernaustralia\">WA</option>\n            <option value=\"tasmania\">ACT</option>\n            <option value=\"australiancapitalterritory\">NT</option>\n            <option value=\"northernterritory\">TAS</option>\n            <option value=\"offshoreterritories\">Other</option>\n          </select>\n        </div>\n        \n        <div class=\"confirm\">\n          <span v-if=\"!this.sudo_scenario\">Please choose a scenario!</span>\n          <button @click=\"confirm\" :disabled=\"!this.sudo_scenario\">Confirm</button>\n        </div> -->\n      <!-- </div> -->\n    </div>\n    <div class=\"map1\">\n      <h3>Data from Twitter</h3>\n      <div id=\"map1\"></div>\n    </div>\n    <div class=\"map2\">\n      <h3>Data from Sudo</h3>\n      <div id=\"map2\"></div>\n    </div>\n\n    <!-- <div class=\"chart\">\n      <Bar\n        id=\"my-chart-id\"\n        :options=\"chartOptions\"\n        :data=\"chartData\"\n      />\n    </div> -->\n    <!-- <Chart /> -->\n    <div class=\"dynamic-chart\">\n      <Chart />\n    </div>\n\n\n    <!-- <div class=\"graph2\">\n      <Graph />\n    </div> -->\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Chart from '../components/Chart.vue'\n\nexport default {\n  name: 'Result',\n  components: { Chart },\n\n  data() {\n    return {\n        zoom_size: null,\n\n        twi_scenario: null,\n        sudo_scenario: null,\n        scenario: null,\n        location: null,\n        isDropdownOpen1: false,\n        isDropdownOpen2: false,\n        isDropdownOpen3: false,\n        map1: null,\n        map2: null,\n        circles1: [],\n        circles2: [],\n    //   keyword: null,\n        keywordTweets: null,\n        keywordSudo: null,\n\n        center: null,\n        twi_data: null,\n        sudo_data: null,\n\n        twi_percentage: [],\n\n        twi_max: null,\n        twi_min: null,\n        sudo_max: null,\n        sudo_min: null,\n\n        twi_color: null\n    };\n  },\n  created() {\n    this.scenario = this.$route.params.scenario;\n    this.twi_scenario = this.scenario.split('-')[0]\n    this.sudo_scenario = this.scenario.split('-')[1]\n    this.location = this.$route.params.state;\n  },\n  watch: {\n    \"$route.params.state\": function(newValue) {\n      this.location = newValue;\n    }\n  },\n  async mounted() {\n    // console.log(this.scenario)\n    // console.log(this.twi_scenario)\n    // console.log(this.sudo_scenario)\n    // console.log(this.location)\n    // const twi_scenario = this.$route.params.scenario.split('-')[0];\n    // const sudo_scenario = this.$route.params.scenario.split('-')[1];\n    // const state = this.$route.params.state;\n\n    try {\n      const twiResponse = await axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.twi_scenario}/${this.location}`);\n      this.center = twiResponse.data.state;\n      this.twi_data = twiResponse.data.results;\n      this.twi_data.forEach(twi => {\n        this.twi_percentage.push(twi.percentage)\n      })\n      this.twi_max = Math.max(...this.twi_percentage)\n      this.twi_min = Math.min(...this.twi_percentage)\n    } catch (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    }\n\n    try {\n      const sudoResponse = await axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${this.sudo_scenario}/${this.location}`);\n      this.sudo_data = sudoResponse.data.results;\n      this.sudo_max = this.sudo_data[0].percentage\n      this.sudo_min = this.sudo_data[this.sudo_data.length-1].percentage\n    } catch (error) {\n      console.error('Failed to fetch Sudo data:', error);\n    }\n\n    this.initMap();\n    this.createCircles();\n  },\n  methods: {\n    // toggleDropdown1() {\n    //   this.twi_scenario = \"unemployment\"\n    //   this.isDropdownOpen1 = !this.isDropdownOpen1;\n    // },\n    // toggleDropdown2() {\n    //   this.twi_scenario = \"agism\"\n    //   this.isDropdownOpen2 = !this.isDropdownOpen2;\n    // },\n    // toggleDropdown3() {\n    //   this.twi_scenario = \"sexism\"\n    //   this.isDropdownOpen3 = !this.isDropdownOpen3;\n    // },\n    initMap() {\n      // const state = this.$route.params.state\n      // if (this.location === 'victoria') {\n\n      // }\n      this.map1 = new google.maps.Map(document.getElementById('map1'), {\n          // center: { lat: -25.2744, lng: 133.7751 },\n          center: this.center,\n          zoom: 7,\n          gestureHandling: \"none\",\n          disableDefaultUI: true\n      })\n      this.map2 = new google.maps.Map(document.getElementById('map2'), {\n          // center: { lat: -25.2744, lng: 133.7751 },\n          center: this.center,\n          zoom: 7,\n          gestureHandling: \"none\",\n          disableDefaultUI: true\n      })\n      // }\n    },\n    createCircles() {\n        this.twi_data.forEach(tweet => {\n            if ((this.location !== 'australiancapitalterritory') && (this.location !== 'northernterritory') && (this.location !== 'offshoreterritories')) {\n              if (tweet.rank === 1) {\n                this.twi_color = '#ff6347'\n              } else if (tweet.rank === -1) {\n                this.twi_color = '#1e90ff'\n              } else {\n                this.twi_color = '#696969'\n              }\n            } else {\n              this.twi_color = '#696969'\n            }\n            const circleOptions = {\n                strokeColor: this.twi_color,\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: this.twi_color,\n                fillOpacity: 0.35,\n                map: this.map1,\n                center: new google.maps.LatLng(tweet.lat, tweet.lng),\n                radius: (9 * (tweet.percentage - this.twi_min) / (this.twi_max - this.twi_min)) * 25000 / (7 ** (1/2)) \n            };\n            const circle1 = new google.maps.Circle(circleOptions);\n            circle1.addListener('mouseover', () => {\n                this.showInfoWindow1(circle1, tweet.city, tweet.count, tweet.total, tweet.percentage);\n            });\n            circle1.addListener('mouseout', () => {\n                this.hideInfoWindow();\n            });\n            this.circles1.push(circle1);\n        });\n\n        this.sudo_data.forEach(sudo => {\n            const circleOptions = {\n                strokeColor: '#404040',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#808080',\n                fillOpacity: 0.35,\n                map: this.map2,\n                center: new google.maps.LatLng(sudo.lat, sudo.lng),\n                // radius: (sudo.percentage - this.sudo_min * 0.9) ** 2 * 50 \n                radius: (9 * (sudo.percentage - this.sudo_min) / (this.sudo_max - this.sudo_min)) * 25000 / (7 ** (1/2)) \n            };\n\n            const circle2 = new google.maps.Circle(circleOptions);\n            circle2.addListener('mouseover', () => {\n                this.showInfoWindow2(circle2, sudo.city, sudo.count, sudo.total, sudo.percentage);\n            });\n            circle2.addListener('mouseout', () => {\n                this.hideInfoWindow();\n            });\n            this.circles2.push(circle2);\n        });\n    },\n    showInfoWindow1(circle, name, count, total, percentage) {\n      const infoWindow1 = new google.maps.InfoWindow({\n        content: `Name: ${name}<br>Count: ${count}<br>Total: ${total}<br>Percentage: ${percentage.toFixed(3)}%`,\n        // disableAutoPan: true\n      });\n      infoWindow1.setPosition(circle.getCenter());\n      infoWindow1.open(this.map1);\n      this.infoWindow = infoWindow1;\n    },\n    showInfoWindow2(circle, name, count, total, percentage) {\n      const infoWindow2 = new google.maps.InfoWindow({\n        content: `Name: ${name}<br>Count: ${count}<br>Ageing population: ${total}<br>Ageing population percentage: ${percentage.toFixed(3)}%`,\n        // disableAutoPan: true\n      });\n      infoWindow2.setPosition(circle.getCenter());\n      infoWindow2.open(this.map2);\n      this.infoWindow = infoWindow2;\n    },\n    hideInfoWindow() {\n      if (this.infoWindow) {\n        this.infoWindow.close();\n      }\n    },\n    confirm() {\n        const new_twi_scenario = this.twi_scenario;\n        const new_sudo_scenario = this.sudo_scenario;\n        const new_state = this.location;\n\n        try {\n          const new_twiResponse = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${new_twi_scenario}/${new_state}`);\n          this.center = new_twiResponse.data.state;\n          this.twi_data = new_twiResponse.data.results;\n        } catch (error) {\n          console.error('Failed to fetch Twitter data:', error);\n        }\n\n        try {\n          const new_sudoResponse = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${new_sudo_scenario}/${new_state}`);\n          this.sudo_data = new_sudoResponse.data.results;\n        } catch (error) {\n          console.error('Failed to fetch Sudo data:', error);\n        }\n\n        this.initMap();\n        this.createCircles();\n\n        const scenario = this.twi_scenario + '-' + this.sudo_scenario\n        // const new_state = this.location\n        // this.$router.push({ name: 'results', params: { scenario: scenario, state: new_state } })\n        this.$router.push({ path: `/${scenario}/${new_state}`, query: { scenario, new_state } })\n\n\n\n        // this.$router.push({ path: `/${scenario}/${new_state}` });\n        // window.location.reload();\n    }\n  }\n}\n</script>\n\n<style>\n.dropdown-list {\n  display: none;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.dropdown-list button {\n  /* border: 1px solid #ddd; */\n  border: none;\n  border-bottom: 1px solid #ddd;\n  background: white;\n  width: 100%;\n  padding: 3px;\n  text-align: left;\n}\n.dropdown-list button:hover {\n  background: #eee;\n}\n.dropdown-list.is-open {\n  display: block;\n}\n.dropdown-item::before {\n  content: none;\n}\n.dropdown-toggle {\n  width: 100%;\n  text-align: left;\n}\n\n\n.menu {\n  position: absolute;\n  width: 20%;\n  height: 95%;\n  border: 1px solid #ddd;\n}\n.menu div {\n  position: relative;\n}\n.menu span {\n  display: inline-block;\n}\n.current {\n  position: relative;\n  margin: 10px;\n  padding: 10px 0;\n  border-bottom: 1px solid #ddd;\n}\n.current span {\n  display: block;\n}\n.choose .title {\n  position: relative;\n  display: inline;\n  margin: 20px;\n  padding: 10px 0;\n}\n.choose div {\n  position: relative;\n  /* display: flex; */\n  margin-top: 20px;\n  margin-bottom: 60px;\n}\n\n.map1 {\n    position: absolute;\n    width: 33%;\n    height: 40%;\n    left: 25%;\n    z-index: 1;\n}\n.map1 h3 {\n    position: relative;\n    z-index: 1;\n}\n#map1 {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n}\n.map2 {\n    position: absolute;\n    width: 33%;\n    height: 40%;\n    right: 5%;\n    z-index: 1;\n}\n.map2 h3 {\n    position: relative;\n    z-index: 1;\n}\n#map2 {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n}\n.scenario {\n    position: relative;\n}\n.scenario button {\n    display: inline-block;\n    position: relative;\n    background: white;\n    border: 1px solid #d9d9d9;\n    padding: 10px 20px;\n    border-radius: 32px;\n    z-index: 2;\n    top: 15px;\n    margin-right: 10px;\n    font-size: 1em;\n    font-family: arial;\n    font-weight: bold;\n    color: #000000;\n}\n.scenario button:hover {\n  cursor: pointer;\n  background: #eee;\n}\n\n.dynamic-chart {\n  position: absolute;\n  top: 51%;\n  width: 35%;\n  /* height: 10%; */\n  left: 25%;\n  z-index: 1;\n}\n.graph2 {\n  position: absolute;\n  top: 50%;\n  left: 25%;\n\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}