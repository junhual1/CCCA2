{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"menu\"\n};\nvar _hoisted_2 = {\n  \"class\": \"current\"\n};\nvar _hoisted_3 = {\n  \"class\": \"choose\"\n};\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", {\n  \"class\": \"title\"\n}, \"Change Main Topics\", -1 /* HOISTED */);\nvar _hoisted_5 = {\n  \"class\": \"dropdown\"\n};\nvar _hoisted_6 = /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"button\", null, \"vs other 2 scenarios mentioned in tweets\")], -1 /* HOISTED */);\nvar _hoisted_7 = {\n  \"class\": \"dropdown\"\n};\nvar _hoisted_8 = /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"button\", null, \"vs other 2 scenarios mentioned in tweets\")], -1 /* HOISTED */);\nvar _hoisted_9 = {\n  \"class\": \"dropdown\"\n};\nvar _hoisted_10 = /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"button\", null, \"vs other 2 scenarios mentioned in tweets\")], -1 /* HOISTED */);\nvar _hoisted_11 = {\n  \"class\": \"location\"\n};\nvar _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Change the location: \", -1 /* HOISTED */);\nvar _hoisted_13 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"newsouthwales\\\">NSW</option><option value=\\\"victoria\\\">VIC</option><option value=\\\"queensland\\\">QLD</option><option value=\\\"southaustralia\\\">SA</option><option value=\\\"westernaustralia\\\">WA</option><option value=\\\"tasmania\\\">ACT</option><option value=\\\"australiancapitalterritory\\\">NT</option><option value=\\\"northernterritory\\\">TAS</option><option value=\\\"offshoreterritories\\\">Other</option>\", 9);\nvar _hoisted_22 = [_hoisted_13];\nvar _hoisted_23 = {\n  \"class\": \"confirm\"\n};\nvar _hoisted_24 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"map1\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Data from Twitter\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map1\"\n})], -1 /* HOISTED */);\nvar _hoisted_25 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"map2\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Data from Sudo\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map2\"\n})], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, \"Current Scenario: \" + _toDisplayString(_ctx.$route.params.scenario), 1 /* TEXT */), _createCommentVNode(\" <span>Current Sudo Scenario: {{ $route.params.sudo_scenario }}</span> \"), _createCommentVNode(\" <span v-else>Current Scenario: {{ scenario }}</span> \"), _createElementVNode(\"span\", null, \"Current Location: \" + _toDisplayString(_ctx.$route.params.state), 1 /* TEXT */), _createCommentVNode(\" <span v-else>Current Location: {{ location }}</span> \")]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    \"class\": \"dropdown-toggle\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.toggleDropdown1 && $options.toggleDropdown1.apply($options, arguments);\n    })\n  }, \" 1. Employment discussion rate on Twitter \"), _createElementVNode(\"ul\", {\n    \"class\": _normalizeClass([\"dropdown-list\", {\n      'is-open': $data.isDropdownOpen1\n    }])\n  }, [_createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return _this.sudo_scenario = 'unemployment';\n    })\n  }, \"vs offical employment rate\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return _this.sudo_scenario = 'agism';\n    })\n  }, \"vs offical aging percentage\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function ($event) {\n      return _this.sudo_scenario = 'sexism';\n    })\n  }, \"vs offical gender ratio\")]), _hoisted_6], 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    \"class\": \"dropdown-toggle\",\n    onClick: _cache[4] || (_cache[4] = function () {\n      return $options.toggleDropdown2 && $options.toggleDropdown2.apply($options, arguments);\n    })\n  }, \" 2. Agism discussion rate on Twitter \"), _createElementVNode(\"ul\", {\n    \"class\": _normalizeClass([\"dropdown-list\", {\n      'is-open': $data.isDropdownOpen2\n    }])\n  }, [_createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = function ($event) {\n      return _this.sudo_scenario = 'agism';\n    })\n  }, \"vs offical aging percentage\")]), _hoisted_8], 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    \"class\": \"dropdown-toggle\",\n    onClick: _cache[6] || (_cache[6] = function () {\n      return $options.toggleDropdown3 && $options.toggleDropdown3.apply($options, arguments);\n    })\n  }, \" 3. Sexism discussion rate on Twitter \"), _createElementVNode(\"ul\", {\n    \"class\": _normalizeClass([\"dropdown-list\", {\n      'is-open': $data.isDropdownOpen3\n    }])\n  }, [_createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = function ($event) {\n      return _this.sudo_scenario = 'sexism';\n    })\n  }, \"vs offical gender ratio\")]), _hoisted_10], 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n      return $data.location = $event;\n    })\n  }, _hoisted_22, 512 /* NEED_PATCH */), [[_vModelSelect, $data.location]])]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = function () {\n      return $options.confirm && $options.confirm.apply($options, arguments);\n    })\n  }, \"Confirm\")])])]), _hoisted_24, _hoisted_25, _createCommentVNode(\" <div class=\\\"chart\\\">\\n      <Bar\\n        id=\\\"my-chart-id\\\"\\n        :options=\\\"chartOptions\\\"\\n        :data=\\\"chartData\\\"\\n      />\\n    </div> \"), _createCommentVNode(\" <Chart /> \"), _createCommentVNode(\" <div class=\\\"dynamic-chart\\\">\\n      <Chart />\\n    </div> \")]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_13","id","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","$route","params","scenario","_createCommentVNode","state","_hoisted_3","_hoisted_4","_hoisted_5","onClick","_cache","$options","toggleDropdown1","apply","arguments","_normalizeClass","$data","isDropdownOpen1","$event","_this","sudo_scenario","_hoisted_6","_hoisted_7","toggleDropdown2","isDropdownOpen2","_hoisted_8","_hoisted_9","toggleDropdown3","isDropdownOpen3","_hoisted_10","_hoisted_11","_hoisted_12","location","_hoisted_23","confirm","_hoisted_24","_hoisted_25"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/views/Results.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"menu\">\n      <div class=\"current\">      \n        <span>Current Scenario: {{ $route.params.scenario }}</span>\n        <!-- <span>Current Sudo Scenario: {{ $route.params.sudo_scenario }}</span> -->\n        <!-- <span v-else>Current Scenario: {{ scenario }}</span> -->\n        <span>Current Location: {{ $route.params.state }}</span>\n        <!-- <span v-else>Current Location: {{ location }}</span> -->\n      </div>\n      <div class=\"choose\">\n        <span class=\"title\">Change Main Topics</span>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown1\">\n            1. Employment discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen1 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'unemployment'\">vs offical employment rate</button>\n            </li>\n            <li>\n              <button @click=\"this.sudo_scenario = 'agism'\">vs offical aging percentage</button>\n            </li>\n            <li>\n              <button @click=\"this.sudo_scenario = 'sexism'\">vs offical gender ratio</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown2\">\n            2. Agism discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen2 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'agism'\">vs offical aging percentage</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown3\">\n            3. Sexism discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen3 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'sexism'\">vs offical gender ratio</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"location\">\n          <span>Change the location: </span>\n          <select v-model=\"location\">\n            <option value=\"newsouthwales\">NSW</option>\n            <option value=\"victoria\">VIC</option>\n            <option value=\"queensland\">QLD</option>\n            <option value=\"southaustralia\">SA</option>\n            <option value=\"westernaustralia\">WA</option>\n            <option value=\"tasmania\">ACT</option>\n            <option value=\"australiancapitalterritory\">NT</option>\n            <option value=\"northernterritory\">TAS</option>\n            <option value=\"offshoreterritories\">Other</option>\n          </select>\n        </div>\n        \n        <div class=\"confirm\">\n          <button @click=\"confirm\">Confirm</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"map1\">\n      <h3>Data from Twitter</h3>\n      <div id=\"map1\"></div>\n    </div>\n    <div class=\"map2\">\n      <h3>Data from Sudo</h3>\n      <div id=\"map2\"></div>\n    </div>\n\n    <!-- <div class=\"chart\">\n      <Bar\n        id=\"my-chart-id\"\n        :options=\"chartOptions\"\n        :data=\"chartData\"\n      />\n    </div> -->\n    <!-- <Chart /> -->\n    <!-- <div class=\"dynamic-chart\">\n      <Chart />\n    </div> -->\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n// import Chart from '../components/Chart.vue'\n\nexport default {\n  name: 'Result',\n  // components: { Chart },\n\n  data() {\n    return {\n        array: null,\n\n        twi_scenario: null,\n        sudo_scenario: null,\n        location: null,\n        isDropdownOpen1: false,\n        isDropdownOpen2: false,\n        isDropdownOpen3: false,\n        map1: null,\n        map2: null,\n        circles1: [],\n        circles2: [],\n    //   keyword: null,\n        keywordTweets: null,\n        keywordSudo: null,\n\n        center: null,\n        twi_data: null,\n        sudo_data: null,\n    };\n  },\n  mounted() {\n    const twi_scenario = this.$route.params.scenario.split('-')[0];\n    const sudo_scenario = this.$route.params.scenario.split('-')[1];\n    const state = this.$route.params.state;\n\n\n    let twiDataPromise = null;\n    let sudoDataPromise = null;\n\n    // if (!this.scenario) {\n    twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${twi_scenario}/${state}`)\n      .then(response => {\n        this.center = response.data.state;\n        this.twi_data = response.data.results;\n      })\n      .catch(error => {\n        console.error('Failed to fetch Twitter data:', error);\n      });\n    // } else {\n    //   twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.scenario}/${this.state}`)\n    //     .then(response => {\n    //       this.center = response.data.state;\n    //       this.twi_data = response.data.results;\n    //     })\n    //     .catch(error => {\n    //       console.error('Failed to fetch Twitter data:', error);\n    //     });\n    // }\n\n    // console.log(twi_scenario)\n    // console.log(sudo_scenario)\n    // console.log(state)\n    // if (!this.scenario) {\n    sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${sudo_scenario}/${state}`)\n      .then(response => {\n        this.sudo_data = response.data.results;\n        console.log(this.sudo_data[0].lat)\n        console.log(this.sudo_data[0].lng)\n      })\n      .catch(error => {\n        console.error('Failed to fetch Sudo data:', error);\n      });\n    // } else {\n    //   sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${this.scenario}/${this.state}`)\n    //     .then(response => {\n    //       this.sudo_data = response.data.results;\n    //     })\n    //     .catch(error => {\n    //       console.error('Failed to fetch Sudo data:', error);\n    //     });\n    // }\n\n    Promise.all([twiDataPromise, sudoDataPromise])\n      .then(() => {\n        this.initMap();\n        this.createCircles();\n      })\n      .catch(error => {\n        console.error('Failed to fetch data:', error);\n      });\n\n  },\n\n  // mounted() {\n  //   const scenario = this.$route.params.scenario;\n  //   const state = this.$route.params.state\n  //   if (!this.scenario) {\n  //     const twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${scenario}/${state}`)\n  //       .then(response => {\n  //         this.center = response.data.state;\n  //         this.twi_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Twitter data:', error);\n  //       });\n  //   } else {\n  //     const twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.scenario}/${this.state}`)\n  //       .then(response => {\n  //         this.center = response.data.state;\n  //         this.twi_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Twitter data:', error);\n  //       });\n  //   }\n    \n  //   // const twiDataPromise = axios.get('http://127.0.0.1:5000/api_twi_state_city/agism/victoria')\n      \n  //   if (!this.scenario) {\n  //     const sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${scenario}/${state}`)\n  //     // const sudoDataPromise = axios.get('http://127.0.0.1:5000/api_sudo_state_city/agism/victoria')\n  //       .then(response => {\n  //         this.sudo_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Sudo data:', error);\n  //       });\n  //   } else {\n  //     const sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${this.scenario}/${this.state}`)\n  //     // const sudoDataPromise = axios.get('http://127.0.0.1:5000/api_sudo_state_city/agism/victoria')\n  //       .then(response => {\n  //         this.sudo_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Sudo data:', error);\n  //       });\n  //   }\n    \n  //   Promise.all([twiDataPromise, sudoDataPromise])\n  //     .then(() => {\n  //       // console.log('Data fetched successfully');\n  //       this.initMap();\n  //       this.createCircles();\n  //     })\n  //     .catch(error => {\n  //       console.error('Failed to fetch data:', error);\n  //     });\n  \n\n    // Promise.all([\n    //   axios.get(`http://127.0.0.1:5000/api_twi_state_city/agism/victoria`),\n    //   axios.get(`http://127.0.0.1:5000/api_sudo_state_city/agism/victoria`),\n    //   // axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.scenario}/${this.location}`),\n\n    // ])\n    //   .then(responses => {\n    //     this.center = responses[0].data.state\n    //     this.twi_data = responses[0].data.results\n    //     this.sudo_data = responses[1].data.results\n    //     // this.array = Object.values(this.twi_data)\n\n    //     console.log(this.center)\n    //     console.log(this.twi_data === null)\n    //     // this.twi_data.forEach(tweet => {\n    //     //   console.log(tweet)\n    //     // })\n    //     // console.log(typeof this.twi_data)\n\n    //   })\n    //   .catch(error => {\n    //     console.error(error);\n    //   });\n    // console.log('1')\n    // this.initMap()\n    // this.createCircles()\n  // },\n  methods: {\n    toggleDropdown1() {\n      this.twi_scenario = \"unemployment\"\n      this.isDropdownOpen1 = !this.isDropdownOpen1;\n    },\n    toggleDropdown2() {\n      this.twi_scenario = \"agism\"\n      this.isDropdownOpen2 = !this.isDropdownOpen2;\n    },\n    toggleDropdown3() {\n      this.twi_scenario = \"sexism\"\n      this.isDropdownOpen3 = !this.isDropdownOpen3;\n    },\n    initMap() {\n      // const state = this.$route.params.state\n      // if (state === 'victoria') {\n      this.map1 = new google.maps.Map(document.getElementById('map1'), {\n          // center: { lat: -25.2744, lng: 133.7751 },\n          center: this.center,\n          zoom: 6,\n          gestureHandling: \"none\",\n          disableDefaultUI: true\n      })\n      this.map2 = new google.maps.Map(document.getElementById('map2'), {\n          // center: { lat: -25.2744, lng: 133.7751 },\n          center: this.center,\n          zoom: 6,\n          gestureHandling: \"none\",\n          disableDefaultUI: true\n      })\n      // }\n    },\n    createCircles() {\n        // const scenario = this.$route.params.scenario;\n        // const keywordTweets = null;\n        // if (scenario === 'unemployment') {\n        //     this.keywordTweets = this.tweets.unemployment;\n        // } else if (scenario === 'agism') {\n        //     this.keywordTweets = this.tweets.agism;\n        // } else if (scenario === 'sexism') {\n        //     this.keywordTweets = this.tweets.sexism;\n        // }\n        // if (scenario === 'unemployment') {\n        //     this.keywordSudo = this.sudo.unemployment;\n        // } else if (scenario === 'agism') {\n        //     this.keywordSudo = this.sudo.agism;\n        // } else if (scenario === 'sexism') {\n        //     this.keywordSudo = this.sudo.sexism;\n        // }\n        // this.keywordTweets = this.twi_data\n        // const keywordTweets = this.tweets[scenario];\n        this.twi_data.forEach(tweet => {\n            const circleOptions = {\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.35,\n                map: this.map1,\n                center: new google.maps.LatLng(tweet.lat, tweet.lng),\n                radius: tweet.percentage * 50000 // convert count to meters\n            };\n            const circle1 = new google.maps.Circle(circleOptions);\n            circle1.addListener('mouseover', () => {\n                this.showInfoWindow1(circle1, tweet.city, tweet.count, tweet.total, tweet.percentage);\n            });\n            circle1.addListener('mouseout', () => {\n                this.hideInfoWindow();\n            });\n            this.circles1.push(circle1);\n        });\n\n        this.sudo_data.forEach(sudo => {\n            const circleOptions = {\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.35,\n                map: this.map2,\n                center: new google.maps.LatLng(sudo.lat, sudo.lng),\n                radius: (sudo.percentage-10)**3.7 // convert count to meters\n            };\n            const circle2 = new google.maps.Circle(circleOptions);\n            circle2.addListener('mouseover', () => {\n                this.showInfoWindow2(circle2, sudo.city, sudo.count, sudo.total, sudo.percentage);\n            });\n            circle2.addListener('mouseout', () => {\n                this.hideInfoWindow();\n            });\n            this.circles2.push(circle2);\n        });\n    },\n    showInfoWindow1(circle, name, count, total, percentage) {\n      const infoWindow1 = new google.maps.InfoWindow({\n        content: `Name: ${name}<br>Count: ${count}<br>Total: ${total}<br>Percentage: ${percentage.toFixed(3)}%`,\n        // disableAutoPan: true\n      });\n      infoWindow1.setPosition(circle.getCenter());\n      infoWindow1.open(this.map1);\n      this.infoWindow = infoWindow1;\n    },\n    showInfoWindow2(circle, name, count, total, percentage) {\n      const infoWindow2 = new google.maps.InfoWindow({\n        content: `Name: ${name}<br>Count: ${count}<br>Ageing population: ${total}<br>Ageing population percentage: ${percentage.toFixed(3)}%`,\n        // disableAutoPan: true\n      });\n      infoWindow2.setPosition(circle.getCenter());\n      infoWindow2.open(this.map2);\n      this.infoWindow = infoWindow2;\n    },\n    hideInfoWindow() {\n      if (this.infoWindow) {\n        this.infoWindow.close();\n      }\n    },\n    confirm() {\n        const scenario = this.twi_scenario + '-' + this.sudo_scenario\n        const new_state = this.location\n        console.log(scenario)\n        console.log(new_state)\n        this.$router.push({ name: 'results', params: { scenario: scenario, state: new_state } })\n        // window.location.reload();\n    }\n  }\n}\n</script>\n\n<style>\n.dropdown-list {\n  display: none;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.dropdown-list button {\n  /* border: 1px solid #ddd; */\n  border: none;\n  border-bottom: 1px solid #ddd;\n  background: white;\n  width: 100%;\n  padding: 3px;\n  text-align: left;\n}\n.dropdown-list button:hover {\n  background: #eee;\n}\n.dropdown-list.is-open {\n  display: block;\n}\n.dropdown-item::before {\n  content: none;\n}\n.dropdown-toggle {\n  width: 100%;\n  text-align: left;\n}\n\n\n.menu {\n  position: absolute;\n  width: 20%;\n  height: 95%;\n  border: 1px solid #ddd;\n}\n.menu div {\n  position: relative;\n}\n.menu span {\n  display: inline-block;\n}\n.current {\n  position: relative;\n  margin: 10px;\n  padding: 10px 0;\n  border-bottom: 1px solid #ddd;\n}\n.current span {\n  display: block;\n}\n.choose .title {\n  position: relative;\n  display: inline;\n  margin: 20px;\n  padding: 10px 0;\n}\n.choose div {\n  position: relative;\n  /* display: flex; */\n  margin-top: 20px;\n  margin-bottom: 60px;\n}\n\n.map1 {\n    position: absolute;\n    width: 33%;\n    height: 40%;\n    left: 25%;\n    z-index: 1;\n}\n.map1 h3 {\n    position: relative;\n    z-index: 1;\n}\n#map1 {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n}\n.map2 {\n    position: absolute;\n    width: 33%;\n    height: 40%;\n    right: 5%;\n    z-index: 1;\n}\n.map2 h3 {\n    position: relative;\n    z-index: 1;\n}\n#map2 {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n}\n.scenario {\n    position: relative;\n}\n.scenario button {\n    display: inline-block;\n    position: relative;\n    background: white;\n    border: 1px solid #d9d9d9;\n    padding: 10px 20px;\n    border-radius: 32px;\n    z-index: 2;\n    top: 15px;\n    margin-right: 10px;\n    font-size: 1em;\n    font-family: arial;\n    font-weight: bold;\n    color: #000000;\n}\n.scenario button:hover {\n  cursor: pointer;\n  background: #eee;\n}\n\n.dynamic-chart {\n  position: absolute;\n  top: 51%;\n  width: 35%;\n  /* height: 10%; */\n  left: 38%;\n  z-index: 1;\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}