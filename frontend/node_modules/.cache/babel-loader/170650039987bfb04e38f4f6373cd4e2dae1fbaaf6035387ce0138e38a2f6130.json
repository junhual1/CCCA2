{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport Heatmap from 'heatmap.js';\nexport default {\n  mounted: function mounted() {\n    // Create a new map centered on Victoria, Australia\n    var map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: {\n        lat: -37.4713,\n        lng: 144.7852\n      },\n      zoom: 7\n    });\n\n    // Define the coordinates and values of the points to display on the heatmap\n    var points = [{\n      lat: -36.7580,\n      lng: 144.2840,\n      value: 25\n    }, {\n      lat: -36.7580,\n      lng: 144.2840,\n      value: 35\n    }\n    // add more points here\n    ];\n\n    // Create a Heatmap instance\n    var heatmap = new Heatmap({\n      container: document.getElementById('map'),\n      radius: 20,\n      maxOpacity: 0.8,\n      gradient: {\n        // Define the gradient colors\n        0.25: \"rgba(0, 0, 255, 0)\",\n        0.55: \"rgba(0, 255, 255, 1)\",\n        0.85: \"rgba(255, 255, 0, 1)\",\n        1.0: \"rgba(255, 0, 0, 1)\"\n      }\n    });\n\n    // Add the data points to the heatmap\n    heatmap.setData({\n      max: 100,\n      data: points.map(function (point) {\n        return {\n          x: point.lng,\n          y: point.lat,\n          value: point.value\n        };\n      })\n    });\n\n    // Add the heatmap to the map\n    var overlay = new google.maps.OverlayView();\n    overlay.onAdd = function () {\n      var layer = d3.select(this.getPanes().overlayLayer).append(\"div\").attr(\"class\", \"heatmap-layer\").style(\"position\", \"absolute\");\n      var svg = layer.append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n      var g = svg.append(\"g\");\n      heatmap.set(\"container\", g.node());\n    };\n    overlay.onRemove = function () {\n      heatmap.set(\"container\", null);\n    };\n    overlay.draw = function () {\n      var projection = this.getProjection(),\n        padding = 10;\n      var bounds = new google.maps.LatLngBounds(new google.maps.LatLng(-38.0, 143.0), new google.maps.LatLng(-36.0, 146.5));\n      var sw = projection.fromLatLngToDivPixel(bounds.getSouthWest()),\n        ne = projection.fromLatLngToDivPixel(bounds.getNorthEast());\n      var width = ne.x - sw.x + padding,\n        height = sw.y - ne.y + padding;\n      d3.select(this.getPanes().overlayLayer).select(\".heatmap-layer\").style(\"left\", sw.x - padding / 2 + \"px\").style(\"top\", ne.y - padding / 2 + \"px\").style(\"width\", width + \"px\").style(\"height\", height + \"px\");\n    };\n    overlay.setMap(map);\n  }\n};","map":{"version":3,"names":["Heatmap","mounted","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","points","value","heatmap","container","radius","maxOpacity","gradient","setData","max","data","point","x","y","overlay","OverlayView","onAdd","layer","d3","select","getPanes","overlayLayer","append","attr","style","svg","g","set","node","onRemove","draw","projection","getProjection","padding","bounds","LatLngBounds","LatLng","sw","fromLatLngToDivPixel","getSouthWest","ne","getNorthEast","width","height","setMap"],"sources":["/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/src/views/Results.vue"],"sourcesContent":["<template>\n  <div id=\"map\"></div>\n</template>\n\n<script>\nimport Heatmap from 'heatmap.js'\n\nexport default {\n  mounted() {\n    // Create a new map centered on Victoria, Australia\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: -37.4713, lng: 144.7852 },\n      zoom: 7\n    });\n\n    // Define the coordinates and values of the points to display on the heatmap\n    const points = [\n      {lat: -36.7580, lng: 144.2840, value: 25},\n      {lat: -36.7580, lng: 144.2840, value: 35},\n      // add more points here\n    ];\n\n    // Create a Heatmap instance\n    const heatmap = new Heatmap({\n      container: document.getElementById('map'),\n      radius: 20,\n      maxOpacity: 0.8,\n      gradient: {\n        // Define the gradient colors\n        0.25: \"rgba(0, 0, 255, 0)\",\n        0.55: \"rgba(0, 255, 255, 1)\",\n        0.85: \"rgba(255, 255, 0, 1)\",\n        1.0: \"rgba(255, 0, 0, 1)\"\n      }\n    });\n\n    // Add the data points to the heatmap\n    heatmap.setData({\n      max: 100,\n      data: points.map(point => ({\n        x: point.lng,\n        y: point.lat,\n        value: point.value\n      }))\n    });\n\n    // Add the heatmap to the map\n    const overlay = new google.maps.OverlayView();\n    overlay.onAdd = function () {\n      const layer = d3.select(this.getPanes().overlayLayer)\n        .append(\"div\")\n        .attr(\"class\", \"heatmap-layer\")\n        .style(\"position\", \"absolute\");\n\n      const svg = layer.append(\"svg\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\");\n\n      const g = svg.append(\"g\");\n\n      heatmap.set(\"container\", g.node());\n    };\n\n    overlay.onRemove = function () {\n      heatmap.set(\"container\", null);\n    };\n\n    overlay.draw = function () {\n      const projection = this.getProjection(),\n            padding = 10;\n\n      const bounds = new google.maps.LatLngBounds(\n        new google.maps.LatLng(-38.0, 143.0),\n        new google.maps.LatLng(-36.0, 146.5)\n      );\n\n      const sw = projection.fromLatLngToDivPixel(bounds.getSouthWest()),\n            ne = projection.fromLatLngToDivPixel(bounds.getNorthEast());\n\n      const width = ne.x - sw.x + padding,\n            height = sw.y - ne.y + padding;\n\n      d3.select(this.getPanes().overlayLayer)\n        .select(\".heatmap-layer\")\n        .style(\"left\", sw.x - padding / 2 + \"px\")\n        .style(\"top\", ne.y - padding / 2 + \"px\")\n        .style(\"width\", width + \"px\")\n        .style(\"height\", height + \"px\");\n    };\n\n    overlay.setMap(map);\n  }\n}\n</script>\n\n<style>\n#map {\n  height: 500px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}