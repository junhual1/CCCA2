{"ast":null,"code":"import _objectWithoutProperties from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"options\"];\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport mountableMixin from '../mixins/mountable.js';\nimport { getPropsValues, bindProps, bindEvents, twoWayBindingWrapper, watchPrimitiveProperties } from '../utils/helpers.js';\nimport { streetViewPanoramaMappedProps } from '../utils/mapped-props-by-map-element.js';\n\n//\n\n/**\n * Street View Panorama component\n * @displayName GmapStreetViewPanorama\n * @see [source code](/guide/street-view-panorama.html#source-code)\n * @see [official docs](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanorama)\n */\nvar script = {\n  name: 'StreetViewPanorama',\n  mixins: [mountableMixin],\n  provide: function provide() {\n    var _this = this;\n    this.$panoPromise = new Promise(function (resolve, reject) {\n      _this.$panoPromiseDeferred = {\n        resolve: resolve,\n        reject: reject\n      };\n    });\n    return {\n      $panoPromise: this.$panoPromise,\n      $mapPromise: this.$panoPromise // so that we can use it with markers\n    };\n  },\n\n  props: {\n    /**\n     * The zoom of the panorama, specified as a number. A zoom of 0 gives a 180 degrees Field of View.\n     * @value number\n     * @see [StreetViewPanorama zoom](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.zoom)\n     */\n    zoom: {\n      type: Number,\n      \"default\": undefined\n    },\n    /**\n     * The camera orientation, specified as heading and pitch, for the panorama.\n     * @value object\n     * @type StreetViewPov\n     * @see [StreetViewPanorama pov](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.pov)\n     */\n    pov: {\n      type: Object,\n      \"default\": undefined\n    },\n    /**\n     * The LatLng position of the Street View panorama.\n     * @value object\n     * @type LatLng|LatLngLiteral\n     * @see [StreetViewPanorama position](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.position)\n     */\n    position: {\n      type: Object,\n      \"default\": undefined\n    },\n    /**\n     * The panorama ID, which should be set when specifying a custom panorama.\n     * @value string\n     * @see [StreetViewPanorama pano](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.pano)\n     */\n    pano: {\n      type: String,\n      \"default\": undefined\n    },\n    /**\n     * Whether motion tracking is on or off. Enabled by default when the motion tracking control is present, so that the POV (point of view) follows the orientation of the device. This is primarily applicable to mobile devices. If motionTracking is set to false while motionTrackingControl is enabled, the motion tracking control appears but tracking is off. The user can tap the motion tracking control to toggle this option.\n     * @value boolean\n     * @see [StreetViewPanorama motionTracking](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.motionTracking)\n     */\n    motionTracking: {\n      type: Boolean\n    },\n    /**\n     * If true, the Street View panorama is visible on load.\n     * @value boolean\n     * @see [StreetViewPanorama visible](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.visible)\n     */\n    visible: {\n      type: Boolean,\n      \"default\": true\n    },\n    /**\n     * More options that you can pass to the component\n     * @value boolean\n     */\n    options: {\n      type: Object,\n      \"default\": undefined\n    }\n  },\n  replace: false,\n  // necessary for css styles\n  computed: {\n    finalLat: function finalLat() {\n      return this.position && typeof this.position.lat === 'function' ? this.position.lat() : this.position.lat;\n    },\n    finalLng: function finalLng() {\n      return this.position && typeof this.position.lng === 'function' ? this.position.lng() : this.position.lng;\n    },\n    finalLatLng: function finalLatLng() {\n      return {\n        lat: this.finalLat,\n        lng: this.finalLng\n      };\n    }\n  },\n  watch: {\n    zoom: function zoom(_zoom) {\n      if (this.$panoObject) {\n        this.$panoObject.setZoom(_zoom);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    var events = ['closeclick', 'status_changed'];\n    return this.$gmapApiPromiseLazy().then(function () {\n      // getting the DOM element where to create the map\n      var element = _this2.$refs['vue-street-view-pano'];\n\n      // creating the map\n      var options = _objectSpread(_objectSpread({}, _this2.options), getPropsValues(_this2, streetViewPanoramaMappedProps));\n      var extraOptions = options.options,\n        finalOptions = _objectWithoutProperties(options, _excluded);\n      _this2.$panoObject = new google.maps.StreetViewPanorama(element, finalOptions);\n\n      // binding properties (two and one way)\n      bindProps(_this2, _this2.$panoObject, streetViewPanoramaMappedProps);\n      // binding events\n      bindEvents(_this2, _this2.$panoObject, events);\n\n      // manually trigger position\n      twoWayBindingWrapper(function (increment, decrement, shouldUpdate) {\n        // Panos take a while to load\n        increment();\n        _this2.$panoObject.addListener('position_changed', function () {\n          if (shouldUpdate()) {\n            _this2.$emit('position_changed', _this2.$panoObject.getPosition());\n          }\n          decrement();\n        });\n        var updateCenter = function updateCenter() {\n          increment();\n          _this2.$panoObject.setPosition(_this2.finalLatLng);\n        };\n        watchPrimitiveProperties(_this2, ['finalLat', 'finalLng'], updateCenter);\n      });\n      _this2.$panoPromiseDeferred.resolve(_this2.$panoObject);\n      return _this2.$panoPromise;\n    })[\"catch\"](function (error) {\n      throw error;\n    });\n  },\n  methods: {\n    resize: function resize() {\n      if (this.$panoObject) {\n        google.maps.event.trigger(this.$panoObject, 'resize');\n      }\n    }\n  },\n  destroyed: function destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$panoObject && this.$panoObject.setMap) {\n      this.$panoObject.setMap(null);\n    }\n  }\n};\nexport { script as default };","map":{"version":3,"names":["mountableMixin","getPropsValues","bindProps","bindEvents","twoWayBindingWrapper","watchPrimitiveProperties","streetViewPanoramaMappedProps","script","name","mixins","provide","_this","$panoPromise","Promise","resolve","reject","$panoPromiseDeferred","$mapPromise","props","zoom","type","Number","undefined","pov","Object","position","pano","String","motionTracking","Boolean","visible","options","replace","computed","finalLat","lat","finalLng","lng","finalLatLng","watch","$panoObject","setZoom","mounted","_this2","events","$gmapApiPromiseLazy","then","element","$refs","_objectSpread","extraOptions","finalOptions","_objectWithoutProperties","_excluded","google","maps","StreetViewPanorama","increment","decrement","shouldUpdate","addListener","$emit","getPosition","updateCenter","setPosition","error","methods","resize","event","trigger","destroyed","setMap","default"],"sources":["/Users/eddiediedie/Desktop/CCC_A2/CCCA2/node_modules/gmap-vue/dist/esm/components/street-view-panorama.vue_rollup-plugin-vue_script.vue.js"],"sourcesContent":["import mountableMixin from '../mixins/mountable.js';\nimport { getPropsValues, bindProps, bindEvents, twoWayBindingWrapper, watchPrimitiveProperties } from '../utils/helpers.js';\nimport { streetViewPanoramaMappedProps } from '../utils/mapped-props-by-map-element.js';\n\n//\n\n/**\n * Street View Panorama component\n * @displayName GmapStreetViewPanorama\n * @see [source code](/guide/street-view-panorama.html#source-code)\n * @see [official docs](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanorama)\n */\nvar script = {\n  name: 'StreetViewPanorama',\n  mixins: [mountableMixin],\n  provide() {\n    this.$panoPromise = new Promise((resolve, reject) => {\n      this.$panoPromiseDeferred = { resolve, reject };\n    });\n    return {\n      $panoPromise: this.$panoPromise,\n      $mapPromise: this.$panoPromise, // so that we can use it with markers\n    };\n  },\n  props: {\n    /**\n     * The zoom of the panorama, specified as a number. A zoom of 0 gives a 180 degrees Field of View.\n     * @value number\n     * @see [StreetViewPanorama zoom](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.zoom)\n     */\n    zoom: {\n      type: Number,\n      default: undefined,\n    },\n    /**\n     * The camera orientation, specified as heading and pitch, for the panorama.\n     * @value object\n     * @type StreetViewPov\n     * @see [StreetViewPanorama pov](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.pov)\n     */\n    pov: {\n      type: Object,\n      default: undefined,\n    },\n    /**\n     * The LatLng position of the Street View panorama.\n     * @value object\n     * @type LatLng|LatLngLiteral\n     * @see [StreetViewPanorama position](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.position)\n     */\n    position: {\n      type: Object,\n      default: undefined,\n    },\n    /**\n     * The panorama ID, which should be set when specifying a custom panorama.\n     * @value string\n     * @see [StreetViewPanorama pano](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.pano)\n     */\n    pano: {\n      type: String,\n      default: undefined,\n    },\n    /**\n     * Whether motion tracking is on or off. Enabled by default when the motion tracking control is present, so that the POV (point of view) follows the orientation of the device. This is primarily applicable to mobile devices. If motionTracking is set to false while motionTrackingControl is enabled, the motion tracking control appears but tracking is off. The user can tap the motion tracking control to toggle this option.\n     * @value boolean\n     * @see [StreetViewPanorama motionTracking](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.motionTracking)\n     */\n    motionTracking: {\n      type: Boolean,\n    },\n    /**\n     * If true, the Street View panorama is visible on load.\n     * @value boolean\n     * @see [StreetViewPanorama visible](https://developers.google.com/maps/documentation/javascript/reference/street-view?hl=es#StreetViewPanoramaOptions.visible)\n     */\n    visible: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * More options that you can pass to the component\n     * @value boolean\n     */\n    options: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  replace: false, // necessary for css styles\n  computed: {\n    finalLat() {\n      return this.position && typeof this.position.lat === 'function'\n        ? this.position.lat()\n        : this.position.lat;\n    },\n    finalLng() {\n      return this.position && typeof this.position.lng === 'function'\n        ? this.position.lng()\n        : this.position.lng;\n    },\n    finalLatLng() {\n      return {\n        lat: this.finalLat,\n        lng: this.finalLng,\n      };\n    },\n  },\n  watch: {\n    zoom(zoom) {\n      if (this.$panoObject) {\n        this.$panoObject.setZoom(zoom);\n      }\n    },\n  },\n  mounted() {\n    const events = ['closeclick', 'status_changed'];\n\n    return this.$gmapApiPromiseLazy()\n      .then(() => {\n        // getting the DOM element where to create the map\n        const element = this.$refs['vue-street-view-pano'];\n\n        // creating the map\n        const options = {\n          ...this.options,\n          ...getPropsValues(this, streetViewPanoramaMappedProps),\n        };\n\n        const { options: extraOptions, ...finalOptions } = options;\n\n        this.$panoObject = new google.maps.StreetViewPanorama(\n          element,\n          finalOptions\n        );\n\n        // binding properties (two and one way)\n        bindProps(this, this.$panoObject, streetViewPanoramaMappedProps);\n        // binding events\n        bindEvents(this, this.$panoObject, events);\n\n        // manually trigger position\n        twoWayBindingWrapper((increment, decrement, shouldUpdate) => {\n          // Panos take a while to load\n          increment();\n\n          this.$panoObject.addListener('position_changed', () => {\n            if (shouldUpdate()) {\n              this.$emit('position_changed', this.$panoObject.getPosition());\n            }\n            decrement();\n          });\n\n          const updateCenter = () => {\n            increment();\n            this.$panoObject.setPosition(this.finalLatLng);\n          };\n\n          watchPrimitiveProperties(\n            this,\n            ['finalLat', 'finalLng'],\n            updateCenter\n          );\n        });\n\n        this.$panoPromiseDeferred.resolve(this.$panoObject);\n\n        return this.$panoPromise;\n      })\n      .catch((error) => {\n        throw error;\n      });\n  },\n  methods: {\n    resize() {\n      if (this.$panoObject) {\n        google.maps.event.trigger(this.$panoObject, 'resize');\n      }\n    },\n  },\n  destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$panoObject && this.$panoObject.setMap) {\n      this.$panoObject.setMap(null);\n    }\n  },\n};\n\nexport { script as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}