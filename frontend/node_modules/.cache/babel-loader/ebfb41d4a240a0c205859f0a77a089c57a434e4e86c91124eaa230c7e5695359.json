{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  id: \"map\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/src/views/Results.vue"],"sourcesContent":["<template>\n  <div id=\"map\"></div>\n</template>\n\n<script>\nexport default {\n  mounted() {\n    // Create a new map centered on Victoria, Australia\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: -37.4713, lng: 144.7852 },\n      zoom: 7\n    });\n\n    // Define the coordinates and percentages of the Significant Urban Areas in Victoria\n    const areas = [      {lat: -36.7580, lng: 144.2840, percentage: 25},      {lat: -36.7580, lng: 144.2840, percentage: 35},      // add more areas here    \n                  ];\n\n    // Define the bounds of Victoria\n    const victoriaBounds = new google.maps.LatLngBounds(\n      new google.maps.LatLng(-39.155, 140.962),\n      new google.maps.LatLng(-33.980, 149.972)\n    );\n\n    // Define the number of rows and columns in the grid\n    const numRows = 50;\n    const numCols = 50;\n\n    // Calculate the size of each cell in the grid\n    const cellSize = {\n      lat: (victoriaBounds.getNorthEast().lat() - victoriaBounds.getSouthWest().lat()) / numRows,\n      lng: (victoriaBounds.getNorthEast().lng() - victoriaBounds.getSouthWest().lng()) / numCols\n    };\n\n    // Create an empty array to hold the heatmap data\n    const heatmapData = [];\n\n    // Loop over the rows and columns in the grid\n    for (let i = 0; i < numRows; i++) {\n      for (let j = 0; j < numCols; j++) {\n        // Calculate the coordinates of the center of the current cell in the grid\n        const lat = victoriaBounds.getSouthWest().lat() + (i + 0.5) * cellSize.lat;\n        const lng = victoriaBounds.getSouthWest().lng() + (j + 0.5) * cellSize.lng;\n\n        // Calculate the percentage of unemployment mentions for the current cell\n        let percentage = 0;\n        areas.forEach((area) => {\n          const areaBounds = new google.maps.LatLngBounds(\n            new google.maps.LatLng(area.lat - 0.5 * cellSize.lat, area.lng - 0.5 * cellSize.lng),\n            new google.maps.LatLng(area.lat + 0.5 * cellSize.lat, area.lng + 0.5 * cellSize.lng)\n          );\n          if (areaBounds.contains(new google.maps.LatLng(lat, lng))) {\n            percentage += area.percentage;\n          }\n        });\n        percentage /= areas.length;\n\n        // Add the LatLng and percentage data to the heatmap data array\n        heatmapData.push({location: new google.maps.LatLng(lat, lng), weight: percentage});\n      }\n    }\n\n    // Create a heatmap layer with the heatmap data\n    const heatmap = new google.maps.visualization.HeatmapLayer({\n        data: heatmapData,\n        map: map,\n        radius: 20,\n        gradient: [\n            'rgba(0, 255, 255, 0)',\n            'rgba(0, 255, 255, 1)',\n            'rgba(0, 191, 255, 1)',\n            'rgba(0, 127, 255, 1)',\n            'rgba(0, 63, 255, 1)',\n            'rgba(0, 0, 255, 1)',\n            'rgba(0, 0, 223, 1)',\n            'rgba(0, 0, 191, 1)',\n            'rgba(0, 0, 159, 1)',\n            'rgba(0, 0, 127, 1)',\n            'rgba(63, 0, 91, 1)',\n            'rgba(127, 0, 63, 1)',\n            'rgba(191, 0, 31, 1)',\n            'rgba(255, 0, 0, 1)'\n        ]\n        });\n  }\n};\n</script>\n\n\n<style>\n#map {\n  height: 500px;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;uBAAbC,mBAAA,CAAoB,OAApBC,UAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}