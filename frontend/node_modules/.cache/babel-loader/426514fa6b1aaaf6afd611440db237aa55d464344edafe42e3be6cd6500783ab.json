{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"table\"\n};\nvar _hoisted_2 = {\n  \"class\": \"chart\"\n};\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\",\n  style: {\n    \"height\": \"82%\"\n  }\n}, null, -1 /* HOISTED */);\nvar _hoisted_4 = {\n  \"class\": \"scenario\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Table = _resolveComponent(\"Table\");\n  var _component_MChart = _resolveComponent(\"MChart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Table, {\n    keyword: $data.keyword,\n    showTable: $data.showTable\n  }, null, 8 /* PROPS */, [\"keyword\", \"showTable\"])]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_MChart, {\n    keyword: $data.keyword,\n    showChart: $data.showChart\n  }, null, 8 /* PROPS */, [\"keyword\", \"showChart\"])]), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    style: _normalizeStyle({\n      backgroundColor: $data.buttonColor1\n    }),\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.onKeywordClick('employment');\n    })\n  }, \"Employment\", 4 /* STYLE */), _createElementVNode(\"button\", {\n    style: _normalizeStyle({\n      backgroundColor: $data.buttonColor2\n    }),\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.onKeywordClick('agism');\n    })\n  }, \"Agism\", 4 /* STYLE */), _createElementVNode(\"button\", {\n    style: _normalizeStyle({\n      backgroundColor: $data.buttonColor3\n    }),\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.onKeywordClick('sexism');\n    })\n  }, \"Sexism\", 4 /* STYLE */)])]);\n}","map":{"version":3,"names":["_createElementVNode","id","style","_createElementBlock","_hoisted_1","_createVNode","_component_Table","keyword","$data","showTable","_hoisted_2","_component_MChart","showChart","_hoisted_3","_hoisted_4","_normalizeStyle","backgroundColor","buttonColor1","onClick","_cache","$event","$options","onKeywordClick","buttonColor2","buttonColor3"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/components/test.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"table\">\r\n      <Table :keyword=\"keyword\" :showTable=\"showTable\" ></Table>\r\n    </div>\r\n    <div class=\"chart\">\r\n      <MChart :keyword=\"keyword\" :showChart=\"showChart\" ></MChart>\r\n    </div>\r\n\r\n    <div id=\"map\" style=\"height: 82%\"></div>\r\n    <div class=\"scenario\">\r\n      <button :style=\"{ backgroundColor: buttonColor1 }\" @click=\"onKeywordClick('employment')\">Employment</button>\r\n      <button :style=\"{ backgroundColor: buttonColor2 }\" @click=\"onKeywordClick('agism')\">Agism</button>\r\n      <button :style=\"{ backgroundColor: buttonColor3 }\" @click=\"onKeywordClick('sexism')\">Sexism</button>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Table from '../components/Table.vue'\r\nimport MChart from '../components/mastodonChart.vue'\r\n\r\nexport default {\r\n  components: {\r\n    Table, MChart\r\n  },\r\n  data() {\r\n    return {\r\n      map: null,\r\n      circles: [],\r\n      keyword: null,\r\n      buttonColor1: 'white',\r\n      buttonColor2: 'white',\r\n      buttonColor3: 'white',\r\n\r\n      current_scenario: null,\r\n      keywordTweets: null,\r\n      showTable: false,\r\n      showChart: true,\r\n\r\n      twi_nsw: null,\r\n      twi_vic: null,\r\n      twi_qld: null,\r\n      twi_sa: null,\r\n      twi_wa: null,\r\n      twi_tas: null,\r\n      twi_act: null,\r\n      twi_nt: null,\r\n\r\n      employment: [],\r\n      agism: [],\r\n      sexism: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n    Promise.all([\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/new%20south%20wales'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/victoria'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/queensland'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/south%20australia'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/western%20australia'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/tasmania'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/australian%20capital%20territory'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/northern%20territory'),\r\n\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/agism/new%20south%20wales'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/agism/victoria'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/agism/queensland'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/agism/south%20australia'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/agism/western%20australia'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/agism/tasmania'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/agism/australian%20capital%20territory'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/agism/northern%20territory'),\r\n\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/sexism/new%20south%20wales'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/sexism/victoria'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/sexism/queensland'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/sexism/south%20australia'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/sexism/western%20australia'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/sexism/tasmania'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/sexism/australian%20capital%20territory'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/sexism/northern%20territory')\r\n    ])\r\n      .then(responses => {\r\n        this.twi_nsw = { ...responses[0].data['new south wales'], ...responses[0].data['summary']};\r\n        this.employment.push(this.twi_nsw)\r\n        this.twi_vic = { ...responses[1].data['victoria'], ...responses[1].data['summary']};\r\n        this.employment.push(this.twi_vic)\r\n        this.twi_qld = { ...responses[2].data['queensland'], ...responses[2].data['summary']};\r\n        this.employment.push(this.twi_qld)\r\n        this.twi_sa = { ...responses[3].data['south australia'], ...responses[3].data['summary']};\r\n        this.employment.push(this.twi_sa)\r\n        this.twi_wa = { ...responses[4].data['western australia'], ...responses[4].data['summary']};\r\n        this.employment.push(this.twi_wa)\r\n        this.twi_tas = { ...responses[5].data['tasmania'], ...responses[5].data['summary']};\r\n        this.employment.push(this.twi_tas)\r\n        this.twi_act = { ...responses[6].data['australian capital territory'], ...responses[6].data['summary']};\r\n        this.employment.push(this.twi_act)\r\n        this.twi_nt = { ...responses[7].data['northern territory'], ...responses[7].data['summary']};\r\n        this.employment.push(this.twi_nt)\r\n\r\n        this.twi_nsw = { ...responses[8].data['new south wales'], ...responses[8].data['summary']};\r\n        this.agism.push(this.twi_nsw)\r\n        this.twi_vic = { ...responses[9].data['victoria'], ...responses[9].data['summary']};\r\n        this.agism.push(this.twi_vic)\r\n        this.twi_qld = { ...responses[10].data['queensland'], ...responses[10].data['summary']};\r\n        this.agism.push(this.twi_qld)\r\n        this.twi_sa = { ...responses[11].data['south australia'], ...responses[11].data['summary']};\r\n        this.agism.push(this.twi_sa)\r\n        this.twi_wa = { ...responses[12].data['western australia'], ...responses[12].data['summary']};\r\n        this.agism.push(this.twi_wa)\r\n        this.twi_tas = { ...responses[13].data['tasmania'], ...responses[13].data['summary']};\r\n        this.agism.push(this.twi_tas)\r\n        this.twi_act = { ...responses[14].data['australian capital territory'], ...responses[14].data['summary']};\r\n        this.agism.push(this.twi_act)\r\n        this.twi_nt = { ...responses[15].data['northern territory'], ...responses[15].data['summary']};\r\n        this.agism.push(this.twi_nt)\r\n\r\n        this.twi_nsw = { ...responses[16].data['new south wales'], ...responses[16].data['summary']};\r\n        this.sexism.push(this.twi_nsw)\r\n        this.twi_vic = { ...responses[17].data['victoria'], ...responses[17].data['summary']};\r\n        this.sexism.push(this.twi_vic)\r\n        this.twi_qld = { ...responses[18].data['queensland'], ...responses[18].data['summary']};\r\n        this.sexism.push(this.twi_qld)\r\n        this.twi_sa = { ...responses[19].data['south australia'], ...responses[19].data['summary']};\r\n        this.sexism.push(this.twi_sa)\r\n        this.twi_wa = { ...responses[20].data['western australia'], ...responses[20].data['summary']};\r\n        this.sexism.push(this.twi_wa)\r\n        this.twi_tas = { ...responses[21].data['tasmania'], ...responses[21].data['summary']};\r\n        this.sexism.push(this.twi_tas)\r\n        this.twi_act = { ...responses[22].data['australian capital territory'], ...responses[22].data['summary']};\r\n        this.sexism.push(this.twi_act)\r\n        this.twi_nt = { ...responses[23].data['northern territory'], ...responses[23].data['summary']};\r\n        this.sexism.push(this.twi_nt)\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      this.map = new google.maps.Map(document.getElementById('map'), {\r\n        center: { lat: -28.2744, lng: 133.7751 },\r\n        zoom: 4.5,\r\n        gestureHandling: \"none\",\r\n        disableDefaultUI: true\r\n      });\r\n    },\r\n    createCircles() {\r\n      if (this.keyword === 'employment') {\r\n        this.keywordTweets = this.employment\r\n        this.changeButtonColor1();\r\n      } else if (this.keyword === 'agism') {\r\n        this.keywordTweets = this.agism\r\n        this.changeButtonColor2();\r\n      } else if (this.keyword === 'sexism') {\r\n        this.keywordTweets = this.sexism\r\n        this.changeButtonColor3();\r\n      }\r\n      this.keywordTweets.forEach(tweet => {\r\n        const circleOptions = {\r\n          strokeColor: '#FF0000',\r\n          strokeOpacity: 0.8,\r\n          strokeWeight: 2,\r\n          fillColor: '#FF0000',\r\n          fillOpacity: 0.35,\r\n          map: this.map,\r\n          center: new google.maps.LatLng(tweet.lat, tweet.lng),\r\n          radius: Math.sqrt(tweet.percentage) * 5000000 // convert count to meters\r\n        };\r\n        const circle = new google.maps.Circle(circleOptions);\r\n        circle.addListener('mouseover', () => {\r\n          this.showInfoWindow(circle, tweet.count, tweet.percentage, tweet.total);\r\n        });\r\n        circle.addListener('mouseout', () => {\r\n          this.hideInfoWindow();\r\n        });\r\n        this.circles.push(circle);\r\n      });\r\n    },\r\n    showInfoWindow(circle, count, percentage, total) {\r\n      const infoWindow = new google.maps.InfoWindow({\r\n        content: `Count: ${count}<br>Percentage: ${percentage.toFixed(3)}<br>Total: ${total}`,\r\n        disableAutoPan: true\r\n      });\r\n      infoWindow.setPosition(circle.getCenter());\r\n      infoWindow.open(this.map);\r\n      this.infoWindow = infoWindow;\r\n    },\r\n    hideInfoWindow() {\r\n      if (this.infoWindow) {\r\n        this.infoWindow.close();\r\n      }\r\n    },\r\n    onKeywordClick(keyword) {\r\n      this.updateKeyword(keyword)\r\n      \r\n      this.clearButtonColor();\r\n      \r\n      if (this.keyword !== this.current_scenario) {\r\n        this.clearCircles();\r\n        this.showTable = true;\r\n        // this.displayChart()\r\n        this.createCircles();\r\n        this.current_scenario = this.keyword;\r\n      }\r\n      else {\r\n        this.displayTable()\r\n        this.clearCircles();\r\n        this.current_scenario = null\r\n      }\r\n\r\n      // this.$emit('toggle-table');\r\n\r\n      // this.$emit('variable-updated', this.keyword);\r\n    },\r\n    updateKeyword(keyword) {\r\n      this.keyword = keyword\r\n    },\r\n    displayTable() {\r\n      this.showTable = !this.showTable\r\n    },\r\n    displayChart() {\r\n      this.showChart = !this.showChart\r\n    },\r\n    clearCircles() {\r\n      this.circles.forEach(circle => {\r\n        circle.setMap(null);\r\n      });\r\n      this.circles = [];\r\n    },\r\n    changeButtonColor1() {\r\n      if (this.buttonColor1 === 'white') {\r\n        this.buttonColor1 = 'grey';\r\n        // this.showChart = false\r\n      } else {\r\n        this.buttonColor1 = 'white'\r\n        // this.showChart = true\r\n      }\r\n    },\r\n    changeButtonColor2() {\r\n      if (this.buttonColor2 === 'white') {\r\n        this.buttonColor2 = 'grey';\r\n      } else {\r\n        this.buttonColor2 = 'white'\r\n      }\r\n    },\r\n    changeButtonColor3() {\r\n      if (this.buttonColor3 === 'white') {\r\n        this.buttonColor3 = 'grey';\r\n      } else {\r\n        this.buttonColor3 = 'white'\r\n      }\r\n    },\r\n    clearButtonColor() {\r\n      this.buttonColor1 = 'white'\r\n      this.buttonColor2 = 'white'\r\n      this.buttonColor3 = 'white'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#map {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 82%;\r\n    left: 0px;\r\n    bottom: 0px;\r\n    z-index: 1;\r\n}\r\n.scenario {\r\n    position: relative;\r\n}\r\n.scenario button {\r\n    display: inline-block;\r\n    position: relative;\r\n    background: white;\r\n    border: 1px solid #d9d9d9;\r\n    padding: 10px 20px;\r\n    border-radius: 32px;\r\n    z-index: 2;\r\n    top: 15px;\r\n    margin-right: 10px;\r\n    font-size: 1em;\r\n    font-family: arial;\r\n    font-weight: bold;\r\n    color: #000000;\r\n}\r\n.scenario button:hover {\r\n  cursor: pointer;\r\n  background: #eee;\r\n}\r\n.chart {\r\n  position: absolute;\r\n  /* width: 10%; */\r\n  z-index: 2;\r\n  left: 1%;\r\n  bottom: 5%;\r\n}\r\n</style>"],"mappings":";;EAES,SAAM;AAAO;;EAGb,SAAM;AAAO;8BAIlBA,mBAAA,CAAwC;EAAnCC,EAAE,EAAC,KAAK;EAACC,KAAmB,EAAnB;IAAA;EAAA;;;EACT,SAAM;AAAU;;;;uBATvBC,mBAAA,CAeM,cAdJH,mBAAA,CAEM,OAFNI,UAEM,GADJC,YAAA,CAA0DC,gBAAA;IAAlDC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,SAAS,EAAED,KAAA,CAAAC;uDAExCT,mBAAA,CAEM,OAFNU,UAEM,GADJL,YAAA,CAA4DM,iBAAA;IAAnDJ,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGK,SAAS,EAAEJ,KAAA,CAAAI;uDAGzCC,UAAwC,EACxCb,mBAAA,CAIM,OAJNc,UAIM,GAHJd,mBAAA,CAA4G;IAAnGE,KAAK,EAAAa,eAAA;MAAAC,eAAA,EAAqBR,KAAA,CAAAS;IAAY;IAAKC,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,QAAA,CAAAC,cAAc;IAAA;KAAgB,YAAU,kBACnGtB,mBAAA,CAAkG;IAAzFE,KAAK,EAAAa,eAAA;MAAAC,eAAA,EAAqBR,KAAA,CAAAe;IAAY;IAAKL,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,QAAA,CAAAC,cAAc;IAAA;KAAW,OAAK,kBACzFtB,mBAAA,CAAoG;IAA3FE,KAAK,EAAAa,eAAA;MAAAC,eAAA,EAAqBR,KAAA,CAAAgB;IAAY;IAAKN,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,QAAA,CAAAC,cAAc;IAAA;KAAY,QAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}