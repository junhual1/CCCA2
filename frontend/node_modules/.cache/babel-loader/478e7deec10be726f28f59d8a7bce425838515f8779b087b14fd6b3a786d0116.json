{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  id: \"Mchart\",\n  style: {\n    \"width\": \"430px\",\n    \"height\": \"300px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","style","_createElementBlock","_hoisted_1"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/components/mastodonChart.vue"],"sourcesContent":["<template>\n\n  <div id=\"Mchart\" style=\"width: 430px; height: 300px;\"></div>\n  \n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/toolbox';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/title';\n\nexport default {\n  data() {\n    return {\n      mastodonEmployment: null,\n      mastodonAgism: null,\n      mastodonSexism: null,\n      twiEmployment: null,\n      twiAgism: null,\n      twiSexism: null,\n      mastodon_data: [],\n      twi_data: [],\n      mastodon_max: null,\n      twi_max: null\n    }\n  },\n  async mounted() {\n    try {\n      const masEmployResponse = await axios.get('http://127.0.0.1:5000/api_mastodon/unemployment');\n      this.mastodonEmployment = masEmployResponse.data.percentage * 100;\n      this.mastodon_data.push(this.mastodonEmployment.toFixed(3))\n    } catch (error) {\n      console.error('Failed to fetch Mastodon data:', error);\n    }\n    try {\n      const masAgismResponse = await axios.get('http://127.0.0.1:5000/api_mastodon/agism');\n      this.mastodonAgism = masAgismResponse.data.percentage * 100;\n      this.mastodon_data.push(this.mastodonAgism.toFixed(3))\n    } catch (error) {\n      console.error('Failed to fetch Mastodon data:', error);\n    }\n    try {\n      const masSexismResponse = await axios.get('http://127.0.0.1:5000/api_mastodon/sexism');\n      this.mastodonSexism = masSexismResponse.data.percentage * 100;\n      this.mastodon_data.push(this.mastodonSexism.toFixed(3))\n      this.mastodon_max = Math.ceil(Math.max(...this.mastodon_data) * 10) / 10\n    } catch (error) {\n      console.error('Failed to fetch Mastodon data:', error);\n    }\n    try {\n      const twiEmployResponse = await axios.get('http://127.0.0.1:5000/api_twi_total/unemployment');\n      this.twiEmployment = twiEmployResponse.data.summary.percentage * 100;\n      this.twi_data.push(this.twiEmployment.toFixed(3))\n    } catch (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    }\n    try {\n      const twiAgismResponse = await axios.get('http://127.0.0.1:5000/api_twi_total/agism');\n      this.twiAgism = twiAgismResponse.data.summary.percentage * 100;\n      this.twi_data.push(this.twiAgism.toFixed(3))\n    } catch (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    }\n    try {\n      const twiSexismResponse = await axios.get('http://127.0.0.1:5000/api_twi_total/sexism');\n      this.twiSexism = twiSexismResponse.data.summary.percentage * 100;\n      this.twi_data.push(this.twiSexism.toFixed(3))\n      this.twi_max = Math.ceil(Math.max(...this.twi_data) * 10) / 10\n    } catch (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    }\n\n    this.initChart();\n  },\n  methods: {\n      initChart() {\n\n      const chartDom = document.getElementById('Mchart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        title: {\n          text: 'Comparasion of Topic Discussion Rate Between Twitter and Mastodon',\n          textStyle: {\n            fontSize: 12,\n            fontWeight: 'bold',\n          },\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        legend: {\n          data: ['Twitter', 'Mastodon'],\n          right: 40, \n          top: 30\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: ['Employment', 'Agism', 'Sexism'],\n            axisPointer: {\n              type: 'shadow'\n            },\n            axisLabel: {\n              rotate: 0\n            }\n          }\n        ],\n        yAxis: {\n          type: 'value',\n          name: 'Discussion Rate',\n          min: 0,\n          max: this.mastodon_max, \n          interval: 0.1,\n          axisLabel: {\n            formatter: '{value} %'\n          }\n        },\n        series: [\n          {\n            name: 'Twitter',\n            type: 'bar',\n            itemStyle: {\n              color: 'rgba(0, 0, 0, 0.6)'\n            },\n            tooltip: {\n              formatter: '{c} %'\n            },\n            data: this.twi_data \n          },\n          {\n            name: 'Mastodon',\n            type: 'bar',\n            itemStyle: {\n              color: 'rgba(0, 0, 0, 0.3)'\n            },\n            tooltip: {\n              formatter: '{c} %'\n            },\n            data: this.mastodon_data\n          }\n        ]\n      };\n      \n      myChart.setOption(option);\n    }\n  }\n}\n</script>\n"],"mappings":";;EAEOA,EAAE,EAAC,QAAQ;EAACC,KAAoC,EAApC;IAAA;IAAA;EAAA;;;uBAAjBC,mBAAA,CAA4D,OAA5DC,UAA4D"},"metadata":{},"sourceType":"module","externalDependencies":[]}