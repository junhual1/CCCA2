{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\",\n  style: {\n    \"height\": \"82%\"\n  }\n}, null, -1 /* HOISTED */);\nvar _hoisted_2 = {\n  \"class\": \"scenario\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <div>\\r\\n      {{ this.test }}\\r\\n    </div> \"), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.onKeywordClick('employment');\n    })\n  }, \"Employment\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.onKeywordClick('agism');\n    })\n  }, \"Agism\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.onKeywordClick('sexism');\n    })\n  }, \"Sexism\")]), _createElementVNode(\"div\", null, [_createCommentVNode(\" {{ twi_nsw }}\\r\\n      <br> \"), _createTextVNode(\" \" + _toDisplayString($data.employment) + \" \", 1 /* TEXT */), _createCommentVNode(\" <br>\\r\\n      {{ twi_vic }}\\r\\n      <br>\\r\\n      {{ twi_qld }} \")])]);\n}","map":{"version":3,"names":["_createElementVNode","id","style","_createElementBlock","_createCommentVNode","_hoisted_1","_hoisted_2","onClick","_cache","$event","$options","onKeywordClick","_toDisplayString","$data","employment"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/components/test.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- <div>\r\n      {{ this.test }}\r\n    </div> -->\r\n    <div id=\"map\" style=\"height: 82%\"></div>\r\n    <div class=\"scenario\">\r\n      <button @click=\"onKeywordClick('employment')\">Employment</button>\r\n      <button @click=\"onKeywordClick('agism')\">Agism</button>\r\n      <button @click=\"onKeywordClick('sexism')\">Sexism</button>\r\n    </div>\r\n\r\n    <div>\r\n      <!-- {{ twi_nsw }}\r\n      <br> -->\r\n      {{ employment }}\r\n      <!-- <br>\r\n      {{ twi_vic }}\r\n      <br>\r\n      {{ twi_qld }} -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      employment: [],\r\n      map: null,\r\n      circles: [],\r\n      keyword: null,\r\n      // tweets: {\r\n      //   employment: [\r\n      //     { lat: -37.8136, lng: 144.9631, count: 100, percentage: 0.5 },\r\n      //     { lat: -33.8688, lng: 151.2093, count: 200, percentage: 1.0 },\r\n      //     { lat: -27.4698, lng: 153.0251, count: 50, percentage: 0.25 }\r\n      //   ],\r\n      //   agism: [\r\n      //     { lat: -37.8136, lng: 144.9631, count: 50, percentage: 0.25 },\r\n      //     { lat: -33.8688, lng: 151.2093, count: 150, percentage: 0.75 },\r\n      //     { lat: -27.4698, lng: 153.0251, count: 75, percentage: 0.375 }\r\n      //   ],\r\n      //   sexism: [\r\n      //     { lat: -37.8136, lng: 144.9631, count: 25, percentage: 0.125 },\r\n      //     { lat: -33.8688, lng: 151.2093, count: 75, percentage: 0.375 },\r\n      //     { lat: -27.4698, lng: 153.0251, count: 100, percentage: 0.5 }\r\n      //   ]\r\n      // },\r\n      current_scenario: null,\r\n\r\n      twi_nsw: null,\r\n      twi_vic: null,\r\n      twi_qld: null,\r\n      twi_sa: null,\r\n      twi_wa: null,\r\n      twi_tas: null,\r\n      twi_act: null,\r\n      twi_nt: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n    Promise.all([\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/new%20south%20wales'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/victoria'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/queensland'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/south%20australia'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/western%20australia'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/tasmania'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/australian%20capital%20territory'),\r\n      axios.get('http://127.0.0.1:5000/api_twi_state_total/unemployment/northern%20territory')\r\n    ])\r\n      .then(responses => {\r\n        this.twi_nsw = { ...responses[0].data['new south wales'], ...responses[0].data['summary']};\r\n        this.employment.push(this.twi_nsw)\r\n        this.twi_vic = { ...responses[1].data['victoria'], ...responses[1].data['summary']};\r\n        this.employment.push(this.twi_vic)\r\n        this.twi_qld = { ...responses[2].data['queensland'], ...responses[2].data['summary']};\r\n        this.employment.push(this.twi_qld)\r\n        this.twi_sa = { ...responses[3].data['south australia'], ...responses[3].data['summary']};\r\n        this.employment.push(this.twi_sa)\r\n        this.twi_wa = { ...responses[4].data['western australia'], ...responses[4].data['summary']};\r\n        this.employment.push(this.twi_wa)\r\n        this.twi_tas = { ...responses[5].data['tasmania'], ...responses[5].data['summary']};\r\n        this.employment.push(this.twi_tas)\r\n        this.twi_act = { ...responses[6].data['australian capital territory'], ...responses[6].data['summary']};\r\n        this.employment.push(this.twi_act)\r\n        this.twi_nt = { ...responses[7].data['northern territory'], ...responses[7].data['summary']};\r\n        this.employment.push(this.twi_nt)\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      this.map = new google.maps.Map(document.getElementById('map'), {\r\n        center: { lat: -25.2744, lng: 133.7751 },\r\n        zoom: 4.5,\r\n        gestureHandling: \"none\",\r\n        disableDefaultUI: true\r\n      });\r\n    },\r\n    createCircles() {\r\n      // const keywordTweets = this.tweets[this.keyword];\r\n      const keywordTweets = this.test[this.keyword];\r\n      keywordTweets.forEach(tweet => {\r\n        const circleOptions = {\r\n          strokeColor: '#FF0000',\r\n          strokeOpacity: 0.8,\r\n          strokeWeight: 2,\r\n          fillColor: '#FF0000',\r\n          fillOpacity: 0.35,\r\n          map: this.map,\r\n          center: new google.maps.LatLng(tweet.lat, tweet.lng),\r\n          radius: tweet.count * 1000 // convert count to meters\r\n        };\r\n        const circle = new google.maps.Circle(circleOptions);\r\n        circle.addListener('mouseover', () => {\r\n          this.showInfoWindow(circle, tweet.count, tweet.percentage);\r\n        });\r\n        circle.addListener('mouseout', () => {\r\n          this.hideInfoWindow();\r\n        });\r\n        this.circles.push(circle);\r\n      });\r\n    },\r\n    showInfoWindow(circle, count, percentage) {\r\n      const infoWindow = new google.maps.InfoWindow({\r\n        content: `Count: ${count}<br>Percentage: ${percentage}`,\r\n        disableAutoPan: true\r\n      });\r\n      infoWindow.setPosition(circle.getCenter());\r\n      infoWindow.open(this.map);\r\n      this.infoWindow = infoWindow;\r\n    },\r\n    hideInfoWindow() {\r\n      if (this.infoWindow) {\r\n        this.infoWindow.close();\r\n      }\r\n    },\r\n    onKeywordClick(keyword) {\r\n      this.keyword = keyword;\r\n      \r\n      if (this.keyword !== this.current_scenario) {\r\n        this.clearCircles();\r\n        this.createCircles();\r\n        this.current_scenario = this.keyword;\r\n      }\r\n      else {\r\n        this.clearCircles();\r\n        this.current_scenario = null\r\n      }\r\n    },\r\n    clearCircles() {\r\n      this.circles.forEach(circle => {\r\n        circle.setMap(null);\r\n      });\r\n      this.circles = [];\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#map {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 82%;\r\n    left: 0px;\r\n    bottom: 0px;\r\n    z-index: 1;\r\n}\r\n.scenario {\r\n    position: relative;\r\n}\r\n.scenario button {\r\n    display: inline-block;\r\n    position: relative;\r\n    background: white;\r\n    border: 1px solid #d9d9d9;\r\n    padding: 10px 20px;\r\n    border-radius: 32px;\r\n    z-index: 2;\r\n    top: 15px;\r\n    margin-right: 10px;\r\n    font-size: 1em;\r\n    font-family: arial;\r\n    font-weight: bold;\r\n    color: #000000;\r\n}\r\n.scenario button:hover {\r\n  cursor: pointer;\r\n  background: #eee;\r\n}\r\n</style>"],"mappings":";8BAKIA,mBAAA,CAAwC;EAAnCC,EAAE,EAAC,KAAK;EAACC,KAAmB,EAAnB;IAAA;EAAA;;;EACT,SAAM;AAAU;;uBALvBC,mBAAA,CAoBM,cAnBJC,mBAAA,kDAEU,EACVC,UAAwC,EACxCL,mBAAA,CAIM,OAJNM,UAIM,GAHJN,mBAAA,CAAiE;IAAxDO,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,QAAA,CAAAC,cAAc;IAAA;KAAgB,YAAU,GACxDX,mBAAA,CAAuD;IAA9CO,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,QAAA,CAAAC,cAAc;IAAA;KAAW,OAAK,GAC9CX,mBAAA,CAAyD;IAAhDO,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,QAAA,CAAAC,cAAc;IAAA;KAAY,QAAM,E,GAGlDX,mBAAA,CAQM,cAPJI,mBAAA,iCACQ,E,iBAAA,GACR,GAAAQ,gBAAA,CAAGC,KAAA,CAAAC,UAAU,IAAG,GAChB,iBAAAV,mBAAA,sEAGiB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}