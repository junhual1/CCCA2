{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport axios from 'axios';\n// import Chart from '../components/Chart.vue'\n\nexport default {\n  name: 'Result',\n  // components: { Chart },\n  data: function data() {\n    return {\n      array: null,\n      twi_scenario: null,\n      sudo_scenario: null,\n      location: null,\n      isDropdownOpen1: false,\n      isDropdownOpen2: false,\n      isDropdownOpen3: false,\n      map1: null,\n      map2: null,\n      circles1: [],\n      circles2: [],\n      //   keyword: null,\n      keywordTweets: null,\n      keywordSudo: null,\n      center: null,\n      twi_data: null,\n      sudo_data: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    var twi_scenario = this.$route.params.scenario.split('-')[0];\n    var sudo_scenario = this.$route.params.scenario.split('-')[1];\n    var state = this.$route.params.state;\n    console.log(twi_scenario);\n    console.log(sudo_scenario);\n    console.log(state);\n    var twiDataPromise = null;\n    var sudoDataPromise = null;\n\n    // if (!this.scenario) {\n    twiDataPromise = axios.get(\"http://127.0.0.1:5000/api_twi_state_city/\".concat(twi_scenario, \"/\").concat(state)).then(function (response) {\n      _this.center = response.data.state;\n      _this.twi_data = response.data.results;\n    })[\"catch\"](function (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    });\n    // } else {\n    //   twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.scenario}/${this.state}`)\n    //     .then(response => {\n    //       this.center = response.data.state;\n    //       this.twi_data = response.data.results;\n    //     })\n    //     .catch(error => {\n    //       console.error('Failed to fetch Twitter data:', error);\n    //     });\n    // }\n\n    // if (!this.scenario) {\n    sudoDataPromise = axios.get(\"http://127.0.0.1:5000/api_sudo_state_city/\".concat(sudo_scenario, \"/\").concat(state)).then(function (response) {\n      _this.sudo_data = response.data.results;\n    })[\"catch\"](function (error) {\n      console.error('Failed to fetch Sudo data:', error);\n    });\n    // } else {\n    //   sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${this.scenario}/${this.state}`)\n    //     .then(response => {\n    //       this.sudo_data = response.data.results;\n    //     })\n    //     .catch(error => {\n    //       console.error('Failed to fetch Sudo data:', error);\n    //     });\n    // }\n\n    Promise.all([twiDataPromise, sudoDataPromise]).then(function () {\n      _this.initMap();\n      _this.createCircles();\n    })[\"catch\"](function (error) {\n      console.error('Failed to fetch data:', error);\n    });\n  },\n  // mounted() {\n  //   const scenario = this.$route.params.scenario;\n  //   const state = this.$route.params.state\n  //   if (!this.scenario) {\n  //     const twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${scenario}/${state}`)\n  //       .then(response => {\n  //         this.center = response.data.state;\n  //         this.twi_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Twitter data:', error);\n  //       });\n  //   } else {\n  //     const twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.scenario}/${this.state}`)\n  //       .then(response => {\n  //         this.center = response.data.state;\n  //         this.twi_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Twitter data:', error);\n  //       });\n  //   }\n\n  //   // const twiDataPromise = axios.get('http://127.0.0.1:5000/api_twi_state_city/agism/victoria')\n\n  //   if (!this.scenario) {\n  //     const sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${scenario}/${state}`)\n  //     // const sudoDataPromise = axios.get('http://127.0.0.1:5000/api_sudo_state_city/agism/victoria')\n  //       .then(response => {\n  //         this.sudo_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Sudo data:', error);\n  //       });\n  //   } else {\n  //     const sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${this.scenario}/${this.state}`)\n  //     // const sudoDataPromise = axios.get('http://127.0.0.1:5000/api_sudo_state_city/agism/victoria')\n  //       .then(response => {\n  //         this.sudo_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Sudo data:', error);\n  //       });\n  //   }\n\n  //   Promise.all([twiDataPromise, sudoDataPromise])\n  //     .then(() => {\n  //       // console.log('Data fetched successfully');\n  //       this.initMap();\n  //       this.createCircles();\n  //     })\n  //     .catch(error => {\n  //       console.error('Failed to fetch data:', error);\n  //     });\n\n  // Promise.all([\n  //   axios.get(`http://127.0.0.1:5000/api_twi_state_city/agism/victoria`),\n  //   axios.get(`http://127.0.0.1:5000/api_sudo_state_city/agism/victoria`),\n  //   // axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.scenario}/${this.location}`),\n\n  // ])\n  //   .then(responses => {\n  //     this.center = responses[0].data.state\n  //     this.twi_data = responses[0].data.results\n  //     this.sudo_data = responses[1].data.results\n  //     // this.array = Object.values(this.twi_data)\n\n  //     console.log(this.center)\n  //     console.log(this.twi_data === null)\n  //     // this.twi_data.forEach(tweet => {\n  //     //   console.log(tweet)\n  //     // })\n  //     // console.log(typeof this.twi_data)\n\n  //   })\n  //   .catch(error => {\n  //     console.error(error);\n  //   });\n  // console.log('1')\n  // this.initMap()\n  // this.createCircles()\n  // },\n  methods: {\n    toggleDropdown1: function toggleDropdown1() {\n      this.twi_scenario = \"unemployment\";\n      this.isDropdownOpen1 = !this.isDropdownOpen1;\n    },\n    toggleDropdown2: function toggleDropdown2() {\n      this.twi_scenario = \"agism\";\n      this.isDropdownOpen2 = !this.isDropdownOpen2;\n    },\n    toggleDropdown3: function toggleDropdown3() {\n      this.twi_scenario = \"sexism\";\n      this.isDropdownOpen3 = !this.isDropdownOpen3;\n    },\n    initMap: function initMap() {\n      // const state = this.$route.params.state\n      // if (state === 'victoria') {\n      this.map1 = new google.maps.Map(document.getElementById('map1'), {\n        // center: { lat: -25.2744, lng: 133.7751 },\n        center: this.center,\n        zoom: 6,\n        gestureHandling: \"none\",\n        disableDefaultUI: true\n      });\n      this.map2 = new google.maps.Map(document.getElementById('map2'), {\n        // center: { lat: -25.2744, lng: 133.7751 },\n        center: this.center,\n        zoom: 6,\n        gestureHandling: \"none\",\n        disableDefaultUI: true\n      });\n      // }\n    },\n    createCircles: function createCircles() {\n      var _this2 = this;\n      // const scenario = this.$route.params.scenario;\n      // const keywordTweets = null;\n      // if (scenario === 'unemployment') {\n      //     this.keywordTweets = this.tweets.unemployment;\n      // } else if (scenario === 'agism') {\n      //     this.keywordTweets = this.tweets.agism;\n      // } else if (scenario === 'sexism') {\n      //     this.keywordTweets = this.tweets.sexism;\n      // }\n      // if (scenario === 'unemployment') {\n      //     this.keywordSudo = this.sudo.unemployment;\n      // } else if (scenario === 'agism') {\n      //     this.keywordSudo = this.sudo.agism;\n      // } else if (scenario === 'sexism') {\n      //     this.keywordSudo = this.sudo.sexism;\n      // }\n      // this.keywordTweets = this.twi_data\n      // const keywordTweets = this.tweets[scenario];\n      this.twi_data.forEach(function (tweet) {\n        var circleOptions = {\n          strokeColor: '#FF0000',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#FF0000',\n          fillOpacity: 0.35,\n          map: _this2.map1,\n          center: new google.maps.LatLng(tweet.lat, tweet.lng),\n          radius: tweet.percentage * 50000 // convert count to meters\n        };\n\n        var circle1 = new google.maps.Circle(circleOptions);\n        circle1.addListener('mouseover', function () {\n          _this2.showInfoWindow1(circle1, tweet.name, tweet.count, tweet.total, tweet.percentage);\n        });\n        circle1.addListener('mouseout', function () {\n          _this2.hideInfoWindow();\n        });\n        _this2.circles1.push(circle1);\n      });\n      this.sudo_data.forEach(function (sudo) {\n        var circleOptions = {\n          strokeColor: '#FF0000',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#FF0000',\n          fillOpacity: 0.35,\n          map: _this2.map2,\n          center: new google.maps.LatLng(sudo.lat, sudo.lng),\n          radius: Math.pow(sudo.percentage - 10, 3.7) // convert count to meters\n        };\n\n        var circle2 = new google.maps.Circle(circleOptions);\n        circle2.addListener('mouseover', function () {\n          _this2.showInfoWindow2(circle2, sudo.name, sudo.count, sudo.total, sudo.percentage);\n        });\n        circle2.addListener('mouseout', function () {\n          _this2.hideInfoWindow();\n        });\n        _this2.circles2.push(circle2);\n      });\n    },\n    showInfoWindow1: function showInfoWindow1(circle, name, count, total, percentage) {\n      var infoWindow1 = new google.maps.InfoWindow({\n        content: \"Name: \".concat(name, \"<br>Count: \").concat(count, \"<br>Total: \").concat(total, \"<br>Percentage: \").concat(percentage.toFixed(3), \"%\")\n        // disableAutoPan: true\n      });\n\n      infoWindow1.setPosition(circle.getCenter());\n      infoWindow1.open(this.map1);\n      this.infoWindow = infoWindow1;\n    },\n    showInfoWindow2: function showInfoWindow2(circle, name, count, total, percentage) {\n      var infoWindow2 = new google.maps.InfoWindow({\n        content: \"Name: \".concat(name, \"<br>Count: \").concat(count, \"<br>Ageing population: \").concat(total, \"<br>Ageing population percentage: \").concat(percentage.toFixed(3), \"%\")\n        // disableAutoPan: true\n      });\n\n      infoWindow2.setPosition(circle.getCenter());\n      infoWindow2.open(this.map2);\n      this.infoWindow = infoWindow2;\n    },\n    hideInfoWindow: function hideInfoWindow() {\n      if (this.infoWindow) {\n        this.infoWindow.close();\n      }\n    },\n    confirm: function confirm() {\n      var scenario = this.twi_scenario + '-' + this.sudo_scenario;\n      var new_state = this.location;\n      console.log(scenario);\n      console.log(new_state);\n      this.$router.push({\n        name: 'results',\n        params: {\n          scenario: scenario,\n          state: new_state\n        }\n      });\n      window.location.reload();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","array","twi_scenario","sudo_scenario","location","isDropdownOpen1","isDropdownOpen2","isDropdownOpen3","map1","map2","circles1","circles2","keywordTweets","keywordSudo","center","twi_data","sudo_data","mounted","_this","$route","params","scenario","split","state","console","log","twiDataPromise","sudoDataPromise","get","concat","then","response","results","error","Promise","all","initMap","createCircles","methods","toggleDropdown1","toggleDropdown2","toggleDropdown3","google","maps","Map","document","getElementById","zoom","gestureHandling","disableDefaultUI","_this2","forEach","tweet","circleOptions","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","map","LatLng","lat","lng","radius","percentage","circle1","Circle","addListener","showInfoWindow1","count","total","hideInfoWindow","push","sudo","Math","pow","circle2","showInfoWindow2","circle","infoWindow1","InfoWindow","content","toFixed","setPosition","getCenter","open","infoWindow","infoWindow2","close","confirm","new_state","$router","window","reload"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/views/Results.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"menu\">\n      <div class=\"current\">      \n        <span>Current Scenario: {{ $route.params.scenario }}</span>\n        <!-- <span>Current Sudo Scenario: {{ $route.params.sudo_scenario }}</span> -->\n        <!-- <span v-else>Current Scenario: {{ scenario }}</span> -->\n        <span>Current Location: {{ $route.params.state }}</span>\n        <!-- <span v-else>Current Location: {{ location }}</span> -->\n      </div>\n      <div class=\"choose\">\n        <span class=\"title\">Change Main Topics</span>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown1\">\n            1. Employment discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen1 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'unemployment'\">vs offical employment rate</button>\n            </li>\n            <li>\n              <button @click=\"this.sudo_scenario = 'agism'\">vs offical aging percentage</button>\n            </li>\n            <li>\n              <button @click=\"this.sudo_scenario = 'sexism'\">vs offical gender ratio</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown2\">\n            2. Agism discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen2 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'agism'\">vs offical aging percentage</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown3\">\n            3. Sexism discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen3 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'sexism'\">vs offical gender ratio</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"location\">\n          <span>Change the location: </span>\n          <select v-model=\"location\">\n            <option value=\"new south wales\">NSW</option>\n            <option value=\"victoria\">VIC</option>\n            <option value=\"queensland\">QLD</option>\n            <option value=\"south australia\">SA</option>\n            <option value=\"western australia\">WA</option>\n            <option value=\"tasmania\">ACT</option>\n            <option value=\"australian capital territory\">NT</option>\n            <option value=\"northern territory\">TAS</option>\n            <option value=\"offshore territories\">Other</option>\n          </select>\n        </div>\n        \n        <div class=\"confirm\">\n          <button @click=\"confirm\">Confirm</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"map1\">\n      <h3>Data from Twitter</h3>\n      <div id=\"map1\"></div>\n    </div>\n    <div class=\"map2\">\n      <h3>Data from Sudo</h3>\n      <div id=\"map2\"></div>\n    </div>\n\n    <!-- <div class=\"chart\">\n      <Bar\n        id=\"my-chart-id\"\n        :options=\"chartOptions\"\n        :data=\"chartData\"\n      />\n    </div> -->\n    <!-- <Chart /> -->\n    <!-- <div class=\"dynamic-chart\">\n      <Chart />\n    </div> -->\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n// import Chart from '../components/Chart.vue'\n\nexport default {\n  name: 'Result',\n  // components: { Chart },\n\n  data() {\n    return {\n        array: null,\n\n        twi_scenario: null,\n        sudo_scenario: null,\n        location: null,\n        isDropdownOpen1: false,\n        isDropdownOpen2: false,\n        isDropdownOpen3: false,\n        map1: null,\n        map2: null,\n        circles1: [],\n        circles2: [],\n    //   keyword: null,\n        keywordTweets: null,\n        keywordSudo: null,\n\n        center: null,\n        twi_data: null,\n        sudo_data: null,\n    };\n  },\n  mounted() {\n    const twi_scenario = this.$route.params.scenario.split('-')[0];\n    const sudo_scenario = this.$route.params.scenario.split('-')[1];\n    const state = this.$route.params.state;\n    console.log(twi_scenario)\n    console.log(sudo_scenario)\n    console.log(state)\n\n    let twiDataPromise = null;\n    let sudoDataPromise = null;\n\n    // if (!this.scenario) {\n    twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${twi_scenario}/${state}`)\n      .then(response => {\n        this.center = response.data.state;\n        this.twi_data = response.data.results;\n      })\n      .catch(error => {\n        console.error('Failed to fetch Twitter data:', error);\n      });\n    // } else {\n    //   twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.scenario}/${this.state}`)\n    //     .then(response => {\n    //       this.center = response.data.state;\n    //       this.twi_data = response.data.results;\n    //     })\n    //     .catch(error => {\n    //       console.error('Failed to fetch Twitter data:', error);\n    //     });\n    // }\n\n    // if (!this.scenario) {\n    sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${sudo_scenario}/${state}`)\n      .then(response => {\n        this.sudo_data = response.data.results;\n      })\n      .catch(error => {\n        console.error('Failed to fetch Sudo data:', error);\n      });\n    // } else {\n    //   sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${this.scenario}/${this.state}`)\n    //     .then(response => {\n    //       this.sudo_data = response.data.results;\n    //     })\n    //     .catch(error => {\n    //       console.error('Failed to fetch Sudo data:', error);\n    //     });\n    // }\n\n    Promise.all([twiDataPromise, sudoDataPromise])\n      .then(() => {\n        this.initMap();\n        this.createCircles();\n      })\n      .catch(error => {\n        console.error('Failed to fetch data:', error);\n      });\n  },\n\n  // mounted() {\n  //   const scenario = this.$route.params.scenario;\n  //   const state = this.$route.params.state\n  //   if (!this.scenario) {\n  //     const twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${scenario}/${state}`)\n  //       .then(response => {\n  //         this.center = response.data.state;\n  //         this.twi_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Twitter data:', error);\n  //       });\n  //   } else {\n  //     const twiDataPromise = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.scenario}/${this.state}`)\n  //       .then(response => {\n  //         this.center = response.data.state;\n  //         this.twi_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Twitter data:', error);\n  //       });\n  //   }\n    \n  //   // const twiDataPromise = axios.get('http://127.0.0.1:5000/api_twi_state_city/agism/victoria')\n      \n  //   if (!this.scenario) {\n  //     const sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${scenario}/${state}`)\n  //     // const sudoDataPromise = axios.get('http://127.0.0.1:5000/api_sudo_state_city/agism/victoria')\n  //       .then(response => {\n  //         this.sudo_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Sudo data:', error);\n  //       });\n  //   } else {\n  //     const sudoDataPromise = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${this.scenario}/${this.state}`)\n  //     // const sudoDataPromise = axios.get('http://127.0.0.1:5000/api_sudo_state_city/agism/victoria')\n  //       .then(response => {\n  //         this.sudo_data = response.data.results;\n  //       })\n  //       .catch(error => {\n  //         console.error('Failed to fetch Sudo data:', error);\n  //       });\n  //   }\n    \n  //   Promise.all([twiDataPromise, sudoDataPromise])\n  //     .then(() => {\n  //       // console.log('Data fetched successfully');\n  //       this.initMap();\n  //       this.createCircles();\n  //     })\n  //     .catch(error => {\n  //       console.error('Failed to fetch data:', error);\n  //     });\n  \n\n    // Promise.all([\n    //   axios.get(`http://127.0.0.1:5000/api_twi_state_city/agism/victoria`),\n    //   axios.get(`http://127.0.0.1:5000/api_sudo_state_city/agism/victoria`),\n    //   // axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.scenario}/${this.location}`),\n\n    // ])\n    //   .then(responses => {\n    //     this.center = responses[0].data.state\n    //     this.twi_data = responses[0].data.results\n    //     this.sudo_data = responses[1].data.results\n    //     // this.array = Object.values(this.twi_data)\n\n    //     console.log(this.center)\n    //     console.log(this.twi_data === null)\n    //     // this.twi_data.forEach(tweet => {\n    //     //   console.log(tweet)\n    //     // })\n    //     // console.log(typeof this.twi_data)\n\n    //   })\n    //   .catch(error => {\n    //     console.error(error);\n    //   });\n    // console.log('1')\n    // this.initMap()\n    // this.createCircles()\n  // },\n  methods: {\n    toggleDropdown1() {\n      this.twi_scenario = \"unemployment\"\n      this.isDropdownOpen1 = !this.isDropdownOpen1;\n    },\n    toggleDropdown2() {\n      this.twi_scenario = \"agism\"\n      this.isDropdownOpen2 = !this.isDropdownOpen2;\n    },\n    toggleDropdown3() {\n      this.twi_scenario = \"sexism\"\n      this.isDropdownOpen3 = !this.isDropdownOpen3;\n    },\n    initMap() {\n      // const state = this.$route.params.state\n      // if (state === 'victoria') {\n      this.map1 = new google.maps.Map(document.getElementById('map1'), {\n          // center: { lat: -25.2744, lng: 133.7751 },\n          center: this.center,\n          zoom: 6,\n          gestureHandling: \"none\",\n          disableDefaultUI: true\n      })\n      this.map2 = new google.maps.Map(document.getElementById('map2'), {\n          // center: { lat: -25.2744, lng: 133.7751 },\n          center: this.center,\n          zoom: 6,\n          gestureHandling: \"none\",\n          disableDefaultUI: true\n      })\n      // }\n    },\n    createCircles() {\n        // const scenario = this.$route.params.scenario;\n        // const keywordTweets = null;\n        // if (scenario === 'unemployment') {\n        //     this.keywordTweets = this.tweets.unemployment;\n        // } else if (scenario === 'agism') {\n        //     this.keywordTweets = this.tweets.agism;\n        // } else if (scenario === 'sexism') {\n        //     this.keywordTweets = this.tweets.sexism;\n        // }\n        // if (scenario === 'unemployment') {\n        //     this.keywordSudo = this.sudo.unemployment;\n        // } else if (scenario === 'agism') {\n        //     this.keywordSudo = this.sudo.agism;\n        // } else if (scenario === 'sexism') {\n        //     this.keywordSudo = this.sudo.sexism;\n        // }\n        // this.keywordTweets = this.twi_data\n        // const keywordTweets = this.tweets[scenario];\n        this.twi_data.forEach(tweet => {\n            const circleOptions = {\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.35,\n                map: this.map1,\n                center: new google.maps.LatLng(tweet.lat, tweet.lng),\n                radius: tweet.percentage * 50000 // convert count to meters\n            };\n            const circle1 = new google.maps.Circle(circleOptions);\n            circle1.addListener('mouseover', () => {\n                this.showInfoWindow1(circle1, tweet.name, tweet.count, tweet.total, tweet.percentage);\n            });\n            circle1.addListener('mouseout', () => {\n                this.hideInfoWindow();\n            });\n            this.circles1.push(circle1);\n        });\n        this.sudo_data.forEach(sudo => {\n            const circleOptions = {\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.35,\n                map: this.map2,\n                center: new google.maps.LatLng(sudo.lat, sudo.lng),\n                radius: (sudo.percentage-10)**3.7 // convert count to meters\n            };\n            const circle2 = new google.maps.Circle(circleOptions);\n            circle2.addListener('mouseover', () => {\n                this.showInfoWindow2(circle2, sudo.name, sudo.count, sudo.total, sudo.percentage);\n            });\n            circle2.addListener('mouseout', () => {\n                this.hideInfoWindow();\n            });\n            this.circles2.push(circle2);\n        });\n    },\n    showInfoWindow1(circle, name, count, total, percentage) {\n      const infoWindow1 = new google.maps.InfoWindow({\n        content: `Name: ${name}<br>Count: ${count}<br>Total: ${total}<br>Percentage: ${percentage.toFixed(3)}%`,\n        // disableAutoPan: true\n      });\n      infoWindow1.setPosition(circle.getCenter());\n      infoWindow1.open(this.map1);\n      this.infoWindow = infoWindow1;\n    },\n    showInfoWindow2(circle, name, count, total, percentage) {\n      const infoWindow2 = new google.maps.InfoWindow({\n        content: `Name: ${name}<br>Count: ${count}<br>Ageing population: ${total}<br>Ageing population percentage: ${percentage.toFixed(3)}%`,\n        // disableAutoPan: true\n      });\n      infoWindow2.setPosition(circle.getCenter());\n      infoWindow2.open(this.map2);\n      this.infoWindow = infoWindow2;\n    },\n    hideInfoWindow() {\n      if (this.infoWindow) {\n        this.infoWindow.close();\n      }\n    },\n    confirm() {\n        const scenario = this.twi_scenario + '-' + this.sudo_scenario\n        const new_state = this.location\n        console.log(scenario)\n        console.log(new_state)\n        this.$router.push({ name: 'results', params: { scenario: scenario, state: new_state } })\n        window.location.reload();\n    }\n  }\n}\n</script>\n\n<style>\n.dropdown-list {\n  display: none;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.dropdown-list button {\n  /* border: 1px solid #ddd; */\n  border: none;\n  border-bottom: 1px solid #ddd;\n  background: white;\n  width: 100%;\n  padding: 3px;\n  text-align: left;\n}\n.dropdown-list button:hover {\n  background: #eee;\n}\n.dropdown-list.is-open {\n  display: block;\n}\n.dropdown-item::before {\n  content: none;\n}\n.dropdown-toggle {\n  width: 100%;\n  text-align: left;\n}\n\n\n.menu {\n  position: absolute;\n  width: 20%;\n  height: 95%;\n  border: 1px solid #ddd;\n}\n.menu div {\n  position: relative;\n}\n.menu span {\n  display: inline-block;\n}\n.current {\n  position: relative;\n  margin: 10px;\n  padding: 10px 0;\n  border-bottom: 1px solid #ddd;\n}\n.current span {\n  display: block;\n}\n.choose .title {\n  position: relative;\n  display: inline;\n  margin: 20px;\n  padding: 10px 0;\n}\n.choose div {\n  position: relative;\n  /* display: flex; */\n  margin-top: 20px;\n  margin-bottom: 60px;\n}\n\n.map1 {\n    position: absolute;\n    width: 33%;\n    height: 40%;\n    left: 25%;\n    z-index: 1;\n}\n.map1 h3 {\n    position: relative;\n    z-index: 1;\n}\n#map1 {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n}\n.map2 {\n    position: absolute;\n    width: 33%;\n    height: 40%;\n    right: 5%;\n    z-index: 1;\n}\n.map2 h3 {\n    position: relative;\n    z-index: 1;\n}\n#map2 {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n}\n.scenario {\n    position: relative;\n}\n.scenario button {\n    display: inline-block;\n    position: relative;\n    background: white;\n    border: 1px solid #d9d9d9;\n    padding: 10px 20px;\n    border-radius: 32px;\n    z-index: 2;\n    top: 15px;\n    margin-right: 10px;\n    font-size: 1em;\n    font-family: arial;\n    font-weight: bold;\n    color: #000000;\n}\n.scenario button:hover {\n  cursor: pointer;\n  background: #eee;\n}\n\n.dynamic-chart {\n  position: absolute;\n  top: 51%;\n  width: 35%;\n  /* height: 10%; */\n  left: 38%;\n  z-index: 1;\n}\n\n</style>"],"mappings":";;;;;;;;;AAsGA,OAAOA,KAAI,MAAO,OAAO;AACzB;;AAEA,eAAe;EACbC,IAAI,EAAE,QAAQ;EACd;EAEAC,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACHC,KAAK,EAAE,IAAI;MAEXC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE,IAAI;MACnBC,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE,KAAK;MACtBC,eAAe,EAAE,KAAK;MACtBC,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MAChB;MACIC,aAAa,EAAE,IAAI;MACnBC,WAAW,EAAE,IAAI;MAEjBC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,WAAAA,QAAA,EAAG;IAAA,IAAAC,KAAA;IACR,IAAMhB,YAAW,GAAI,IAAI,CAACiB,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAMnB,aAAY,GAAI,IAAI,CAACgB,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/D,IAAMC,KAAI,GAAI,IAAI,CAACJ,MAAM,CAACC,MAAM,CAACG,KAAK;IACtCC,OAAO,CAACC,GAAG,CAACvB,YAAY;IACxBsB,OAAO,CAACC,GAAG,CAACtB,aAAa;IACzBqB,OAAO,CAACC,GAAG,CAACF,KAAK;IAEjB,IAAIG,cAAa,GAAI,IAAI;IACzB,IAAIC,eAAc,GAAI,IAAI;;IAE1B;IACAD,cAAa,GAAI5B,KAAK,CAAC8B,GAAG,6CAAAC,MAAA,CAA6C3B,YAAY,OAAA2B,MAAA,CAAIN,KAAK,CAAE,EAC3FO,IAAI,CAAC,UAAAC,QAAO,EAAK;MAChBb,KAAI,CAACJ,MAAK,GAAIiB,QAAQ,CAAC/B,IAAI,CAACuB,KAAK;MACjCL,KAAI,CAACH,QAAO,GAAIgB,QAAQ,CAAC/B,IAAI,CAACgC,OAAO;IACvC,CAAC,UACK,CAAC,UAAAC,KAAI,EAAK;MACdT,OAAO,CAACS,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACAN,eAAc,GAAI7B,KAAK,CAAC8B,GAAG,8CAAAC,MAAA,CAA8C1B,aAAa,OAAA0B,MAAA,CAAIN,KAAK,CAAE,EAC9FO,IAAI,CAAC,UAAAC,QAAO,EAAK;MAChBb,KAAI,CAACF,SAAQ,GAAIe,QAAQ,CAAC/B,IAAI,CAACgC,OAAO;IACxC,CAAC,UACK,CAAC,UAAAC,KAAI,EAAK;MACdT,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAC,OAAO,CAACC,GAAG,CAAC,CAACT,cAAc,EAAEC,eAAe,CAAC,EAC1CG,IAAI,CAAC,YAAM;MACVZ,KAAI,CAACkB,OAAO,CAAC,CAAC;MACdlB,KAAI,CAACmB,aAAa,CAAC,CAAC;IACtB,CAAC,UACK,CAAC,UAAAJ,KAAI,EAAK;MACdT,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGE;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACF;EACAK,OAAO,EAAE;IACPC,eAAe,WAAAA,gBAAA,EAAG;MAChB,IAAI,CAACrC,YAAW,GAAI,cAAa;MACj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"},"metadata":{},"sourceType":"module","externalDependencies":[]}