{"ast":null,"code":"import _slicedToArray from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"options\"];\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport mapElementMixin from '../mixins/map-element.js';\nimport { getPropsValues, bindProps, bindEvents } from '../utils/helpers.js';\nimport { polylineMappedProps } from '../utils/mapped-props-by-map-element.js';\n\n/**\n * PolyLine component\n * @displayName GmapPolyline\n * @see [source code](/guide/polyline.html#source-code)\n * @see [official docs](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#Polyline)\n * @see [official reference](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#Polyline)\n */\nvar script = {\n  name: 'PolylineShape',\n  mixins: [mapElementMixin],\n  render: function render() {\n    return '';\n  },\n  provide: function provide() {\n    var _this = this;\n    var events = ['click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'];\n    var promise = this.$mapPromise.then(function (map) {\n      _this.$map = map;\n\n      // Initialize the maps with the given options\n      var initialOptions = _objectSpread(_objectSpread({}, _this.options), {}, {\n        map: map\n      }, getPropsValues(_this, polylineMappedProps));\n      var extraOptions = initialOptions.options,\n        finalOptions = _objectWithoutProperties(initialOptions, _excluded);\n      _this.$polylineObject = new google.maps.Polyline(finalOptions);\n      bindProps(_this, _this.$polylineObject, polylineMappedProps);\n      bindEvents(_this, _this.$polylineObject, events);\n      var clearEvents = function clearEvents() {};\n      _this.$watch('path', function (path) {\n        if (path) {\n          clearEvents();\n          _this.$polylineObject.setPath(path);\n          var mvcPath = _this.$polylineObject.getPath();\n          var eventListeners = [];\n          var updatePaths = function updatePaths() {\n            /**\n             * An event to detect when a path change\n             * @property {array} path `this.$polygonObject.getPath()`\n             */\n            _this.$emit('path_changed', _this.$polylineObject.getPath());\n          };\n          eventListeners.push([mvcPath, mvcPath.addListener('insert_at', updatePaths)]);\n          eventListeners.push([mvcPath, mvcPath.addListener('remove_at', updatePaths)]);\n          eventListeners.push([mvcPath, mvcPath.addListener('set_at', updatePaths)]);\n          clearEvents = function clearEvents() {\n            // TODO: analyze, we change map to forEach because clearEvents is a void function and the returned array is not used\n            eventListeners.forEach(function (_ref) {\n              var _ref2 = _slicedToArray(_ref, 2),\n                listenerHandle = _ref2[1];\n              google.maps.event.removeListener(listenerHandle);\n            });\n          };\n        }\n      }, {\n        deep: _this.deepWatch,\n        immediate: true\n      });\n      return _this.$polylineObject;\n    })[\"catch\"](function (error) {\n      throw error;\n    });\n\n    // TODO: analyze the efects of only returns the instance and remove completely the promise\n    this.$polylinePromise = promise;\n    return {\n      $polylinePromise: promise\n    };\n  },\n  props: {\n    /**\n     * If set true the object will be deep watched\n     * @value boolean\n     */\n    deepWatch: {\n      type: Boolean,\n      \"default\": false\n    },\n    /**\n     * Indicates whether this Polygon handles mouse events. Defaults to true.\n     * @value true, false\n     * @see [Polyline draggable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.clickable)\n     */\n    clickable: {\n      type: Boolean,\n      \"default\": false\n    },\n    /**\n     * Indicates if the polyline is draggable\n     * @value true, false\n     * @see [Polyline draggable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.draggable)\n     */\n    draggable: {\n      type: Boolean\n    },\n    /**\n     * Indicates if the polygon is editable\n     * @value true, false\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.editable)\n     */\n    editable: {\n      type: Boolean\n    },\n    /**\n     * The stroke color. All CSS3 colors are supported except for extended named colors.\n     * @value '#000'\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.strokeColor)\n     */\n    strokeColor: {\n      type: String,\n      \"default\": ''\n    },\n    /**\n     * The stroke opacity between 0.0 and 1.0.\n     * @value 1\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.strokeOpacity)\n     */\n    strokeOpacity: {\n      type: Number,\n      \"default\": 1\n    },\n    /**\n     * The stroke width in pixels.\n     * @value 1\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.strokeWeight)\n     */\n    strokeWeight: {\n      type: Number,\n      \"default\": 1\n    },\n    /**\n     * Whether this polyline is visible on the map. Defaults to true.\n     * @value 1\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.visible)\n     */\n    visible: {\n      type: Boolean,\n      \"default\": true\n    },\n    /**\n     * More options that you can pass to the component\n     * @value boolean\n     */\n    options: {\n      type: Object,\n      \"default\": undefined\n    },\n    /**\n     * Indicates if the polygon is editable\n     * @value Array\n     * @see [Polyline path](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.path)\n     */\n    path: {\n      type: Array,\n      \"default\": undefined\n    }\n  },\n  destroyed: function destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$polylineObject && this.$polylineObject.setMap) {\n      this.$polylineObject.setMap(null);\n    }\n  }\n};\nexport { script as default };","map":{"version":3,"names":["mapElementMixin","getPropsValues","bindProps","bindEvents","polylineMappedProps","script","name","mixins","render","provide","_this","events","promise","$mapPromise","then","map","$map","initialOptions","_objectSpread","options","extraOptions","finalOptions","_objectWithoutProperties","_excluded","$polylineObject","google","maps","Polyline","clearEvents","$watch","path","setPath","mvcPath","getPath","eventListeners","updatePaths","$emit","push","addListener","forEach","_ref","_ref2","_slicedToArray","listenerHandle","event","removeListener","deep","deepWatch","immediate","error","$polylinePromise","props","type","Boolean","clickable","draggable","editable","strokeColor","String","strokeOpacity","Number","strokeWeight","visible","Object","undefined","Array","destroyed","setMap","default"],"sources":["/Users/eddiediedie/Desktop/CCC_A2/CCCA2/node_modules/gmap-vue/dist/esm/components/polyline-shape.vue_rollup-plugin-vue_script.vue.js"],"sourcesContent":["import mapElementMixin from '../mixins/map-element.js';\nimport { getPropsValues, bindProps, bindEvents } from '../utils/helpers.js';\nimport { polylineMappedProps } from '../utils/mapped-props-by-map-element.js';\n\n/**\n * PolyLine component\n * @displayName GmapPolyline\n * @see [source code](/guide/polyline.html#source-code)\n * @see [official docs](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#Polyline)\n * @see [official reference](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#Polyline)\n */\nvar script = {\n  name: 'PolylineShape',\n  mixins: [mapElementMixin],\n  render() {\n    return '';\n  },\n  provide() {\n    const events = [\n      'click',\n      'dblclick',\n      'drag',\n      'dragend',\n      'dragstart',\n      'mousedown',\n      'mousemove',\n      'mouseout',\n      'mouseover',\n      'mouseup',\n      'rightclick',\n    ];\n\n    const promise = this.$mapPromise\n      .then((map) => {\n        this.$map = map;\n\n        // Initialize the maps with the given options\n        const initialOptions = {\n          ...this.options,\n          map,\n          ...getPropsValues(this, polylineMappedProps),\n        };\n        const { options: extraOptions, ...finalOptions } = initialOptions;\n\n        this.$polylineObject = new google.maps.Polyline(finalOptions);\n\n        bindProps(this, this.$polylineObject, polylineMappedProps);\n        bindEvents(this, this.$polylineObject, events);\n\n        let clearEvents = () => {};\n\n        this.$watch(\n          'path',\n          (path) => {\n            if (path) {\n              clearEvents();\n\n              this.$polylineObject.setPath(path);\n\n              const mvcPath = this.$polylineObject.getPath();\n              const eventListeners = [];\n\n              const updatePaths = () => {\n                /**\n                 * An event to detect when a path change\n                 * @property {array} path `this.$polygonObject.getPath()`\n                 */\n                this.$emit('path_changed', this.$polylineObject.getPath());\n              };\n\n              eventListeners.push([\n                mvcPath,\n                mvcPath.addListener('insert_at', updatePaths),\n              ]);\n              eventListeners.push([\n                mvcPath,\n                mvcPath.addListener('remove_at', updatePaths),\n              ]);\n              eventListeners.push([\n                mvcPath,\n                mvcPath.addListener('set_at', updatePaths),\n              ]);\n\n              clearEvents = () => {\n                // TODO: analyze, we change map to forEach because clearEvents is a void function and the returned array is not used\n                eventListeners.forEach(([, listenerHandle]) => {\n                  google.maps.event.removeListener(listenerHandle);\n                });\n              };\n            }\n          },\n          {\n            deep: this.deepWatch,\n            immediate: true,\n          }\n        );\n\n        return this.$polylineObject;\n      })\n      .catch((error) => {\n        throw error;\n      });\n\n    // TODO: analyze the efects of only returns the instance and remove completely the promise\n    this.$polylinePromise = promise;\n    return { $polylinePromise: promise };\n  },\n  props: {\n    /**\n     * If set true the object will be deep watched\n     * @value boolean\n     */\n    deepWatch: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Indicates whether this Polygon handles mouse events. Defaults to true.\n     * @value true, false\n     * @see [Polyline draggable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.clickable)\n     */\n    clickable: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Indicates if the polyline is draggable\n     * @value true, false\n     * @see [Polyline draggable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.draggable)\n     */\n    draggable: {\n      type: Boolean,\n    },\n    /**\n     * Indicates if the polygon is editable\n     * @value true, false\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.editable)\n     */\n    editable: {\n      type: Boolean,\n    },\n    /**\n     * The stroke color. All CSS3 colors are supported except for extended named colors.\n     * @value '#000'\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.strokeColor)\n     */\n    strokeColor: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The stroke opacity between 0.0 and 1.0.\n     * @value 1\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.strokeOpacity)\n     */\n    strokeOpacity: {\n      type: Number,\n      default: 1,\n    },\n    /**\n     * The stroke width in pixels.\n     * @value 1\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.strokeWeight)\n     */\n    strokeWeight: {\n      type: Number,\n      default: 1,\n    },\n    /**\n     * Whether this polyline is visible on the map. Defaults to true.\n     * @value 1\n     * @see [Polyline editable](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.visible)\n     */\n    visible: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * More options that you can pass to the component\n     * @value boolean\n     */\n    options: {\n      type: Object,\n      default: undefined,\n    },\n    /**\n     * Indicates if the polygon is editable\n     * @value Array\n     * @see [Polyline path](https://developers.google.com/maps/documentation/javascript/reference/polygon?hl=es#PolylineOptions.path)\n     */\n    path: {\n      type: Array,\n      default: undefined,\n    },\n  },\n  destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$polylineObject && this.$polylineObject.setMap) {\n      this.$polylineObject.setMap(null);\n    }\n  },\n};\n\nexport { script as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}