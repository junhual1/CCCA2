{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"menu\"\n};\nvar _hoisted_2 = {\n  \"class\": \"current\"\n};\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"map1\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Data from Twitter\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map1\"\n})], -1 /* HOISTED */);\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"map2\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Data from Sudo\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map2\"\n})], -1 /* HOISTED */);\nvar _hoisted_5 = {\n  \"class\": \"dynamic-chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Chart = _resolveComponent(\"Chart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, \"Current Scenario: \" + _toDisplayString(_ctx.$route.params.scenario), 1 /* TEXT */), _createCommentVNode(\" <span>Current Sudo Scenario: {{ $route.params.sudo_scenario }}</span> \"), _createCommentVNode(\" <span v-else>Current Scenario: {{ scenario }}</span> \"), _createElementVNode(\"span\", null, \"Current Location: \" + _toDisplayString(_ctx.$route.params.state), 1 /* TEXT */), _createCommentVNode(\" <span v-else>Current Location: {{ location }}</span> \")]), _createCommentVNode(\" <div class=\\\"choose\\\">\\n        <span class=\\\"title\\\">Change Main Topics</span>\\n        <div class=\\\"dropdown\\\">\\n          <button class=\\\"dropdown-toggle\\\" @click=\\\"toggleDropdown1\\\">\\n            1. Employment discussion rate on Twitter\\n          </button>\\n          <ul class=\\\"dropdown-list\\\" :class=\\\"{ 'is-open': isDropdownOpen1 }\\\">\\n            <li>\\n              <button @click=\\\"this.sudo_scenario = 'unemployment'\\\">vs offical employment rate</button>\\n            </li>\\n            <li>\\n              <button @click=\\\"this.sudo_scenario = 'agism'\\\">vs offical aging percentage</button>\\n            </li>\\n            <li>\\n              <button @click=\\\"this.sudo_scenario = 'sexism'\\\">vs offical gender ratio</button>\\n            </li>\\n            <li>\\n              <button>vs other 2 scenarios mentioned in tweets</button>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"dropdown\\\">\\n          <button class=\\\"dropdown-toggle\\\" @click=\\\"toggleDropdown2\\\">\\n            2. Agism discussion rate on Twitter\\n          </button>\\n          <ul class=\\\"dropdown-list\\\" :class=\\\"{ 'is-open': isDropdownOpen2 }\\\">\\n            <li>\\n              <button @click=\\\"this.sudo_scenario = 'agism'\\\">vs offical aging percentage</button>\\n            </li>\\n            <li>\\n              <button>vs other 2 scenarios mentioned in tweets</button>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"dropdown\\\">\\n          <button class=\\\"dropdown-toggle\\\" @click=\\\"toggleDropdown3\\\">\\n            3. Sexism discussion rate on Twitter\\n          </button>\\n          <ul class=\\\"dropdown-list\\\" :class=\\\"{ 'is-open': isDropdownOpen3 }\\\">\\n            <li>\\n              <button @click=\\\"this.sudo_scenario = 'sexism'\\\">vs offical gender ratio</button>\\n            </li>\\n            <li>\\n              <button>vs other 2 scenarios mentioned in tweets</button>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"location\\\">\\n          <span>Change the location: </span>\\n          <select v-model=\\\"location\\\">\\n            <option value=\\\"newsouthwales\\\">NSW</option>\\n            <option value=\\\"victoria\\\">VIC</option>\\n            <option value=\\\"queensland\\\">QLD</option>\\n            <option value=\\\"southaustralia\\\">SA</option>\\n            <option value=\\\"westernaustralia\\\">WA</option>\\n            <option value=\\\"tasmania\\\">ACT</option>\\n            <option value=\\\"australiancapitalterritory\\\">NT</option>\\n            <option value=\\\"northernterritory\\\">TAS</option>\\n            <option value=\\\"offshoreterritories\\\">Other</option>\\n          </select>\\n        </div>\\n        \\n        <div class=\\\"confirm\\\">\\n          <span v-if=\\\"!this.sudo_scenario\\\">Please choose a scenario!</span>\\n          <button @click=\\\"confirm\\\" :disabled=\\\"!this.sudo_scenario\\\">Confirm</button>\\n        </div> \"), _createCommentVNode(\" </div> \")]), _hoisted_3, _hoisted_4, _createCommentVNode(\" <div class=\\\"chart\\\">\\n      <Bar\\n        id=\\\"my-chart-id\\\"\\n        :options=\\\"chartOptions\\\"\\n        :data=\\\"chartData\\\"\\n      />\\n    </div> \"), _createCommentVNode(\" <Chart /> \"), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_Chart)]), _createCommentVNode(\" <div class=\\\"graph2\\\">\\n      <Graph />\\n    </div> \")]);\n}","map":{"version":3,"names":["_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","$route","params","scenario","_createCommentVNode","state","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_Chart"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/views/Results.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"menu\">\n      <div class=\"current\">      \n        <span>Current Scenario: {{ $route.params.scenario }}</span>\n        <!-- <span>Current Sudo Scenario: {{ $route.params.sudo_scenario }}</span> -->\n        <!-- <span v-else>Current Scenario: {{ scenario }}</span> -->\n        <span>Current Location: {{ $route.params.state }}</span>\n        <!-- <span v-else>Current Location: {{ location }}</span> -->\n      </div>\n      <!-- <div class=\"choose\">\n        <span class=\"title\">Change Main Topics</span>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown1\">\n            1. Employment discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen1 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'unemployment'\">vs offical employment rate</button>\n            </li>\n            <li>\n              <button @click=\"this.sudo_scenario = 'agism'\">vs offical aging percentage</button>\n            </li>\n            <li>\n              <button @click=\"this.sudo_scenario = 'sexism'\">vs offical gender ratio</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown2\">\n            2. Agism discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen2 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'agism'\">vs offical aging percentage</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"dropdown\">\n          <button class=\"dropdown-toggle\" @click=\"toggleDropdown3\">\n            3. Sexism discussion rate on Twitter\n          </button>\n          <ul class=\"dropdown-list\" :class=\"{ 'is-open': isDropdownOpen3 }\">\n            <li>\n              <button @click=\"this.sudo_scenario = 'sexism'\">vs offical gender ratio</button>\n            </li>\n            <li>\n              <button>vs other 2 scenarios mentioned in tweets</button>\n            </li>\n          </ul>\n        </div>\n        <div class=\"location\">\n          <span>Change the location: </span>\n          <select v-model=\"location\">\n            <option value=\"newsouthwales\">NSW</option>\n            <option value=\"victoria\">VIC</option>\n            <option value=\"queensland\">QLD</option>\n            <option value=\"southaustralia\">SA</option>\n            <option value=\"westernaustralia\">WA</option>\n            <option value=\"tasmania\">ACT</option>\n            <option value=\"australiancapitalterritory\">NT</option>\n            <option value=\"northernterritory\">TAS</option>\n            <option value=\"offshoreterritories\">Other</option>\n          </select>\n        </div>\n        \n        <div class=\"confirm\">\n          <span v-if=\"!this.sudo_scenario\">Please choose a scenario!</span>\n          <button @click=\"confirm\" :disabled=\"!this.sudo_scenario\">Confirm</button>\n        </div> -->\n      <!-- </div> -->\n    </div>\n    <div class=\"map1\">\n      <h3>Data from Twitter</h3>\n      <div id=\"map1\"></div>\n    </div>\n    <div class=\"map2\">\n      <h3>Data from Sudo</h3>\n      <div id=\"map2\"></div>\n    </div>\n\n    <!-- <div class=\"chart\">\n      <Bar\n        id=\"my-chart-id\"\n        :options=\"chartOptions\"\n        :data=\"chartData\"\n      />\n    </div> -->\n    <!-- <Chart /> -->\n    <div class=\"dynamic-chart\">\n      <Chart />\n    </div>\n\n\n    <!-- <div class=\"graph2\">\n      <Graph />\n    </div> -->\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Chart from '../components/Chart.vue'\n\nexport default {\n  name: 'Result',\n  components: { Chart },\n\n  data() {\n    return {\n        zoom_size: null,\n\n        twi_scenario: null,\n        sudo_scenario: null,\n        scenario: null,\n        location: null,\n        isDropdownOpen1: false,\n        isDropdownOpen2: false,\n        isDropdownOpen3: false,\n        map1: null,\n        map2: null,\n        circles1: [],\n        circles2: [],\n    //   keyword: null,\n        keywordTweets: null,\n        keywordSudo: null,\n\n        center: null,\n        twi_data: null,\n        sudo_data: null,\n\n        sudo_min: null\n    };\n  },\n  created() {\n    this.scenario = this.$route.params.scenario;\n    this.twi_scenario = this.scenario.split('-')[0]\n    this.sudo_scenario = this.scenario.split('-')[1]\n    this.location = this.$route.params.state;\n  },\n  watch: {\n    \"$route.params.state\": function(newValue) {\n      this.location = newValue;\n    }\n  },\n  async mounted() {\n    // console.log(this.scenario)\n    // console.log(this.twi_scenario)\n    // console.log(this.sudo_scenario)\n    // console.log(this.location)\n    // const twi_scenario = this.$route.params.scenario.split('-')[0];\n    // const sudo_scenario = this.$route.params.scenario.split('-')[1];\n    // const state = this.$route.params.state;\n\n    try {\n      const twiResponse = await axios.get(`http://127.0.0.1:5000/api_twi_state_city/${this.twi_scenario}/${this.location}`);\n      this.center = twiResponse.data.state;\n      this.twi_data = twiResponse.data.results;\n    } catch (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    }\n\n    try {\n      const sudoResponse = await axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${this.sudo_scenario}/${this.location}`);\n      this.sudo_data = sudoResponse.data.results;\n      this.sudo_min = this.sudo_data[this.sudo_data.length-1].percentage\n    } catch (error) {\n      console.error('Failed to fetch Sudo data:', error);\n    }\n\n    this.initMap();\n    this.createCircles();\n  },\n  methods: {\n    // toggleDropdown1() {\n    //   this.twi_scenario = \"unemployment\"\n    //   this.isDropdownOpen1 = !this.isDropdownOpen1;\n    // },\n    // toggleDropdown2() {\n    //   this.twi_scenario = \"agism\"\n    //   this.isDropdownOpen2 = !this.isDropdownOpen2;\n    // },\n    // toggleDropdown3() {\n    //   this.twi_scenario = \"sexism\"\n    //   this.isDropdownOpen3 = !this.isDropdownOpen3;\n    // },\n    initMap() {\n      // const state = this.$route.params.state\n      // if (state === 'victoria') {\n      this.map1 = new google.maps.Map(document.getElementById('map1'), {\n          // center: { lat: -25.2744, lng: 133.7751 },\n          center: this.center,\n          zoom: 6,\n          gestureHandling: \"none\",\n          disableDefaultUI: true\n      })\n      this.map2 = new google.maps.Map(document.getElementById('map2'), {\n          // center: { lat: -25.2744, lng: 133.7751 },\n          center: this.center,\n          zoom: 6,\n          gestureHandling: \"none\",\n          disableDefaultUI: true\n      })\n      // }\n    },\n    createCircles() {\n        this.twi_data.forEach(tweet => {\n            const circleOptions = {\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.35,\n                map: this.map1,\n                center: new google.maps.LatLng(tweet.lat, tweet.lng),\n                radius: tweet.percentage * 50000 \n            };\n            const circle1 = new google.maps.Circle(circleOptions);\n            circle1.addListener('mouseover', () => {\n                this.showInfoWindow1(circle1, tweet.city, tweet.count, tweet.total, tweet.percentage);\n            });\n            circle1.addListener('mouseout', () => {\n                this.hideInfoWindow();\n            });\n            this.circles1.push(circle1);\n        });\n\n        this.sudo_data.forEach(sudo => {\n            const circleOptions = {\n                strokeColor: '#000000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#c0c0c0',\n                fillOpacity: 0.35,\n                map: this.map2,\n                center: new google.maps.LatLng(sudo.lat, sudo.lng),\n                radius: (sudo.percentage - this.sudo_min * 0.9) ** 2 * 50 \n            };\n\n            const circle2 = new google.maps.Circle(circleOptions);\n            circle2.addListener('mouseover', () => {\n                this.showInfoWindow2(circle2, sudo.city, sudo.count, sudo.total, sudo.percentage);\n            });\n            circle2.addListener('mouseout', () => {\n                this.hideInfoWindow();\n            });\n            this.circles2.push(circle2);\n        });\n    },\n    showInfoWindow1(circle, name, count, total, percentage) {\n      const infoWindow1 = new google.maps.InfoWindow({\n        content: `Name: ${name}<br>Count: ${count}<br>Total: ${total}<br>Percentage: ${percentage.toFixed(3)}%`,\n        // disableAutoPan: true\n      });\n      infoWindow1.setPosition(circle.getCenter());\n      infoWindow1.open(this.map1);\n      this.infoWindow = infoWindow1;\n    },\n    showInfoWindow2(circle, name, count, total, percentage) {\n      const infoWindow2 = new google.maps.InfoWindow({\n        content: `Name: ${name}<br>Count: ${count}<br>Ageing population: ${total}<br>Ageing population percentage: ${percentage.toFixed(3)}%`,\n        // disableAutoPan: true\n      });\n      infoWindow2.setPosition(circle.getCenter());\n      infoWindow2.open(this.map2);\n      this.infoWindow = infoWindow2;\n    },\n    hideInfoWindow() {\n      if (this.infoWindow) {\n        this.infoWindow.close();\n      }\n    },\n    confirm() {\n        const new_twi_scenario = this.twi_scenario;\n        const new_sudo_scenario = this.sudo_scenario;\n        const new_state = this.location;\n\n        try {\n          const new_twiResponse = axios.get(`http://127.0.0.1:5000/api_twi_state_city/${new_twi_scenario}/${new_state}`);\n          this.center = new_twiResponse.data.state;\n          this.twi_data = new_twiResponse.data.results;\n        } catch (error) {\n          console.error('Failed to fetch Twitter data:', error);\n        }\n\n        try {\n          const new_sudoResponse = axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${new_sudo_scenario}/${new_state}`);\n          this.sudo_data = new_sudoResponse.data.results;\n        } catch (error) {\n          console.error('Failed to fetch Sudo data:', error);\n        }\n\n        this.initMap();\n        this.createCircles();\n\n        const scenario = this.twi_scenario + '-' + this.sudo_scenario\n        // const new_state = this.location\n        // this.$router.push({ name: 'results', params: { scenario: scenario, state: new_state } })\n        this.$router.push({ path: `/${scenario}/${new_state}`, query: { scenario, new_state } })\n\n\n\n        // this.$router.push({ path: `/${scenario}/${new_state}` });\n        // window.location.reload();\n    }\n  }\n}\n</script>\n\n<style>\n.dropdown-list {\n  display: none;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.dropdown-list button {\n  /* border: 1px solid #ddd; */\n  border: none;\n  border-bottom: 1px solid #ddd;\n  background: white;\n  width: 100%;\n  padding: 3px;\n  text-align: left;\n}\n.dropdown-list button:hover {\n  background: #eee;\n}\n.dropdown-list.is-open {\n  display: block;\n}\n.dropdown-item::before {\n  content: none;\n}\n.dropdown-toggle {\n  width: 100%;\n  text-align: left;\n}\n\n\n.menu {\n  position: absolute;\n  width: 20%;\n  height: 95%;\n  border: 1px solid #ddd;\n}\n.menu div {\n  position: relative;\n}\n.menu span {\n  display: inline-block;\n}\n.current {\n  position: relative;\n  margin: 10px;\n  padding: 10px 0;\n  border-bottom: 1px solid #ddd;\n}\n.current span {\n  display: block;\n}\n.choose .title {\n  position: relative;\n  display: inline;\n  margin: 20px;\n  padding: 10px 0;\n}\n.choose div {\n  position: relative;\n  /* display: flex; */\n  margin-top: 20px;\n  margin-bottom: 60px;\n}\n\n.map1 {\n    position: absolute;\n    width: 33%;\n    height: 40%;\n    left: 25%;\n    z-index: 1;\n}\n.map1 h3 {\n    position: relative;\n    z-index: 1;\n}\n#map1 {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n}\n.map2 {\n    position: absolute;\n    width: 33%;\n    height: 40%;\n    right: 5%;\n    z-index: 1;\n}\n.map2 h3 {\n    position: relative;\n    z-index: 1;\n}\n#map2 {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n}\n.scenario {\n    position: relative;\n}\n.scenario button {\n    display: inline-block;\n    position: relative;\n    background: white;\n    border: 1px solid #d9d9d9;\n    padding: 10px 20px;\n    border-radius: 32px;\n    z-index: 2;\n    top: 15px;\n    margin-right: 10px;\n    font-size: 1em;\n    font-family: arial;\n    font-weight: bold;\n    color: #000000;\n}\n.scenario button:hover {\n  cursor: pointer;\n  background: #eee;\n}\n\n.dynamic-chart {\n  position: absolute;\n  top: 51%;\n  width: 35%;\n  /* height: 10%; */\n  left: 25%;\n  z-index: 1;\n}\n.graph2 {\n  position: absolute;\n  top: 50%;\n  left: 25%;\n\n}\n\n</style>"],"mappings":";;EAES,SAAM;AAAM;;EACV,SAAM;AAAS;8BA2EtBA,mBAAA,CAGM;EAHD,SAAM;AAAM,I,aACfA,mBAAA,CAA0B,YAAtB,mBAAiB,G,aACrBA,mBAAA,CAAqB;EAAhBC,EAAE,EAAC;AAAM,G;8BAEhBD,mBAAA,CAGM;EAHD,SAAM;AAAM,I,aACfA,mBAAA,CAAuB,YAAnB,gBAAc,G,aAClBA,mBAAA,CAAqB;EAAhBC,EAAE,EAAC;AAAM,G;;EAWX,SAAM;AAAe;;;uBA9F5BC,mBAAA,CAuGM,cAtGJF,mBAAA,CA2EM,OA3ENG,UA2EM,GA1EJH,mBAAA,CAMM,OANNI,UAMM,GALJJ,mBAAA,CAA2D,cAArD,oBAAkB,GAAAK,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,QAAQ,kBACjDC,mBAAA,2EAA8E,EAC9EA,mBAAA,0DAA6D,EAC7DV,mBAAA,CAAwD,cAAlD,oBAAkB,GAAAK,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACG,KAAK,kBAC9CD,mBAAA,0DAA6D,C,GAE/DA,mBAAA,s1FAiEY,EACZA,mBAAA,YAAe,C,GAEjBE,UAGM,EACNC,UAGM,EAENH,mBAAA,yJAMU,EACVA,mBAAA,eAAkB,EAClBV,mBAAA,CAEM,OAFNc,UAEM,GADJC,YAAA,CAASC,gBAAA,E,GAIXN,mBAAA,yDAEU,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}