{"ast":null,"code":"import _objectWithoutProperties from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"options\"];\nimport mapElementMixin from '../mixins/map-element.js';\nimport { heatMapLayerMappedProps } from '../utils/mapped-props-by-map-element.js';\nimport { getPropsValues, bindProps, bindEvents } from '../utils/helpers.js';\n\n/**\n * HeatmapLayer component\n * @displayName HeatmapLayer\n * @see [source code](/guide/heatmap-layer.html#source-code)\n * @see [Official documentation](https://developers.google.com/maps/documentation/javascript/heatmaplayer)\n */\nvar script = {\n  name: 'HeatmapLayer',\n  mixins: [mapElementMixin],\n  render: function render() {\n    return '';\n  },\n  provide: function provide() {\n    var _this = this;\n    var events = [];\n\n    // Infowindow needs this to be immediately available\n    var promise = this.$mapPromise.then(function (map) {\n      _this.$map = map;\n\n      // Initialize the maps with the given options\n      var initialOptions = _objectSpread(_objectSpread({}, _this.options), {}, {\n        map: _this.$map\n      }, getPropsValues(_this, heatMapLayerMappedProps));\n      var extraOptions = initialOptions.options,\n        finalOptions = _objectWithoutProperties(initialOptions, _excluded);\n      _this.$heatmapLayerObject = new google.maps.visualization.HeatmapLayer(finalOptions);\n      bindProps(_this, _this.$heatmapLayerObject, heatMapLayerMappedProps);\n      bindEvents(_this, _this.$heatmapLayerObject, events);\n      return _this.$heatmapLayerObject;\n    })[\"catch\"](function (error) {\n      throw error;\n    });\n\n    // TODO: analyze the efects of only returns the instance and remove completely the promise\n    this.$heatmapLayerPromise = promise;\n    return {\n      $heatmapLayerPromise: promise\n    };\n  },\n  props: {\n    /**\n     * Extra options that you want to pass to the component\n     */\n    options: {\n      type: Object,\n      \"default\": function _default() {}\n    },\n    /**\n     * The heat map data, is an array of `new google.maps.LatLng`,\n     * @see [heatmap options](https://developers.google.com/maps/documentation/javascript/heatmaplayer#add-a-heatmap-layer)\n     * @example `[new google.maps.LatLng(37.782, -122.447)]`\n     */\n    data: {\n      type: Array,\n      \"default\": undefined\n    }\n  },\n  destroyed: function destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$heatmapLayerObject && this.$heatmapLayerObject.setMap) {\n      this.$heatmapLayerObject.setMap(null);\n    }\n  }\n};\nexport { script as default };","map":{"version":3,"names":["mapElementMixin","heatMapLayerMappedProps","getPropsValues","bindProps","bindEvents","script","name","mixins","render","provide","_this","events","promise","$mapPromise","then","map","$map","initialOptions","_objectSpread","options","extraOptions","finalOptions","_objectWithoutProperties","_excluded","$heatmapLayerObject","google","maps","visualization","HeatmapLayer","error","$heatmapLayerPromise","props","type","Object","_default","data","Array","undefined","destroyed","setMap","default"],"sources":["/Users/eddiediedie/Desktop/CCC_A2/CCCA2/node_modules/gmap-vue/dist/esm/components/heatmap-layer.vue_rollup-plugin-vue_script.vue.js"],"sourcesContent":["import mapElementMixin from '../mixins/map-element.js';\nimport { heatMapLayerMappedProps } from '../utils/mapped-props-by-map-element.js';\nimport { getPropsValues, bindProps, bindEvents } from '../utils/helpers.js';\n\n/**\n * HeatmapLayer component\n * @displayName HeatmapLayer\n * @see [source code](/guide/heatmap-layer.html#source-code)\n * @see [Official documentation](https://developers.google.com/maps/documentation/javascript/heatmaplayer)\n */\nvar script = {\n  name: 'HeatmapLayer',\n  mixins: [mapElementMixin],\n  render() {\n    return '';\n  },\n  provide() {\n    const events = [];\n\n    // Infowindow needs this to be immediately available\n    const promise = this.$mapPromise\n      .then((map) => {\n        this.$map = map;\n\n        // Initialize the maps with the given options\n        const initialOptions = {\n          // TODO: analyze the below line because I think it can be removed\n          ...this.options,\n          map: this.$map,\n          ...getPropsValues(this, heatMapLayerMappedProps),\n        };\n\n        const { options: extraOptions, ...finalOptions } = initialOptions;\n\n        this.$heatmapLayerObject = new google.maps.visualization.HeatmapLayer(\n          finalOptions\n        );\n\n        bindProps(this, this.$heatmapLayerObject, heatMapLayerMappedProps);\n        bindEvents(this, this.$heatmapLayerObject, events);\n\n        return this.$heatmapLayerObject;\n      })\n      .catch((error) => {\n        throw error;\n      });\n\n    // TODO: analyze the efects of only returns the instance and remove completely the promise\n    this.$heatmapLayerPromise = promise;\n    return { $heatmapLayerPromise: promise };\n  },\n  props: {\n    /**\n     * Extra options that you want to pass to the component\n     */\n    options: {\n      type: Object,\n      default: () => {},\n    },\n    /**\n     * The heat map data, is an array of `new google.maps.LatLng`,\n     * @see [heatmap options](https://developers.google.com/maps/documentation/javascript/heatmaplayer#add-a-heatmap-layer)\n     * @example `[new google.maps.LatLng(37.782, -122.447)]`\n     */\n    data: {\n      type: Array,\n      default: undefined,\n    },\n  },\n  destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$heatmapLayerObject && this.$heatmapLayerObject.setMap) {\n      this.$heatmapLayerObject.setMap(null);\n    }\n  },\n};\n\nexport { script as default };\n"],"mappings":";;;AAAA,OAAOA,eAAe,MAAM,0BAA0B;AACtD,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,SAASC,cAAc,EAAEC,SAAS,EAAEC,UAAU,QAAQ,qBAAqB;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAG;EACXC,IAAI,EAAE,cAAc;EACpBC,MAAM,EAAE,CAACP,eAAe,CAAC;EACzBQ,MAAM,WAAAA,OAAA,EAAG;IACP,OAAO,EAAE;EACX,CAAC;EACDC,OAAO,WAAAA,QAAA,EAAG;IAAA,IAAAC,KAAA;IACR,IAAMC,MAAM,GAAG,EAAE;;IAEjB;IACA,IAAMC,OAAO,GAAG,IAAI,CAACC,WAAW,CAC7BC,IAAI,CAAC,UAACC,GAAG,EAAK;MACbL,KAAI,CAACM,IAAI,GAAGD,GAAG;;MAEf;MACA,IAAME,cAAc,GAAAC,aAAA,CAAAA,aAAA,KAEfR,KAAI,CAACS,OAAO;QACfJ,GAAG,EAAEL,KAAI,CAACM;MAAI,GACXd,cAAc,CAACQ,KAAI,EAAET,uBAAuB,CAAC,CACjD;MAED,IAAiBmB,YAAY,GAAsBH,cAAc,CAAzDE,OAAO;QAAmBE,YAAY,GAAAC,wBAAA,CAAKL,cAAc,EAAAM,SAAA;MAEjEb,KAAI,CAACc,mBAAmB,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,aAAa,CAACC,YAAY,CACnEP,YACF,CAAC;MAEDlB,SAAS,CAACO,KAAI,EAAEA,KAAI,CAACc,mBAAmB,EAAEvB,uBAAuB,CAAC;MAClEG,UAAU,CAACM,KAAI,EAAEA,KAAI,CAACc,mBAAmB,EAAEb,MAAM,CAAC;MAElD,OAAOD,KAAI,CAACc,mBAAmB;IACjC,CAAC,CAAC,SACI,CAAC,UAACK,KAAK,EAAK;MAChB,MAAMA,KAAK;IACb,CAAC,CAAC;;IAEJ;IACA,IAAI,CAACC,oBAAoB,GAAGlB,OAAO;IACnC,OAAO;MAAEkB,oBAAoB,EAAElB;IAAQ,CAAC;EAC1C,CAAC;EACDmB,KAAK,EAAE;IACL;AACJ;AACA;IACIZ,OAAO,EAAE;MACPa,IAAI,EAAEC,MAAM;MACZ,WAAS,SAAAC,SAAA,EAAM,CAAC;IAClB,CAAC;IACD;AACJ;AACA;AACA;AACA;IACIC,IAAI,EAAE;MACJH,IAAI,EAAEI,KAAK;MACX,WAASC;IACX;EACF,CAAC;EACDC,SAAS,WAAAA,UAAA,EAAG;IACV;IACA,IAAI,IAAI,CAACd,mBAAmB,IAAI,IAAI,CAACA,mBAAmB,CAACe,MAAM,EAAE;MAC/D,IAAI,CAACf,mBAAmB,CAACe,MAAM,CAAC,IAAI,CAAC;IACvC;EACF;AACF,CAAC;AAED,SAASlC,MAAM,IAAImC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}