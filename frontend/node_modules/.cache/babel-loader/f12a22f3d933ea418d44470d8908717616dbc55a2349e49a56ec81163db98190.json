{"ast":null,"code":"import _regeneratorRuntime from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport { downArrowSimulator, getPropsValues, bindProps } from '../utils/helpers.js';\nimport { autocompleteMappedProps } from '../utils/mapped-props-by-map-element.js';\n\n//\n\n/**\n * Autocomplete component\n * @displayName GmapAutocomplete\n * @see [source code](/guide/autocomplete.html#source-code)\n */\nvar script = {\n  name: 'AutocompleteInput',\n  props: {\n    /**\n     * Map bounds this is an LatLngBounds\n     * object builded with\n     * @value new google.maps.LatLngBounds(...)\n     * @see [Map Bounds](https://developers.google.com/maps/documentation/javascript/places-autocomplete#set-the-bounds-on-creation-of-the-autocomplete-object)\n     */\n    bounds: {\n      type: Object,\n      \"default\": undefined\n    },\n    /**\n     * Restrict the search to a specific country\n     * @value `{[key: string]: string}`\n     * @see [componentRestrictions](https://developers.google.com/maps/documentation/javascript/places-autocomplete#restrict-the-search-to-a-specific-country)\n     */\n    componentRestrictions: {\n      type: Object,\n      \"default\": undefined\n    },\n    /**\n     * Map types this is an array of strings\n     * @value string[]\n     * @see [Map Bounds](https://developers.google.com/maps/documentation/javascript/places-autocomplete#set-the-bounds-on-creation-of-the-autocomplete-object)\n     */\n    types: {\n      type: Array,\n      \"default\": undefined\n    },\n    /**\n     * Select the first result in the list when press enter keyboard\n     * @values true, false\n     */\n    selectFirstOnEnter: {\n      required: false,\n      type: Boolean,\n      \"default\": false\n    },\n    /**\n     * the unique ref set to the component passed in the slot input\n     */\n    slotRefName: {\n      required: false,\n      type: String,\n      \"default\": 'input'\n    },\n    /**\n     * The name of the ref to obtain the html input element\n     * if its a child  of component in the slot input\n     * very useful whe we use a component like v-text-field of vuetify\n     * that has a 'input' ref pointing to the final html input element\n     */\n    childRefName: {\n      required: false,\n      type: String,\n      \"default\": 'input'\n    },\n    /**\n     * Other options that you can pass to the Google Mapas\n     * Autocomplete API\n     * @values geocode, address, regions\n     * @see [Options](https://developers.google.com/maps/documentation/javascript/places-autocomplete#add-autocomplete)\n     */\n    options: {\n      type: Object,\n      \"default\": undefined\n    },\n    /**\n     * To avoid paying for data that you don't need,\n     * be sure to use Autocomplete.setFields() to specify\n     * only the place data that you will use.\n     *\n     * @see [Place information](https://developers.google.com/maps/documentation/javascript/places-autocomplete#get-place-information)\n     * @see [setFields](https://developers.google.com/maps/documentation/javascript/reference/places-widget#Autocomplete.setFields)\n     * @see [PlaceResult](https://developers.google.com/maps/documentation/javascript/reference/places-service#PlaceResult)\n     */\n    setFieldsTo: {\n      required: false,\n      type: Array,\n      \"default\": null\n    }\n  },\n  watch: {\n    /**\n     * This watcher is incharge to update\n     * the component restrictions when is\n     * changed from the parent\n     */\n    componentRestrictions: function componentRestrictions(v) {\n      if (v !== undefined) {\n        this.$autocomplete.setComponentRestrictions(v);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var scopedInput, autocompleteOptions;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.$gmapApiPromiseLazy();\n          case 2:\n            scopedInput = null;\n            if (!_this.$scopedSlots[\"default\"]) {\n              _context.next = 9;\n              break;\n            }\n            if (Object.keys(_this.$scopedSlots[\"default\"]()[0].context.$refs).length) {\n              _context.next = 6;\n              break;\n            }\n            throw new Error('If you use the slot input you must add a ref to the element that you will use as the input, and if you use a vue component, eg: v-text-field, etc, you need to set the childRefName indicating what is the ref name of the html input elemnt behind your component.');\n          case 6:\n            scopedInput = _this.$scopedSlots[\"default\"]()[0].context.$refs[_this.slotRefName];\n            if (scopedInput && scopedInput.$refs) {\n              scopedInput = scopedInput.$refs[_this.childRefName];\n            }\n            if (scopedInput) {\n              _this.$refs.input = scopedInput;\n            }\n          case 9:\n            if (_this.selectFirstOnEnter) {\n              downArrowSimulator(_this.$refs.input);\n            }\n            if (!(typeof google.maps.places.Autocomplete !== 'function')) {\n              _context.next = 12;\n              break;\n            }\n            throw new Error(\"google.maps.places.Autocomplete is undefined. Did you add 'places' to libraries when loading Google Maps?\");\n          case 12:\n            autocompleteOptions = _objectSpread(_objectSpread({}, getPropsValues(_this, autocompleteMappedProps)), _this.options);\n            _this.$autocomplete = new google.maps.places.Autocomplete(_this.$refs.input, autocompleteOptions);\n            bindProps(_this, _this.$autocomplete, autocompleteMappedProps);\n            if (_this.setFieldsTo) {\n              _this.$autocomplete.setFields(_this.setFieldsTo);\n            }\n\n            // Not using `bindEvents` because we also want\n            // to return the result of `getPlace()`\n            _this.$autocomplete.addListener('place_changed', function () {\n              /**\n               * Place change event\n               * @event place_changed\n               * @property {object} place `this.$autocomplete.getPlace()`\n               * @see [Get place information](https://developers.google.com/maps/documentation/javascript/places-autocomplete#get-place-information)\n               */\n              _this.$emit('place_changed', _this.$autocomplete.getPlace());\n            });\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  destroyed: function destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$$autocomplete && this.$$autocomplete.setMap) {\n      this.$$autocomplete.setMap(null);\n    }\n  }\n};\nexport { script as default };","map":{"version":3,"names":["downArrowSimulator","getPropsValues","bindProps","autocompleteMappedProps","script","name","props","bounds","type","Object","undefined","componentRestrictions","types","Array","selectFirstOnEnter","required","Boolean","slotRefName","String","childRefName","options","setFieldsTo","watch","v","$autocomplete","setComponentRestrictions","mounted","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","scopedInput","autocompleteOptions","wrap","_callee$","_context","prev","next","$gmapApiPromiseLazy","$scopedSlots","keys","context","$refs","length","Error","input","google","maps","places","Autocomplete","_objectSpread","setFields","addListener","$emit","getPlace","stop","destroyed","$$autocomplete","setMap","default"],"sources":["/Users/eddiediedie/Desktop/CCC_A2/CCCA2/node_modules/gmap-vue/dist/esm/components/autocomplete-input.vue_rollup-plugin-vue_script.vue.js"],"sourcesContent":["import { downArrowSimulator, getPropsValues, bindProps } from '../utils/helpers.js';\nimport { autocompleteMappedProps } from '../utils/mapped-props-by-map-element.js';\n\n//\n\n/**\n * Autocomplete component\n * @displayName GmapAutocomplete\n * @see [source code](/guide/autocomplete.html#source-code)\n */\nvar script = {\n  name: 'AutocompleteInput',\n  props: {\n    /**\n     * Map bounds this is an LatLngBounds\n     * object builded with\n     * @value new google.maps.LatLngBounds(...)\n     * @see [Map Bounds](https://developers.google.com/maps/documentation/javascript/places-autocomplete#set-the-bounds-on-creation-of-the-autocomplete-object)\n     */\n    bounds: {\n      type: Object,\n      default: undefined,\n    },\n    /**\n     * Restrict the search to a specific country\n     * @value `{[key: string]: string}`\n     * @see [componentRestrictions](https://developers.google.com/maps/documentation/javascript/places-autocomplete#restrict-the-search-to-a-specific-country)\n     */\n    componentRestrictions: {\n      type: Object,\n      default: undefined,\n    },\n    /**\n     * Map types this is an array of strings\n     * @value string[]\n     * @see [Map Bounds](https://developers.google.com/maps/documentation/javascript/places-autocomplete#set-the-bounds-on-creation-of-the-autocomplete-object)\n     */\n    types: {\n      type: Array,\n      default: undefined,\n    },\n    /**\n     * Select the first result in the list when press enter keyboard\n     * @values true, false\n     */\n    selectFirstOnEnter: {\n      required: false,\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * the unique ref set to the component passed in the slot input\n     */\n    slotRefName: {\n      required: false,\n      type: String,\n      default: 'input',\n    },\n    /**\n     * The name of the ref to obtain the html input element\n     * if its a child  of component in the slot input\n     * very useful whe we use a component like v-text-field of vuetify\n     * that has a 'input' ref pointing to the final html input element\n     */\n    childRefName: {\n      required: false,\n      type: String,\n      default: 'input',\n    },\n    /**\n     * Other options that you can pass to the Google Mapas\n     * Autocomplete API\n     * @values geocode, address, regions\n     * @see [Options](https://developers.google.com/maps/documentation/javascript/places-autocomplete#add-autocomplete)\n     */\n    options: {\n      type: Object,\n      default: undefined,\n    },\n    /**\n     * To avoid paying for data that you don't need,\n     * be sure to use Autocomplete.setFields() to specify\n     * only the place data that you will use.\n     *\n     * @see [Place information](https://developers.google.com/maps/documentation/javascript/places-autocomplete#get-place-information)\n     * @see [setFields](https://developers.google.com/maps/documentation/javascript/reference/places-widget#Autocomplete.setFields)\n     * @see [PlaceResult](https://developers.google.com/maps/documentation/javascript/reference/places-service#PlaceResult)\n     */\n    setFieldsTo: {\n      required: false,\n      type: Array,\n      default: null,\n    },\n  },\n  watch: {\n    /**\n     * This watcher is incharge to update\n     * the component restrictions when is\n     * changed from the parent\n     */\n    componentRestrictions(v) {\n      if (v !== undefined) {\n        this.$autocomplete.setComponentRestrictions(v);\n      }\n    },\n  },\n  async mounted() {\n    await this.$gmapApiPromiseLazy();\n\n    let scopedInput = null;\n\n    if (this.$scopedSlots.default) {\n      if (!Object.keys(this.$scopedSlots.default()[0].context.$refs).length) {\n        throw new Error(\n          'If you use the slot input you must add a ref to the element that you will use as the input, and if you use a vue component, eg: v-text-field, etc, you need to set the childRefName indicating what is the ref name of the html input elemnt behind your component.'\n        );\n      }\n\n      scopedInput =\n        this.$scopedSlots.default()[0].context.$refs[this.slotRefName];\n\n      if (scopedInput && scopedInput.$refs) {\n        scopedInput = scopedInput.$refs[this.childRefName];\n      }\n\n      if (scopedInput) {\n        this.$refs.input = scopedInput;\n      }\n    }\n\n    if (this.selectFirstOnEnter) {\n      downArrowSimulator(this.$refs.input);\n    }\n\n    if (typeof google.maps.places.Autocomplete !== 'function') {\n      throw new Error(\n        \"google.maps.places.Autocomplete is undefined. Did you add 'places' to libraries when loading Google Maps?\"\n      );\n    }\n\n    const autocompleteOptions = {\n      ...getPropsValues(this, autocompleteMappedProps),\n      ...this.options,\n    };\n\n    this.$autocomplete = new google.maps.places.Autocomplete(\n      this.$refs.input,\n      autocompleteOptions\n    );\n\n    bindProps(this, this.$autocomplete, autocompleteMappedProps);\n\n    if (this.setFieldsTo) {\n      this.$autocomplete.setFields(this.setFieldsTo);\n    }\n\n    // Not using `bindEvents` because we also want\n    // to return the result of `getPlace()`\n    this.$autocomplete.addListener('place_changed', () => {\n      /**\n       * Place change event\n       * @event place_changed\n       * @property {object} place `this.$autocomplete.getPlace()`\n       * @see [Get place information](https://developers.google.com/maps/documentation/javascript/places-autocomplete#get-place-information)\n       */\n      this.$emit('place_changed', this.$autocomplete.getPlace());\n    });\n  },\n  destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$$autocomplete && this.$$autocomplete.setMap) {\n      this.$$autocomplete.setMap(null);\n    }\n  },\n};\n\nexport { script as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}