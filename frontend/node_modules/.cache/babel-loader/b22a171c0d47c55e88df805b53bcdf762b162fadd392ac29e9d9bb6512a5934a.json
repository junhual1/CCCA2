{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  id: \"Mchart\",\n  style: {\n    \"width\": \"400px\",\n    \"height\": \"400px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","style","_createElementBlock","_hoisted_1"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/components/mastodonChart.vue"],"sourcesContent":["<template>\n  <div id=\"Mchart\" style=\"width: 400px; height: 400px;\"></div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/toolbox';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/title';\n\nexport default {\n  data() {\n    return {\n      mastodonEmployment: null,\n      mastodonAgism: null,\n      mastodonSexism: null,\n      twiEmployment: null,\n      twiAgism: null,\n      twiSexism: null,\n      mastodon_data: [],\n      twi_data: [],\n      mastodon_max: null,\n      twi_max: null\n    }\n  },\n  async mounted() {\n    Promise.all([\n      axios.get('http://127.0.0.1:5000/api_mastodon/unemployment'),\n      axios.get('http://127.0.0.1:5000/api_mastodon/agism'),\n      axios.get('http://127.0.0.1:5000/api_mastodon/sexism'),\n\n      axios.get('http://127.0.0.1:5000/api_twi_total/unemployment'),\n      axios.get('http://127.0.0.1:5000/api_twi_total/agism'),\n      axios.get('http://127.0.0.1:5000/api_twi_total/sexism')\n    ])\n      .then(responses => {\n        this.mastodonEmployment = responses[0].data.percentage * 100;\n        this.mastodonAgism = responses[1].data.percentage * 100;\n        this.mastodonSexism = responses[2].data.percentage * 100;\n        this.twiEmployment = responses[3].data.summary.percentage * 100;\n        this.twiAgism = responses[4].data.summary.percentage * 100;\n        this.twiSexism = responses[5].data.summary.percentage * 100;\n        this.mastodon_data.push(this.mastodonEmployment)\n        this.mastodon_data.push(this.mastodonAgism)\n        this.mastodon_data.push(this.mastodonSexism)\n        this.twi_data.push(this.twiEmployment)\n        this.twi_data.push(this.twiAgism)\n        this.twi_data.push(this.twiSexism)\n        this.mastodon_max = Math.ceil(Math.max(...this.mastodon_data) * 10) / 10\n        this.twi_max = Math.ceil(Math.max(...this.twi_data) * 10) / 10\n      })\n      .catch(error => {\n        console.error(error);\n      });\n\n    this.initChart();\n  },\n  methods: {\n    initChart() {\n      // const twiMax = Math.min(this.twi_interval.toFixed(3) * 10, Number.MAX_VALUE);\n      // const twuInterval = Number(this.twi_interval.toFixed(3));\n      // const sudoMax = Math.min(this.sudo_interval.toFixed(3) * 10, Number.MAX_VALUE);\n      // const sudoInterval = Number(this.sudo_interval.toFixed(3));\n\n      const chartDom = document.getElementById('Mchart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        title: {\n          text: 'Comparasion of Topic Discussion Rate Between Twitter and Mastodon',\n          textStyle: {\n            fontSize: 10,\n            fontWeight: 'bold',\n            // color: 'blue'\n          },\n          left: 'center',\n          top: 'top'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: ['Employment', 'Agism', 'Sexism'],\n            axisPointer: {\n              type: 'shadow'\n            },\n            axisLabel: {\n              rotate: 0\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: 'Twitter',\n            min: 0,\n            max: this.twi_max,\n            interval: 0.1,\n            axisLabel: {\n              formatter: '{value} %'\n            }\n          },\n          {\n            type: 'value',\n            name: 'Mastodon',\n            min: 0,\n            max: this.mastodon_max,\n            interval: 0.1,\n            axisLabel: {\n              formatter: '{value} %'\n            }\n          }\n          \n        ],\n        series: [\n          {\n            name: 'Twitter',\n            type: 'bar',\n            // itemStyle: {\n            //   color: (params) => {\n            //     return this.twi_color[params.dataIndex];\n            //   }\n            // },\n            tooltip: {\n              formatter: '{c} %'\n            },\n            data: this.twi_data\n          },\n          {\n            name: 'Sudo',\n            type: 'bar',\n            yAxisIndex: 1,\n            // itemStyle: {\n            //   color: (params) => {\n            //     return this.sudo_color[params.dataIndex];\n            //   }\n            // },\n            tooltip: {\n              formatter: '{c} %'\n            },\n            data: this.mastodon_data\n          }\n        ]\n      };\n        // Your chart options here\n      \n      myChart.setOption(option);\n    }\n  }\n}\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC,QAAQ;EAACC,KAAoC,EAApC;IAAA;IAAA;EAAA;;;uBAAjBC,mBAAA,CAA4D,OAA5DC,UAA4D"},"metadata":{},"sourceType":"module","externalDependencies":[]}