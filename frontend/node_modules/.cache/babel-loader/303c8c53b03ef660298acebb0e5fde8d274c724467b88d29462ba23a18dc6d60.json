{"ast":null,"code":"import _objectWithoutProperties from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"options\"];\nimport \"core-js/modules/es.number.constructor.js\";\nimport mapElementMixin from '../mixins/map-element.js';\nimport { getPropsValues, bindProps, bindEvents } from '../utils/helpers.js';\nimport { kmlLayerMappedProps } from '../utils/mapped-props-by-map-element.js';\n\n/**\n * KmlLayer component\n * @displayName Kml-Layer\n * @see [source code](/guide/kml-layer.html#source-code)\n * @see [Official documentation](https://developers.google.com/maps/documentation/javascript/kmllayer)\n * @see [Official reference](https://developers.google.com/maps/documentation/javascript/reference/kml)\n */\nvar script = {\n  name: 'KmlLayer',\n  mixins: [mapElementMixin],\n  render: function render() {\n    return '';\n  },\n  provide: function provide() {\n    var _this = this;\n    var events = ['click', 'rightclick', 'dblclick', 'mouseup', 'mousedown', 'mouseover', 'mouseout'];\n\n    // Infowindow needs this to be immediately available\n    var promise = this.$mapPromise.then(function (map) {\n      _this.$map = map;\n\n      // Initialize the maps with the given options\n      var initialOptions = _objectSpread(_objectSpread({}, _this.options), {}, {\n        map: map\n      }, getPropsValues(_this, kmlLayerMappedProps));\n      var extraOptions = initialOptions.options,\n        finalOptions = _objectWithoutProperties(initialOptions, _excluded);\n      _this.$kmlLayerObject = new google.maps.KmlLayer(finalOptions);\n      bindProps(_this, _this.$kmlLayerObject, kmlLayerMappedProps);\n      bindEvents(_this, _this.$kmlLayerObject, events);\n      return _this.$kmlLayerObject;\n    })[\"catch\"](function (error) {\n      throw error;\n    });\n    this.$kmlLayerPromise = promise;\n    return {\n      $kmlLayerPromise: promise\n    };\n  },\n  props: {\n    /**\n     * If true, the layer receives mouse events. Default value is true.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.clickable)\n     */\n    clickable: {\n      type: Boolean,\n      \"default\": true\n    },\n    /**\n     * Specifies the Map on which to render the KmlLayer. You can hide a KmlLayer by setting this value to null within the setMap() method\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.map)\n     */\n    map: {\n      type: Object,\n      \"default\": undefined\n    },\n    /**\n     * By default, the input map is centered and zoomed to the bounding box of the contents of the layer. If this option is set to true, the viewport is\n     * left unchanged, unless the map's center and zoom were never set.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.preserveViewport)\n     */\n    preserveViewport: {\n      type: Boolean,\n      \"default\": false\n    },\n    /**\n     * Whether to render the screen overlays. Default true.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.screenOverlays)\n     */\n    screenOverlays: {\n      type: Boolean,\n      \"default\": false\n    },\n    /**\n     * Suppress the rendering of info windows when layer features are clicked.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.suppressInfoWindows)\n     */\n    suppressInfoWindows: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    /**\n     * The URL of the KML document to display.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.url)\n     */\n    url: {\n      type: String,\n      \"default\": ''\n    },\n    /**\n     * The z-index of the layer.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.zIndex)\n     */\n    zIndex: {\n      type: Number,\n      \"default\": undefined\n    },\n    /**\n     * More options that you can pass to the component\n     * @value boolean\n     */\n    options: {\n      type: Object,\n      \"default\": undefined\n    }\n  },\n  destroyed: function destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$kmlLayerObject && this.$kmlLayerObject.setMap) {\n      this.$kmlLayerObject.setMap(null);\n    }\n  }\n};\nexport { script as default };","map":{"version":3,"names":["mapElementMixin","getPropsValues","bindProps","bindEvents","kmlLayerMappedProps","script","name","mixins","render","provide","_this","events","promise","$mapPromise","then","map","$map","initialOptions","_objectSpread","options","extraOptions","finalOptions","_objectWithoutProperties","_excluded","$kmlLayerObject","google","maps","KmlLayer","error","$kmlLayerPromise","props","clickable","type","Boolean","Object","undefined","preserveViewport","screenOverlays","suppressInfoWindows","url","String","zIndex","Number","destroyed","setMap","default"],"sources":["/Users/eddiediedie/Desktop/CCC_A2/CCCA2/node_modules/gmap-vue/dist/esm/components/kml-layer.vue_rollup-plugin-vue_script.vue.js"],"sourcesContent":["import mapElementMixin from '../mixins/map-element.js';\nimport { getPropsValues, bindProps, bindEvents } from '../utils/helpers.js';\nimport { kmlLayerMappedProps } from '../utils/mapped-props-by-map-element.js';\n\n/**\n * KmlLayer component\n * @displayName Kml-Layer\n * @see [source code](/guide/kml-layer.html#source-code)\n * @see [Official documentation](https://developers.google.com/maps/documentation/javascript/kmllayer)\n * @see [Official reference](https://developers.google.com/maps/documentation/javascript/reference/kml)\n */\nvar script = {\n  name: 'KmlLayer',\n  mixins: [mapElementMixin],\n  render() {\n    return '';\n  },\n  provide() {\n    const events = [\n      'click',\n      'rightclick',\n      'dblclick',\n      'mouseup',\n      'mousedown',\n      'mouseover',\n      'mouseout',\n    ];\n\n    // Infowindow needs this to be immediately available\n    const promise = this.$mapPromise\n      .then((map) => {\n        this.$map = map;\n\n        // Initialize the maps with the given options\n        const initialOptions = {\n          // TODO: analyze the below line because I think it can be removed\n          ...this.options,\n          map,\n          ...getPropsValues(this, kmlLayerMappedProps),\n        };\n\n        const { options: extraOptions, ...finalOptions } = initialOptions;\n\n        this.$kmlLayerObject = new google.maps.KmlLayer(finalOptions);\n\n        bindProps(this, this.$kmlLayerObject, kmlLayerMappedProps);\n        bindEvents(this, this.$kmlLayerObject, events);\n\n        return this.$kmlLayerObject;\n      })\n      .catch((error) => {\n        throw error;\n      });\n\n    this.$kmlLayerPromise = promise;\n    return { $kmlLayerPromise: promise };\n  },\n  props: {\n    /**\n     * If true, the layer receives mouse events. Default value is true.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.clickable)\n     */\n    clickable: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Specifies the Map on which to render the KmlLayer. You can hide a KmlLayer by setting this value to null within the setMap() method\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.map)\n     */\n    map: {\n      type: Object,\n      default: undefined,\n    },\n    /**\n     * By default, the input map is centered and zoomed to the bounding box of the contents of the layer. If this option is set to true, the viewport is\n     * left unchanged, unless the map's center and zoom were never set.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.preserveViewport)\n     */\n    preserveViewport: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Whether to render the screen overlays. Default true.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.screenOverlays)\n     */\n    screenOverlays: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Suppress the rendering of info windows when layer features are clicked.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.suppressInfoWindows)\n     */\n    suppressInfoWindows: {\n      type: Boolean,\n      default: undefined,\n    },\n    /**\n     * The URL of the KML document to display.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.url)\n     */\n    url: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The z-index of the layer.\n     * @see [KmlLayerOptions interface](https://developers.google.com/maps/documentation/javascript/reference/kml#KmlLayerOptions.zIndex)\n     */\n    zIndex: {\n      type: Number,\n      default: undefined,\n    },\n    /**\n     * More options that you can pass to the component\n     * @value boolean\n     */\n    options: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  destroyed() {\n    // Note: not all Google Maps components support maps\n    if (this.$kmlLayerObject && this.$kmlLayerObject.setMap) {\n      this.$kmlLayerObject.setMap(null);\n    }\n  },\n};\n\nexport { script as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}