{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  id: \"chart\",\n  style: {\n    \"width\": \"1000px\",\n    \"height\": \"400px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","style","_createElementBlock","_hoisted_1"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/components/Chart.vue"],"sourcesContent":["<template>\n  <div id=\"chart\" style=\"width: 1000px; height: 400px;\"></div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/toolbox';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/title';\n\nexport default {\n  data() {\n    return {\n      twi_data: null,\n      sudo_data: null,\n      twi_perc: [],\n      sudo_perc: [],\n      twi_city: [],\n      sudo_city: [],\n      twi_max_perc: null,\n      sudo_max_perc: null,\n      twi_rank: [],\n      sudo_rank: [],\n      twi_color: [],\n      sudo_color: [],\n      chart_title: null,\n      twi_interval: null,\n      sudo_interval: null\n    }\n  },\n  async mounted() {\n    const twi_scenario = this.$route.params.scenario.split('-')[0];\n    const sudo_scenario = this.$route.params.scenario.split('-')[1];\n    const state = this.$route.params.state;\n\n    // console.log(twi_scenario)\n    // console.log(sudo_scenario)\n    // console.log(state)\n\n    if (twi_scenario === 'unemployment' && sudo_scenario === 'unemployment') {\n      this.chart_title = 'Comparison of employment topic engagement and employment rate'\n    } else if (twi_scenario === 'unemployment' && sudo_scenario === 'agism') {\n      this.chart_title = 'Comparison of employment topic engagement and ageing population percentage'\n    } else if (twi_scenario === 'unemployment' && sudo_scenario === 'sexism') {\n      this.chart_title = 'Comparison of employment topic engagement and gender ratio'\n    } else if (twi_scenario === 'agism' && sudo_scenario === 'agism') {\n      this.chart_title = 'Comparison of agesim topic engagement and ageing population percentage'\n    } else if (twi_scenario === 'sexism' && sudo_scenario === 'sexism') {\n      this.chart_title = 'Camparison of sexism topic engagement and gender ratio'\n    } \n\n    try {\n      const sudoResponse = await axios.get(`http://127.0.0.1:5000/api_sudo_state_city/${sudo_scenario}/${state}`);\n      this.sudo_data = sudoResponse.data.results;\n      this.sudo_data.forEach(sudo => {\n        this.sudo_city.push(sudo.city)\n        this.sudo_perc.push(sudo.percentage.toFixed(3))\n        this.sudo_rank.push(sudo.rank)\n      })\n      this.sudo_rank.forEach(rank => {\n        if (rank === 0) {\n          this.sudo_color.push('#c0c0c0')\n        } else if (rank === 1) {\n          this.sudo_color.push('#c0c0c0')\n        } else if (rank === -1) {\n          this.sudo_color.push('#c0c0c0')\n        }\n      })\n      this.sudo_max_perc = Math.max(...this.sudo_perc) * 1.15\n      this.sudo_interval = this.sudo_max_perc / 10\n    } catch (error) {\n      console.error('Failed to fetch Sudo data:', error);\n    }\n\n    try {\n      const twiResponse = await axios.get(`http://127.0.0.1:5000/api_twi_state_city/${twi_scenario}/${state}`);\n      this.twi_data = twiResponse.data.results;\n      this.sudo_data.forEach(sudo =>{\n        this.twi_data.forEach(twi => {\n          if (twi.city === sudo.city){\n            this.twi_perc.push(twi.percentage.toFixed(5))\n            this.twi_rank.push(twi.rank)\n          }\n        })\n      })\n      // this.twi_data.forEach(twi => {\n      //   this.twi_city.push(twi.city)\n      //   this.twi_perc.push(twi.percentage.toFixed(5))\n      //   this.twi_rank.push(twi.rank)\n      // })\n\n      this.twi_rank.forEach(rank => {\n        if ((state !== 'australiancapitalterritory') && (state !== 'northernterritory') && (state !== 'offshoreterritories')) {\n          if (rank === 1) {\n            this.twi_color.push('#ff6347')\n          } else if (rank === -1) {\n            this.twi_color.push('#1e90ff')\n          } else {\n            this.twi_color.push('#696969')\n          }\n        } else {\n          this.twi_color.push('#696969')\n        }\n      })\n      \n      // this.twi_rank.forEach(rank => {\n      //   if (rank === 0) {\n      //     this.twi_color.push('#696969')\n      //   } else if (rank === 1) {\n      //     this.twi_color.push('#ff6347')\n      //   } else if (rank === -1) {\n      //     this.twi_color.push('#1e90ff')\n      //   }\n      // })\n      // console.log(this.twi_color)\n      this.twi_max_perc = Math.max(...this.twi_perc) * 1.15\n      this.twi_interval = this.twi_max_perc / 10\n    } catch (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    }\n\n\n\n    this.initChart();\n  },\n  methods: {\n    initChart() {\n      let twiMax = Math.min(this.twi_interval.toFixed(3) * 10, Number.MAX_VALUE);\n      let twuInterval = Number(this.twi_interval.toFixed(3));\n      let sudoMax = Math.min(this.sudo_interval.toFixed(3) * 10, Number.MAX_VALUE);\n      let sudoInterval = Number(this.sudo_interval.toFixed(3));\n\n      const chartDom = document.getElementById('chart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        title: {\n          text: this.chart_title,\n          textStyle: {\n            fontSize: 16,\n            fontWeight: 'bold',\n            // color: 'blue'\n          },\n          left: 'center',\n          top: 'top'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: this.sudo_city,\n            axisPointer: {\n              type: 'shadow'\n            },\n            axisLabel: {\n              rotate: -45\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: 'Twitter',\n            min: 0,\n            max: twiMax,\n            interval: twuInterval,\n            axisLabel: {\n              formatter: '{value} %'\n            }\n          },\n          {\n            type: 'value',\n            name: 'Sudo',\n            min: 0,\n            max: sudoMax,\n            interval: sudoInterval,\n            axisLabel: {\n              formatter: '{value} %'\n            }\n          }\n          \n        ],\n        series: [\n          {\n            name: 'Twitter',\n            type: 'bar',\n            itemStyle: {\n              color: (params) => {\n                return this.twi_color[params.dataIndex];\n              }\n            },\n            tooltip: {\n              formatter: '{c} %'\n            },\n            data: this.twi_perc\n          },\n          {\n            name: 'Sudo',\n            type: 'bar',\n            yAxisIndex: 1,\n            itemStyle: {\n              color: (params) => {\n                return this.sudo_color[params.dataIndex];\n              }\n            },\n            tooltip: {\n              formatter: '{c} %'\n            },\n            data: this.sudo_perc\n          }\n        ]\n      };\n        // Your chart options here\n      \n      myChart.setOption(option);\n    }\n  }\n}\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC,OAAO;EAACC,KAAqC,EAArC;IAAA;IAAA;EAAA;;;uBAAhBC,mBAAA,CAA4D,OAA5DC,UAA4D"},"metadata":{},"sourceType":"module","externalDependencies":[]}