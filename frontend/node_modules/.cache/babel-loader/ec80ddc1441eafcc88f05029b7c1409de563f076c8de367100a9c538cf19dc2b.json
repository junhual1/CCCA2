{"ast":null,"code":"export default {\n  mounted: function mounted() {\n    // Retrieve the selected state from the route parameter\n    var state = this.$route.params.state;\n\n    // Use the Google Maps API to initialize the two maps with the selected state as the center\n    var map1 = new google.maps.Map(document.getElementById(\"map1\"), {\n      center: {\n        lat: 37.0902,\n        lng: -95.7129\n      },\n      zoom: 8\n    });\n    var map2 = new google.maps.Map(document.getElementById(\"map2\"), {\n      center: {\n        lat: 37.0902,\n        lng: -95.7129\n      },\n      zoom: 8\n    });\n  }\n};","map":{"version":3,"names":["mounted","state","$route","params","map1","google","maps","Map","document","getElementById","center","lat","lng","zoom","map2"],"sources":["/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/src/views/Results.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"map1\"></div>\n    <div id=\"map2\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  mounted() {\n    // Retrieve the selected state from the route parameter\n    const state = this.$route.params.state;\n\n    // Use the Google Maps API to initialize the two maps with the selected state as the center\n    const map1 = new google.maps.Map(document.getElementById(\"map1\"), {\n      center: { lat: 37.0902, lng: -95.7129 },\n      zoom: 8\n    });\n    const map2 = new google.maps.Map(document.getElementById(\"map2\"), {\n      center: { lat: 37.0902, lng: -95.7129 },\n      zoom: 8\n    });\n  }\n}\n</script>"],"mappings":"AAQA,eAAe;EACbA,OAAO,WAAAA,QAAA,EAAG;IACR;IACA,IAAMC,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,KAAK;;IAEtC;IACA,IAAMG,IAAG,GAAI,IAAIC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,EAAE;MAChEC,MAAM,EAAE;QAAEC,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE,CAAC;MAAQ,CAAC;MACvCC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,IAAMC,IAAG,GAAI,IAAIT,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,EAAE;MAChEC,MAAM,EAAE;QAAEC,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE,CAAC;MAAQ,CAAC;MACvCC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}