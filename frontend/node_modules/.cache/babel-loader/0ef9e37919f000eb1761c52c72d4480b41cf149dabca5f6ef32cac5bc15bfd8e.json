{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Bar = _resolveComponent(\"Bar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mastodonAgism, function (item) {\n    return _openBlock(), _createElementBlock(\"h2\", {\n      key: item.agism\n    }, _toDisplayString(item.total), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_Bar, {\n    id: \"chart\",\n    options: $data.chartOptions,\n    data: $data.chartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","mastodonAgism","item","key","agism","total","_createVNode","_component_Bar","id","options","chartOptions","data","chartData"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/components/Chart.vue"],"sourcesContent":["<template>\n  <div>\n    <h2 v-for=\"item in mastodonAgism\" :key=\"item.agism\">{{ item.total }}</h2>\n    <Bar\n      id=\"chart\"\n      :options=\"chartOptions\"\n      :data=\"chartData\"\n    />\n  </div>\n\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nexport default {\n  name: 'BarChart',\n  components: { Bar },\n  data() {\n    return {\n      mastodonAgism: null,\n      chartData: {\n        labels: [ 'January', 'February', 'March' ],\n        datasets: [ { data: [40, 20, 12] } ]\n      },\n      chartOptions: {\n        responsive: true\n      }\n    }\n  },\n  mounted() {\n    fetch('http://127.0.0.1:5000/api_mastodon/agism')\n      .then(res => res.json())\n      .then(data => this.mastodonAgism = data)\n      .catch(err => console.log(err.message))\n  }\n}\n</script>"],"mappings":";;;uBACEA,mBAAA,CAOM,e,kBANJA,mBAAA,CAAyEC,SAAA,QAAAC,WAAA,CAAtDC,KAAA,CAAAC,aAAa,YAArBC,IAAI;yBAAfL,mBAAA,CAAyE;MAAtCM,GAAG,EAAED,IAAI,CAACE;wBAAUF,IAAI,CAACG,KAAK;kCACjEC,YAAA,CAIEC,cAAA;IAHAC,EAAE,EAAC,OAAO;IACTC,OAAO,EAAET,KAAA,CAAAU,YAAY;IACrBC,IAAI,EAAEX,KAAA,CAAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}