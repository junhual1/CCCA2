{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  ref: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" <Bar\\n    id=\\\"chart\\\"\\n    :options=\\\"chartOptions\\\"\\n    :data=\\\"chartData\\\"\\n  /> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["ref","_createElementVNode","_hoisted_1","_createCommentVNode"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/components/Chart.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas ref=\"chart\"></canvas>\n  </div>\n  <!-- <Bar\n    id=\"chart\"\n    :options=\"chartOptions\"\n    :data=\"chartData\"\n  /> -->\n</template>\n\n<script>\nimport { Bar, mixins } from 'vue-chartjs';\n\nexport default {\n  extends: Bar,\n  mixins: [mixins.reactiveProp],\n  props: ['chartData', 'options'],\n  mounted() {\n    this.renderChart(this.chartData, this.options);\n  }\n};\n// import { Bar } from 'vue-chartjs';\n\n// export default {\n//   extends: Bar,\n//   mounted() {\n//     this.renderChart({\n//       labels: ['Label 1', 'Label 2', 'Label 3'],\n//       datasets: [\n//         {\n//           label: 'Data',\n//           backgroundColor: 'rgba(75, 192, 192, 0.2)',\n//           borderColor: 'rgba(75, 192, 192, 1)',\n//           borderWidth: 1,\n//           data: [10, 20, 15]\n//         }\n//       ]\n//     }, {\n//       responsive: true,\n//       maintainAspectRatio: false,\n//       // Adjust the size of the chart\n//       height: 300, // Set the desired height\n//       width: 400 // Set the desired width\n//     });\n//   }\n// };\n\n// import { Bar } from 'vue-chartjs'\n// import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\n\n// ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\n// export default {\n//   name: 'BarChart',\n//   components: { Bar },\n//   data() {\n//     return {\n//       chartData: {\n//         labels: [ 'January', 'February', 'March' ],\n//         datasets: [ { data: [40, 20, 12] } ]\n//       },\n//       chartOptions: {\n//         responsive: true\n//       }\n//     }\n//   }\n// }\n</script>\n\n"],"mappings":";;EAEYA,GAAG,EAAC;AAAO;;6DADrBC,mBAAA,CAEM,cADJA,mBAAA,CAA6B,UAA7BC,UAA6B,8B,GAE/BC,mBAAA,0FAIM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}