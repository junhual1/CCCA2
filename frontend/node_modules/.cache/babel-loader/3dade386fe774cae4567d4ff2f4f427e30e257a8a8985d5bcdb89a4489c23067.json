{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.concat.js\";\nexport default {\n  data: function data() {\n    return {\n      map: null,\n      circles: [],\n      tweets: [{\n        lat: -37.8136,\n        lng: 144.9631,\n        count: 100,\n        percentage: 0.5\n      }, {\n        lat: -33.8688,\n        lng: 151.2093,\n        count: 200,\n        percentage: 1.0\n      }, {\n        lat: -27.4698,\n        lng: 153.0251,\n        count: 50,\n        percentage: 0.25\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initMap();\n  },\n  methods: {\n    initMap: function initMap() {\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        center: {\n          lat: -25.2744,\n          lng: 133.7751\n        },\n        zoom: 4\n      });\n      this.createCircles();\n    },\n    createCircles: function createCircles() {\n      var _this = this;\n      this.tweets.forEach(function (tweet) {\n        var circleOptions = {\n          strokeColor: '#FF0000',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#FF0000',\n          fillOpacity: 0.35,\n          map: _this.map,\n          center: new google.maps.LatLng(tweet.lat, tweet.lng),\n          radius: tweet.count * 1000 // convert count to meters\n        };\n\n        var circle = new google.maps.Circle(circleOptions);\n        circle.addListener('mouseover', function () {\n          _this.showInfoWindow(circle, tweet.count, tweet.percentage);\n        });\n        circle.addListener('mouseout', function () {\n          _this.hideInfoWindow();\n        });\n        _this.circles.push(circle);\n      });\n    },\n    showInfoWindow: function showInfoWindow(circle, count, percentage) {\n      var infoWindow = new google.maps.InfoWindow({\n        content: \"Count: \".concat(count, \"<br>Percentage: \").concat(percentage)\n      });\n      infoWindow.setPosition(circle.getCenter());\n      infoWindow.open(this.map);\n      this.infoWindow = infoWindow;\n    },\n    hideInfoWindow: function hideInfoWindow() {\n      if (this.infoWindow) {\n        this.infoWindow.close();\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","map","circles","tweets","lat","lng","count","percentage","mounted","initMap","methods","google","maps","Map","document","getElementById","center","zoom","createCircles","_this","forEach","tweet","circleOptions","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","LatLng","radius","circle","Circle","addListener","showInfoWindow","hideInfoWindow","push","infoWindow","InfoWindow","content","concat","setPosition","getCenter","open","close"],"sources":["/Users/eddiediedie/Desktop/CCC_A2/CCCA2/frontend/src/components/test.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      circles: [],\r\n      tweets: [\r\n        { lat: -37.8136, lng: 144.9631, count: 100, percentage: 0.5 },\r\n        { lat: -33.8688, lng: 151.2093, count: 200, percentage: 1.0 },\r\n        { lat: -27.4698, lng: 153.0251, count: 50, percentage: 0.25 }\r\n      ]\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      this.map = new google.maps.Map(document.getElementById('map'), {\r\n        center: { lat: -25.2744, lng: 133.7751 },\r\n        zoom: 4\r\n      });\r\n      this.createCircles();\r\n    },\r\n    createCircles() {\r\n      this.tweets.forEach(tweet => {\r\n        const circleOptions = {\r\n          strokeColor: '#FF0000',\r\n          strokeOpacity: 0.8,\r\n          strokeWeight: 2,\r\n          fillColor: '#FF0000',\r\n          fillOpacity: 0.35,\r\n          map: this.map,\r\n          center: new google.maps.LatLng(tweet.lat, tweet.lng),\r\n          radius: tweet.count * 1000 // convert count to meters\r\n        };\r\n        const circle = new google.maps.Circle(circleOptions);\r\n        circle.addListener('mouseover', () => {\r\n          this.showInfoWindow(circle, tweet.count, tweet.percentage);\r\n        });\r\n        circle.addListener('mouseout', () => {\r\n          this.hideInfoWindow();\r\n        });\r\n        this.circles.push(circle);\r\n      });\r\n    },\r\n    showInfoWindow(circle, count, percentage) {\r\n      const infoWindow = new google.maps.InfoWindow({\r\n        content: `Count: ${count}<br>Percentage: ${percentage}`\r\n      });\r\n      infoWindow.setPosition(circle.getCenter());\r\n      infoWindow.open(this.map);\r\n      this.infoWindow = infoWindow;\r\n    },\r\n    hideInfoWindow() {\r\n      if (this.infoWindow) {\r\n        this.infoWindow.close();\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}