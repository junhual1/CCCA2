{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"Mchart\",\n  style: {\n    \"width\": \"430px\",\n    \"height\": \"300px\"\n  }\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div v-if=\\\"showChart\\\" class=\\\"MChart\\\"> \"), _hoisted_1, _createCommentVNode(\" </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","style","_createCommentVNode","_hoisted_1"],"sources":["/Users/eddiediedie/Desktop/CCCA2/CCC_A2/CCCA2/frontend/src/components/mastodonChart.vue"],"sourcesContent":["<template>\n  <!-- <div v-if=\"showChart\" class=\"MChart\"> -->\n  <div id=\"Mchart\" style=\"width: 430px; height: 300px;\"></div>\n  <!-- </div> -->\n  \n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/toolbox';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/title';\n\nexport default {\n  // props: \n  //       ['keyword', 'showChart']\n  //   ,\n  data() {\n    return {\n      mastodonEmployment: null,\n      mastodonAgism: null,\n      mastodonSexism: null,\n      twiEmployment: null,\n      twiAgism: null,\n      twiSexism: null,\n      mastodon_data: [],\n      twi_data: [],\n      mastodon_max: null,\n      twi_max: null\n    }\n  },\n  async mounted() {\n    try {\n      const masEmployResponse = await axios.get('http://127.0.0.1:5000/api_mastodon/unemployment');\n      this.mastodonEmployment = masEmployResponse.data.percentage * 100;\n      this.mastodon_data.push(this.mastodonEmployment.toFixed(3))\n    } catch (error) {\n      console.error('Failed to fetch Mastodon data:', error);\n    }\n    try {\n      const masAgismResponse = await axios.get('http://127.0.0.1:5000/api_mastodon/agism');\n      this.mastodonAgism = masAgismResponse.data.percentage * 100;\n      this.mastodon_data.push(this.mastodonAgism.toFixed(3))\n    } catch (error) {\n      console.error('Failed to fetch Mastodon data:', error);\n    }\n    try {\n      const masSexismResponse = await axios.get('http://127.0.0.1:5000/api_mastodon/sexism');\n      this.mastodonSexism = masSexismResponse.data.percentage * 100;\n      this.mastodon_data.push(this.mastodonSexism.toFixed(3))\n      this.mastodon_max = Math.ceil(Math.max(...this.mastodon_data) * 10) / 10\n    } catch (error) {\n      console.error('Failed to fetch Mastodon data:', error);\n    }\n    try {\n      const twiEmployResponse = await axios.get('http://127.0.0.1:5000/api_twi_total/unemployment');\n      this.twiEmployment = twiEmployResponse.data.summary.percentage * 100;\n      this.twi_data.push(this.twiEmployment.toFixed(3))\n    } catch (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    }\n    try {\n      const twiAgismResponse = await axios.get('http://127.0.0.1:5000/api_twi_total/agism');\n      this.twiAgism = twiAgismResponse.data.summary.percentage * 100;\n      this.twi_data.push(this.twiAgism.toFixed(3))\n    } catch (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    }\n    try {\n      const twiSexismResponse = await axios.get('http://127.0.0.1:5000/api_twi_total/sexism');\n      this.twiSexism = twiSexismResponse.data.summary.percentage * 100;\n      this.twi_data.push(this.twiSexism.toFixed(3))\n      this.twi_max = Math.ceil(Math.max(...this.twi_data) * 10) / 10\n    } catch (error) {\n      console.error('Failed to fetch Twitter data:', error);\n    }\n\n    // Promise.all([\n    //   axios.get('http://127.0.0.1:5000/api_mastodon/unemployment'),\n    //   axios.get('http://127.0.0.1:5000/api_mastodon/agism'),\n    //   axios.get('http://127.0.0.1:5000/api_mastodon/sexism'),\n\n    //   axios.get('http://127.0.0.1:5000/api_twi_total/unemployment'),\n    //   axios.get('http://127.0.0.1:5000/api_twi_total/agism'),\n    //   axios.get('http://127.0.0.1:5000/api_twi_total/sexism')\n    // ])\n    //   .then(responses => {\n    //     this.mastodonEmployment = responses[0].data.percentage * 100;\n    //     this.mastodonAgism = responses[1].data.percentage * 100;\n    //     this.mastodonSexism = responses[2].data.percentage * 100;\n    //     this.twiEmployment = responses[3].data.summary.percentage * 100;\n    //     this.twiAgism = responses[4].data.summary.percentage * 100;\n    //     this.twiSexism = responses[5].data.summary.percentage * 100;\n    //     this.mastodon_data.push(this.mastodonEmployment.toFixed(3))\n    //     this.mastodon_data.push(this.mastodonAgism.toFixed(3))\n    //     this.mastodon_data.push(this.mastodonSexism.toFixed(3))\n    //     this.twi_data.push(this.twiEmployment.toFixed(3))\n    //     this.twi_data.push(this.twiAgism.toFixed(3))\n    //     this.twi_data.push(this.twiSexism.toFixed(3))\n    //     this.mastodon_max = Math.ceil(Math.max(...this.mastodon_data) * 10) / 10\n    //     this.twi_max = Math.ceil(Math.max(...this.twi_data) * 10) / 10\n    //     console.log(this.twi_data)\n    //     console.log(this.twi_max)\n    //     console.log(this.mastodon_data)\n    //     console.log(this.mastodon_max)\n    //   })\n    //   .catch(error => {\n    //     console.error(error);\n    //   });\n\n    this.initChart();\n  },\n  methods: {\n      initChart() {\n      // const twiMax = Math.min(this.twi_interval.toFixed(3) * 10, Number.MAX_VALUE);\n      // const twuInterval = Number(this.twi_interval.toFixed(3));\n      // const sudoMax = Math.min(this.sudo_interval.toFixed(3) * 10, Number.MAX_VALUE);\n      // const sudoInterval = Number(this.sudo_interval.toFixed(3));\n\n      const chartDom = document.getElementById('Mchart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        title: {\n          text: 'Comparasion of Topic Discussion Rate Between Twitter and Mastodon',\n          textStyle: {\n            fontSize: 12,\n            fontWeight: 'bold',\n            // color: 'blue'\n          },\n          left: 'left',\n          top: 'top'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        legend: {\n          data: ['Twitter', 'Mastodon'],\n          // orient: 'vertical',\n          right: 40, \n          top: 30\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: ['Employment', 'Agism', 'Sexism'],\n            axisPointer: {\n              type: 'shadow'\n            },\n            axisLabel: {\n              rotate: 0\n            }\n          }\n        ],\n        yAxis: {\n          type: 'value',\n          name: 'Discussion Rate',\n          min: 0,\n          max: this.mastodon_max, // Update with appropriate maximum value\n          interval: 0.1,\n          axisLabel: {\n            formatter: '{value} %'\n          }\n        },\n        series: [\n          {\n            name: 'Twitter',\n            type: 'bar',\n            itemStyle: {\n              color: 'rgba(0, 0, 0, 0.4)'\n            },\n            tooltip: {\n              formatter: '{c} %'\n            },\n            data: this.twi_data // Update with appropriate data\n            // data: [0.3, 0.2, 0.1]\n          },\n          {\n            name: 'Mastodon',\n            type: 'bar',\n            itemStyle: {\n              color: 'rgba(0, 0, 0, 0.4)'\n            },\n            tooltip: {\n              formatter: '{c} %'\n            },\n            data: this.mastodon_data // Update with appropriate data\n            // data: [0.5, 0.4, 0.3]\n          }\n        ]\n      };\n        // Your chart options here\n      \n      myChart.setOption(option);\n    }\n\n    // initChart() {\n    //   // const twiMax = Math.min(this.twi_interval.toFixed(3) * 10, Number.MAX_VALUE);\n    //   // const twuInterval = Number(this.twi_interval.toFixed(3));\n    //   // const sudoMax = Math.min(this.sudo_interval.toFixed(3) * 10, Number.MAX_VALUE);\n    //   // const sudoInterval = Number(this.sudo_interval.toFixed(3));\n\n    //   const chartDom = document.getElementById('Mchart');\n    //   const myChart = echarts.init(chartDom);\n    //   const option = {\n    //     title: {\n    //       text: 'Comparasion of Topic Discussion Rate Between Twitter and Mastodon',\n    //       textStyle: {\n    //         fontSize: 12,\n    //         fontWeight: 'bold',\n    //         // color: 'blue'\n    //       },\n    //       left: 'center',\n    //       top: 'top'\n    //     },\n    //     tooltip: {\n    //       trigger: 'axis',\n    //       axisPointer: {\n    //         type: 'cross',\n    //         crossStyle: {\n    //           color: '#999'\n    //         }\n    //       }\n    //     },\n    //     xAxis: [\n    //       {\n    //         type: 'category',\n    //         data: ['Employment', 'Agism', 'Sexism'],\n    //         axisPointer: {\n    //           type: 'shadow'\n    //         },\n    //         axisLabel: {\n    //           rotate: 0\n    //         }\n    //       }\n    //     ],\n    //     yAxis: [\n    //       {\n    //         type: 'value',\n    //         name: 'Twitter',\n    //         min: 0,\n    //         max: this.twi_max,\n    //         // max: 0.4,\n    //         interval: 0.1,\n    //         axisLabel: {\n    //           formatter: '{value} %'\n    //         }\n    //       },\n    //       {\n    //         type: 'value',\n    //         // name: 'Mastodon',\n    //         min: 0,\n    //         max: this.mastodon_max,\n    //         // max: 0.6,\n    //         interval: 0.1,\n    //         axisLabel: {\n    //           formatter: '{value} %'\n    //         }\n    //       }\n          \n    //     ],\n    //     series: [\n    //       {\n    //         name: 'Twitter',\n    //         type: 'bar',\n    //         itemStyle: {\n    //           color: 'rgba(0, 0, 0, 0.4)'\n    //         },\n    //         tooltip: {\n    //           formatter: '{c} %'\n    //         },\n    //         data: this.twi_data\n    //         // data: [0.3, 0.2, 0.1]\n    //       },\n    //       {\n    //         name: 'Sudo',\n    //         type: 'bar',\n    //         yAxisIndex: 1,\n    //         itemStyle: {\n    //           color: 'rgba(0, 0, 0, 0.4)'\n    //         },\n    //         tooltip: {\n    //           formatter: '{c} %'\n    //         },\n    //         data: this.mastodon_data\n    //         // data: [0.5, 0.4, 0.3]\n    //       }\n    //     ]\n    //   };\n    //     // Your chart options here\n      \n    //   myChart.setOption(option);\n    // }\n  }\n}\n</script>\n"],"mappings":";8BAEEA,mBAAA,CAA4D;EAAvDC,EAAE,EAAC,QAAQ;EAACC,KAAoC,EAApC;IAAA;IAAA;EAAA;;;;6DADjBC,mBAAA,+CAA8C,EAC9CC,UAA4D,EAC5DD,mBAAA,YAAe,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}